{"version":3,"sources":["../node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["Buffer","global","process","factory","modules","installedModules","__w_pdfjs_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","undefined","obj","_typeof","iterator","constructor","_slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","next","done","push","length","err","sliceIterator","TypeError","_util","_pdf_manager","_is_node","_is_node2","default","_message_handler","_primitives","maybePort","this","terminated","_capability","createPromiseCapability","finished","promise","finish","resolve","terminate","ensureNotTerminated","Error","PDFWorkerStream","msgHandler","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_this","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","sendWithPromise","then","data","isStreamingSupported","isRangeSupported","contentLength","PDFWorkerStreamRangeReader","begin","end","onProgress","getFullReader","assert","getRangeReader","reader","cancelAllRequests","reason","cancel","slice","forEach","headersReady","read","_ref","buffer","_ref2","setup","handler","port","testMessageProcessed","on","Uint8Array","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","e","send","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","pdfManager","cancelXHRs","WorkerTasks","apiVersion","docId","docBaseUrl","workerHandlerName","MessageHandler","startWorkerTask","task","finishWorkerTask","indexOf","splice","loadDocument","recoveryMode","loadDocumentCapability","parseSuccess","Promise","all","ensureDoc","_ref3","_ref4","numPages","fingerprint","parseFailure","reject","getPdfManager","evaluatorOptions","pdfManagerCapability","source","LocalPdfManager","password","ex","pdfStream","cachedChunks","fullRequest","disableAutoFetch","NetworkPdfManager","url","rangeChunkSize","sendProgressiveData","catch","loaded","readChunk","chunk","pdfFile","arraysToBytes","warn","flushChunks","arrayByteLength","total","Math","max","getPage","pageIndex","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","rotate","ref","userUnit","view","Ref","num","gen","pdfDocument","catalog","getPageIndex","ensureCatalog","id","requestLoadedStream","onLoadedStream","stream","bytes","xref","stats","intent","pageNum","start","Date","now","getOperatorList","renderInteractiveForms","operatorList","info","totalLength","featureId","UNSUPPORTED_FEATURES","unknown","wrappedException","minimumStackMessage","message","stack","toString","error","sink","onPull","desiredSize","onCancel","extractTextContent","normalizeWhitespace","combineTextItems","close","cleanup","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","PasswordException","code","updatePassword","pdfManagerReady","boundException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","UnknownErrorException","XRefParseException","forceDataSchema","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","isEvalSupported","newPdfManager","byteLength","setupDoc","initializeFromPort","window","self","postMessage","unreachable","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","ReadableStream","removeNullCharacters","readUint32","readUint16","readInt8","log2","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","getVerbosityLevel","getLookupTableFactory","getInheritableProperty","deprecated","createObjectURL","createBlob","bytesToString","FormatError","Util","TextRenderingMode","StreamType","PasswordResponses","NotImplementedException","NativeImageDecoding","MissingDataException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","VerbosityLevel","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","_streams_polyfill","ERRORS","WARNINGS","INFOS","msg","console","log","cond","details","status","NullCharactersRegExp","str","charCodeAt","rgbBuf","makeCssRgb","g","b","join","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","min","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","Number","isInteger","pos","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","apply","prependToArray","unshift","extendObj","obj1","obj2","inherit","sub","base","prop","loadScript","src","callback","script","document","createElement","setAttribute","onload","getElementsByTagName","appendChild","PDFStringTranslateTable","digits","contentType","Blob","type","arguments","URL","blob","ii","b1","b2","b3","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","item","itemLength","resultLength","set","String","fromCharCode","strBuf","chunkEnd","subarray","capability","dict","_ref$getArray","getArray","_ref$stopWhenFound","stopWhenFound","loopCount","values","initializer","lookup","ch","baseUrl","otherUrl","origin","other","absoluteUrl","protocol","isValidProtocol","buffer8","Uint32Array","Function","x","ceil","offset","replace","level","configurable","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","globalScope","_pdfjsCompatibilityChecked","isNodeJS","hasDOM","btoa","chars","from","atob","input","scripts","Element","remove","parentNode","removeChild","includes","isNaN","WeakMap","hasWorkingUrl","u","pathname","href","relative","relativePathDotMapping","EOF","ALPHA","ALPHANUMERIC","JURL","_isInvalid","_url","authority","_username","_password","_isRelative","host","_query","_fragment","clear","parse","_scheme","_port","_host","hostname","_path","_schemeData","search","hash","_","OriginalURL","revokeObjectURL","isRelativeScheme","scheme","invalid","IDNAToASCII","h","percentEscape","unicode","percentEscapeQuery","stateOverride","errors","state","cursor","seenAt","seenBracket","loop","test","nextC","nextNextC","pop","cp","tempC","temp","parseInt","tmp","$export","context","P","F","searchString","core","hide","redefine","ctx","own","out","exp","IS_FORCED","IS_GLOBAL","G","IS_PROTO","IS_BIND","B","target","S","expProto","U","W","R","__g","version","__e","dP","createDesc","f","anObject","IE8_DOM_DEFINE","toPrimitive","O","Attributes","isObject","it","exec","is","fn","val","valueOf","bitmap","has","SRC","$toString","TPL","split","inspectSource","safe","isFunction","px","random","concat","aFunction","that","isRegExp","defined","NAME","cof","MATCH","store","uid","_Symbol","USE_SYMBOL","copyright","KEY","re","$includes","el","toIObject","toLength","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","index","IObject","propertyIsEnumerable","toInteger","floor","UNSCOPABLES","ArrayProto","LN2","isFinite","classof","TAG","ARG","T","tryGet","callee","$at","iterated","_t","point","TO_STRING","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","returnThis","Base","Constructor","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","descriptor","dPs","enumBugKeys","IE_PROTO","Empty","_createDict","iframeDocument","iframe","style","display","contentWindow","open","write","lt","Properties","getKeys","defineProperties","$keys","arrayIndexOf","names","shared","documentElement","def","tag","stat","toObject","ObjectProto","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","addToUnscopables","step","_k","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","userAgent","promiseResolve","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","run","reaction","exited","fail","domain","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","C","$$reject","iter","iterable","remaining","$index","alreadyCalled","race","forbiddenField","isArrayIter","getIterFn","BREAK","RETURN","_exports","iterFn","ret","getIteratorMethod","SPECIES","D","defer","channel","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","listener","event","args","nextTick","port2","port1","onmessage","addEventListener","importScripts","setTimeout","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","last","flush","parent","navigator","standalone","toggle","node","createTextNode","observe","characterData","$$resolve","promiseCapability","DESCRIPTORS","SAFE_CLOSING","riter","skipClosing","finally","onFinally","try","callbackfn","InternalMap","each","meta","assign","weak","fails","validate","getWeak","isExtensible","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","NEED","method","_f","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","res","original","arg","META","setDesc","FREEZE","preventExtensions","setMeta","w","fastKey","onFreeze","gOPS","pIE","$assign","A","K","k","aLen","getSymbols","isEnum","j","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","entry","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","instance","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","setPrototypeOf","check","buggy","__proto__","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","controller","_typeof2","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","dest","destOffset","srcOffset","CreateIterResultObject","IsFiniteNonNegativeNumber","Infinity","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","RangeError","ValidateAndNormalizeQueuingStrategy","size","AssertionError","rethrowAssertionErrorRejection","_createClass","props","protoProps","staticProps","_classCallCheck","_require","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","_ownerWritableStream","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","chunkSize","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategyHWM","IsWritableStreamDefaultController","startResult","WritableStreamMarkCloseRequestInFlight","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","shift","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","container","pair","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","ReadableStreamBYOBReader","options","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","action","isOrBecomesErrored","shutdownWithAction","shutdown","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","finalize","newError","isError","ReadableStreamReaderGenericRelease","pipeLoop","ReadableStreamDefaultReaderRead","_ref5","branches","ReadableStreamTee","ReadableStreamDefaultReader","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","pull","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","_stream","compositeReason","cancelResult","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","IsReadableStreamDisturbed","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","ArrayBuffer","isView","_controlledReadableStream","elementSize","DataView","BYTES_PER_ELEMENT","ctor","pullIntoDescriptor","byteOffset","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","__pullSteps","_underlyingSource","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerRespond","firstDescriptor","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","byteStreamControllerBrandCheckException","firstPendingPullInto","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueueChunkToQueue","transferredView","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerEnqueue","viewE","bufferE","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","ready","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInClosedState","remainderSize","remainder","ReadableByteStreamControllerRespondInReadableState","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","resolution","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_chunked_stream","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","requestRange","Stream","PDFDocument","_loadedStreamCapability","pdfNetworkStream","params","streamManager","ChunkedStreamManager","getStream","ensureHelper","requestAllChunks","onReceiveData","abort","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","getBaseStreams","allChunksLoaded","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","isEmpty","getByte","getUint16","b0","getInt32","getBytes","strEnd","peekByte","peekedByte","peekBytes","getByteRange","skip","reset","moveStart","makeSubStream","ChunkedStreamSubstream","missingChunks","subStream","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","sendRequest","rangeReader","chunkData","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","isProgressive","loadedRequests","requestIds","lastChunk","onError","Page","_obj","_annotation","_crypto","_parser","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","fontCache","builtInCMapCache","pdfFunctionFactory","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","_getInheritableProperty","isDict","Dict","merge","content","resources","mediaBox","cropBox","intersection","getContentStream","streams","fetchIfRef","StreamsSequenceStream","isStream","NullStream","loadResources","ObjectLoader","load","_this2","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","opList","OperatorList","transparency","hasBlendModes","annotationsPromise","_ref6","pageOpList","annotations","opListPromises","opLists","addOp","addOpList","_ref7","_this3","_ref8","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","XRef","PDFFunctionFactory","find","needle","limit","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","isName","catDict","pdfFormatVersion","acroForm","xfa","fields","linearization","Linearization","startXRef","found","mainXRefEntriesOffset","checkHeader","substring","parseStartXRef","setStartXRef","_this4","pageFactory","createPage","Catalog","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","trailer","validEntries","fileID","idArray","calculateMD5","hex","FileSpec","_colorspace","getCatalogObj","RefSetCache","pageKidsCountCache","pagePromises","metadata","streamRef","getRaw","isRef","encryptMetadata","encrypt","fetch","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","processed","RefSet","put","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","title","flags","color","rgbColor","ColorSpace","singletons","rgb","getRgb","outlineItem","unsafeUrl","newWindow","count","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","promises","translatedFonts","translated","getPageDict","nodesToVisit","currentPageIndex","currentNode","fetchAsync","objId","kids","pageRef","kidRef","parentRef","isRefsEqual","getAsync","kidPromises","kid","pagesBeforeRef","actionName","addDefaultProtocolToUrl","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","xrefstms","cache","streamTypes","fontTypes","startXRefQueue","trailerDict","indexObjects","readXRef","assignXref","ids","fileId","suppressEncryption","CipherTransformFactory","processXRefTable","parser","tableState","entryNum","streamPos","lexer","parserBuf1","buf1","parserBuf2","buf2","readXRefTable","isCmd","getObj","firstEntryNum","entryCount","free","uncompressed","processXRefStream","streamParameters","byteWidths","range","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","what","dataLength","skipped","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","startPos","endPos","checkPos","tokenStr","objToken","xrefTagOffset","Parser","Lexer","startXRefParsedCache","topDict","getEntry","xrefEntry","cacheEntry","fetchUncompressed","fetchCompressed","obj3","cmd","createCipherTransform","tableOffset","allowStreams","fetchIfRefAsync","tryFetch","NameOrNumberTree","_type","kidsOrEntries","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","_walk","nodesToRevisit","pendingRequests","baseStreams","foundMissingData","_i2","_ii2","Name","nameCache","nameValue","Cmd","cmdCache","cmdValue","nonSerializable","_map","__nonSerializable__","newXref","key1","key2","key3","dictArray","mergedDict","keyName","putAlias","aliasRef","thisArg","isEOF","v1","v2","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","MAX_ADLER32_LENGTH","computeAdler32","bytesLength","imageCache","refill","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","dictLength","beginInlineImagePos","filterName","filter","filterZero","imageStream","cacheKey","imageBytes","initialStreamPos","dictBytes","createStream","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","scanBytes","scanLength","makeFilter","maybeLength","filterArray","paramsArray","xrefStreamStats","PredictorStream","FlateStream","earlyChange","LZWStream","JpegStream","JpxStream","Ascii85Stream","AsciiHexStream","CCITTFaxStream","RunLengthStream","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","pow","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","firstDigit","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","hints","hintsLength","getHints","objectNumberFirst","endFirst","pageFirst","StringStream","DecodeStream","DecryptStream","arrayBuffer","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","newLength","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","code2","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","codeLengths","repeatLength","code1","dist","blockLen","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","maxDecodeLength","digit","repeatHeader","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","_ccitt","ccittFaxDecoder","CCITTFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","readNextChar","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","_arithmetic_decoder","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","decoder","contexts","getContexts","prev","bit","readBit","decodeIAID","Int8Array","ArithmeticDecoder","SegmentTypes","CodingTemplates","y","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","width","height","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","contextLabel","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","maxX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","i0","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","decode","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","s2","t2","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","header","segments","segment","randomAccess","processSegment","visitor","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","rowSize","Uint8ClampedArray","drawBitmap","regionInfo","mask","mask0","offset0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","cx_index","cx_mps","qeTableIcx","qeIcx","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","JpegError","DNLMarkerError","scanLines","EOIMarkerError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","component","col","blocksPerLine","decodeScan","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","parseDNLMarker","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","diff","blockData","pred","rs","huffmanTableAC","z","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v0","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","_ref$dnlScanLines","dnlScanLines","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","numSOSMarkers","quantizationTables","huffmanTablesAC","huffmanTablesDC","markerLoop","appData","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","precision","sofScanLines","componentIds","componentId","componentsCount","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","nextFileMarker","output","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Y","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","JpxImage","tileCount","tiles","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","top","srcPosition","dataPosition","imgRowSize","tileRowSize","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","tile","SIZ","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","scale","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","py","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","Float32Array","mu","epsilon","gainLog2","calculate","initializeTile","qcdOrQcc","QCC","QCD","COC","headerSize","lbox","tbox","jumpDataLength","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticallyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","fourComponents","y0items","y1items","y2items","y3items","component0","alpha01","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","setNeighborsSignificance","column","labels","i1","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","ll","iterate","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","gamma","calculateSHA512","calculateSHA384","calculateSHA256","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","keyLength","encryptBlock","tmp2","decryptBlock","h0","h1","h2","h3","paddedLength","padded","rotateArg","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","rotr","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","AESBaseCipher","_inv_s","_mix","_mixCol","bufferPosition","cipherKey","_keySize","_cyclesOfRepetition","_j","_j2","_j3","s0","s1","s3","_j4","_j5","_j6","_j7","_j8","_j9","_k2","sourceLength","iv","plain","_decrypt","_key","outputLength","lastBlock","psLen","_j10","_decryptBlock2","cipher","_encrypt","_i3","_j11","_AESBaseCipher","_rcon","_expandKey","rcon","t3","t4","_AESBaseCipher2","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","getRgbItem","getRgbBuffer","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","w2","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","resizeRgbImage","usesZeroToOneRange","cs","IR","parseToIR","fromIR","whitePoint","blackPoint","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFn","AlternateCS","LabCS","colorSpaces","resCS","altIR","isDefaultDecode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","defaultColor","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","AG","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","adjustToRange","decodeL","AGR","BGG","CGB","X","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","AnnotationBorderStyle","Annotation","_get","receiver","desc","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","evaluator","renderForms","appearanceDict","bbox","bounds","maxY","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","file","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","iCurr","fnArray","argsArray","match","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","map","maxLineHeight","currentX","currentY","img","imgWidth","imgHeight","imgData","dataOffset","iFirstPIMXO","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","firstPIXOArg0","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","NullOptimizer","messageHandler","optimizer","dependencies","_totalLength","weight","CHUNK_SIZE","addDependency","addDependencies","transfers","cached","getTransfers","_cmap","_fonts","_encodings","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","_ref3$options","fetchBuiltInCMap","cachedCMap","compressionType","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","checked","endTime","deferred","clone","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","_ref4$isInline","isInline","_ref4$forceDisableNat","forceDisableNativeImageDecoder","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","createImageData","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","isPDFFunction","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref5$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","operation","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref6$stateManager","_ref6$normalizeWhites","_ref6$combineTextItem","_ref6$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","ascent","descent","tsm","textHScale","textRise","fontMatrix","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","getNormalizedUnicodes","reverseIfRtl","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","abs","fakeSpaces","flushTextContentItem","enqueueChunk","enqueue","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","properties","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","getEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","StandardEncoding","WinAnsiEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","glyphsUnicodeMap","getGlyphsUnicode","substr","getUnicodeForGlyph","baseEncoding","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","cid","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","widths","glyphsWidths","defaultWidth","glyphsVMetrics","vmetrics","parseFloat","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","getSerifFonts","monospace","lookupName","getStdFontMap","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","getSymbolsFonts","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","char","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embeddedUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","tables","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","cff","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","bias","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","getUnicodeRangeFor","ascentScaled","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","strings","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","stdFontMap","nonStdFontMap","getNonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","getGlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","getSupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","getSupplementalGlyphMapForCalibri","unicodeCharCode","getDingbatsGlyphsUnicode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","nameIndex","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","op","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","stackDelta","NaN","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","valid","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","format","segIndex","offsetsCount","rangeOffset","offsetIndex","offsets","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","CFFParser","compiler","CFFCompiler","compile","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","getGlyphMapping","getCharCodes","charCodes","createCharCode","seacs","charset","getCharset","seac","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","charstring","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","mapSpecialUnicodeValues","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","subrs","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","CFF","CFFHeader","CFFTopDict","setByName","CFFStrings","globalSubrIndex","CFFIndex","charsetArray","CFFStandardStrings","CFFCharset","charStringsIndex","charStrings","privateDict","CFFPrivateDict","field","privateData","subrIndex","subrsIndex","charsets","isCIDFont","_charsets","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackFn","seacAnalysisEnabled","parseHeader","parseIndex","topDictIndex","stringIndex","topDictParsed","parseDict","createDict","parseNameIndex","parseStringIndex","parsePrivateDict","hasName","charStringOffset","getByName","charStringIndex","fontBBox","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","localSubrIndex","hdrSize","offSize","parseOperand","parseFloatOperand","operands","cffIndex","offsetSize","offsetStart","offsetEnd","Type","cffDict","setByKey","parseCharString","callDepth","stackSize","validationCommand","subrNumber","firstStackClearing","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","raw","predefined","ExpertEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset1","offset2","offset3","offset4","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","sanitizedName","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","MacExpertEncoding","encodingName","getSpecialPUASymbols","UnicodeRanges","charsLength","hexStr","nameLen","toUpperCase","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","isCFFCIDFont","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","arg1","arg2","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","numSubrs","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","num2","num1","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","fnObj","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c0","c1","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","operators","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","PostScriptCompiler","PostScriptEvaluator","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","parseArray","toNumberArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","toMultiArray","inputSize","encode","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref9","_ref10","fnRefs","fns","_ref11","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend","resolveCall","wrapReason","resolveOrReject","success","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","_processStreamMessage","isReply","_sourceName","_targetName","makeReasonSerializable","_createStreamSink","scope","queueingStrategy","startCapability","startCall","isClosed","pullCapability","pullCall","cancelCapability","cancelCall","sendStreamRequest","streamSink","isCancelled","lastDesiredSize","sinkCapability","sendStreamResponse","deleteStreamController","removeEventListener"],"mappings":"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AA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,iBACAA,E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,MAAA,IACAC,IAAA,MAGAD,MAAA,IACAC,IAAA,OAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,OAGAD,MAAA,KACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,IAAA,QAGAD,MAAA,MACAC,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,EAAA,gBACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,kBACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,yBACAA,EAAA,+BACAA,EAAA,yBACAA,EAAA,+BACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,qCACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,2BACAA,EAAA,6CACAA,EAAA,uCACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,oBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,oBACAA,EAAA,eACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,0BACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,+BACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,yBACAA,EAAA,2BAaAnB,EAAA6oI,wBAp5DA,SAAAn5H,GACA,OAAAA,GAAA,OAAAA,GAAA,MACA,EACEA,GAAA,OAAAA,GAAA,MACFwlI,IAAAxlI,MACE,MAAAA,EACF,GAEAA,GA64DA1P,EAAAynH,aAZA,SAAAz+F,GACA,IA/2CA9nB,EACAoxD,EA82CA8iF,EAAApsH,EAAA1lB,OACA,GAAA8xI,GAAA,IAh3CAl0I,EAg3CA8nB,EAAAlU,WAAA,GA/2CAw9C,EAAA6iF,EAAA,MACAj0I,GAAAoxD,EAAAnsD,OAAAjF,EAAAoxD,EAAAlsD,KAIAlF,IADAoxD,EAAA6iF,EAAA,KACAhvI,OAAAjF,EAAAoxD,EAAAlsD,MA22CA,OAAA4iB,EAGA,IADA,IAAAhnB,EAAA,GACA6X,EAAAu7H,EAAA,EAA+Bv7H,GAAA,EAASA,IACxC7X,GAAAgnB,EAAAnP,GAEA,OAAA7X,GAIAhC,EAAAk8H,mBAp4CA,SAAAh7H,GACA,QAAAhB,EAAA,EAAA2Z,EAAAs7H,EAAA7xI,OAA2CpD,EAAA2Z,EAAQ3Z,IAAA,CACnD,IAAAoyD,EAAA6iF,EAAAj1I,GACA,GAAAgB,GAAAoxD,EAAAnsD,OAAAjF,EAAAoxD,EAAAlsD,IACA,OAAAlG,EAGA,UA83CAF,EAAAwnH,wBACAxnH,EAAAwrH,mBA94DA,SAAAhrH,EAAA6qH,GACA,IAAAn/F,EAAAm/F,EAAA7qH,GACA,QAAA4B,IAAA8pB,EACA,OAAAA,EAEA,IAAA1rB,EACA,SAEA,SAAAA,EAAA,IACA,IAAA60I,EAAAC,EAAA90I,EAAA8C,OACA,OAAAgyI,GAAA,MAAA90I,EAAA,UAAAA,EAAA,GACA60I,EAAA70I,EAAA+qH,OAAA,OACG,MAAA+pB,GAAA,GAAAA,GAAA,GAGH,SAFAD,EAAA70I,EAAA+qH,OAAA,GAIA,GAAA8pB,MAAAE,gBACArpH,EAAAgB,SAAAmoH,EAAA,MACA,EACA,OAAAnpH,EAIA,WA03DA,SAAAjsB,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAkB,OAAA,IAEAlB,EAAAq9H,yBAAAj7H,EAEA,IAAAsB,EAAA5D,EAAA,GAEA61H,EAAA71H,EAAA,KAEAi7G,EAAAj7G,EAAA,KAEA46G,EAAA56G,EAAA,KAEAwzC,EAAAxzC,EAAA,KAEAu9H,EAAA,WACA,SAAAmY,EAAA1vI,EAAAmiB,GACA,OAAAniB,EAAAmiB,IAAA,GAAAniB,EAAAmiB,EAAA,OAAAniB,EAAAmiB,EAAA,MAAAniB,EAAAmiB,EAAA,GAEA,SAAAwtH,EAAA3vI,EAAAmiB,GACA,OAAAniB,EAAAmiB,IAAA,EAAAniB,EAAAmiB,EAAA,GAEA,SAAAytH,EAAA5vI,EAAA2H,EAAArH,GACA,IAEA87C,EAAAngD,EAAA7B,EAFA+nB,EAAA,IAAAwtH,EAAA3vI,EAAA2H,EAAA,GAAA+nI,EAAA1vI,EAAA2H,EAAA,GAAA+nI,EAAA1vI,EAAA2H,EAAA,IACAm4H,EAAA6P,EAAA3vI,EAAA2H,EAAAwa,GAEA,OAAA29G,EAAA,CACA6P,EAAA3vI,EAAA2H,EAAAwa,EAAA,GACA,IAAA0yG,EAAA8a,EAAA3vI,EAAA2H,EAAAwa,EAAA,MAGA,IAFAlmB,EAAA0L,EAAAwa,EAAA,GACAi6B,KACAhiD,EAAA,EAAiBA,EAAAy6H,EAAcz6H,IAAA6B,GAAA,EAC/BmgD,EAAAhiD,IAAqBkG,IAAAqvI,EAAA3vI,EAAA/D,IAGrB,IADAA,GAAA,EACA7B,EAAA,EAAiBA,EAAAy6H,EAAcz6H,IAAA6B,GAAA,EAC/BmgD,EAAAhiD,GAAAuN,MAAAgoI,EAAA3vI,EAAA/D,GAEA,IAAA7B,EAAA,EAAiBA,EAAAy6H,EAAcz6H,IAAA6B,GAAA,EAC/BmgD,EAAAhiD,GAAAy1I,QAAAF,EAAA3vI,EAAA/D,GAEA,IAAA7B,EAAA,EAAiBA,EAAAy6H,EAAcz6H,IAAA6B,GAAA,GAC/B,IAAA6zI,EAAAH,EAAA3vI,EAAA/D,GACA,OAAA6zI,EAAA,CAGA1zF,EAAAhiD,GAAA4wD,OACA,QAAArtB,EAAA,EAAAqqB,EAAA5L,EAAAhiD,GAAAkG,IAAA87C,EAAAhiD,GAAAuN,MAAA,EAAiEg2B,EAAAqqB,EAAQrqB,IACzEye,EAAAhiD,GAAA4wD,IAAArtB,GAAAgyG,EAAA3vI,EAAA/D,EAAA6zI,GACAA,GAAA,GAGA,OAAA1zF,EACK,QAAA0jF,EAAA,CACL4P,EAAA1vI,EAAA2H,EAAAwa,EAAA,GACA,IAAA4tH,EAAAL,EAAA1vI,EAAA2H,EAAAwa,EAAA,IAGA,IAFAlmB,EAAA0L,EAAAwa,EAAA,GACAi6B,KACAhiD,EAAA,EAAiBA,EAAA21I,EAAY31I,IAC7BgiD,EAAA7+C,MACAoK,MAAA+nI,EAAA1vI,EAAA/D,GACAqE,IAAAovI,EAAA1vI,EAAA/D,EAAA,GACA4zI,QAAAH,EAAA1vI,EAAA/D,EAAA,GAAAyzI,EAAA1vI,EAAA/D,KAEAA,GAAA,GAEA,OAAAmgD,EAEA,UAAAx+C,EAAAoP,YAAA,qBAAA8yH,GAEA,SAAAkQ,EAAAhwI,EAAA2H,EAAArH,EAAAymI,GACA,IAEAnU,EADA,IAAA/C,EAAAkR,UAAA,IAAAvzF,EAAAwK,OAAAh4C,EAAA2H,EAAArH,EAAAqH,MAAAo/H,GACA7hH,QACA,OACAk1F,OAAAwY,EAAAkT,YAAA+F,QACAjH,MAAAhS,EAAAjkE,QAAAo3E,aAAAnT,EAAAjkE,QAAAo3E,YAAAK,YAAAxT,EAAAjkE,QAAAo3E,YAAAK,WAAAyF,QACAoE,OAAArd,EAAA4S,iBAAA5S,EAAA4S,gBAAAqG,QACAqE,aAAAtd,EAAA0T,UACA8B,SAAAxV,EAAAwV,SACAF,QAAAtV,EAAAsV,SAyBA,SAAAiI,EAAA/zF,EAAAh2B,GAKA,IAJA,IAAAxc,EAAAwc,EAAApX,WAAA,GACAs8H,EAAA,EACAjxI,EAAA,EACAY,EAAAmhD,EAAA5+C,OAAA,EACAnD,EAAAY,GAAA,CACA,IAAAT,EAAAH,EAAAY,EAAA,KACA2O,EAAAwyC,EAAA5hD,GAAAmN,MACA1M,EAAAT,EAAA,EAEAH,EAAAG,EAMA,OAHA4hD,EAAA/hD,GAAAsN,OAAAiC,MAAAwyC,EAAA/hD,GAAAiG,MACAgrI,EAAAlvF,EAAA/hD,GAAAw1I,SAAAzzF,EAAA/hD,GAAA2wD,IAAA5O,EAAA/hD,GAAA2wD,IAAAphD,EAAAwyC,EAAA/hD,GAAAsN,OAAAiC,GAAA,QAGAk9G,SAAAl9G,EACAwqH,QAAAkX,GA2gBA,SAAA8E,EAAA9vB,GACAliH,KAAAiyI,eAAAx1I,OAAAY,OAAA,MACA2C,KAAAkyI,0BAAAz1I,OAAAY,OAAA,MACA2C,KAAAkiH,aAmDA,SAAAiwB,EAAAn2B,EAAAwM,EAAAtG,GACAA,MAAA,uBACA8vB,EAAA91I,KAAA8D,KAAAkiH,GACAliH,KAAAg8G,SACAh8G,KAAAwoH,OAOA,SAAA4pB,EAAAC,EAAA7pB,EAAAtG,EAAAowB,GACApwB,MAAA,mBACA8vB,EAAA91I,KAAA8D,KAAAkiH,GACAliH,KAAAg8G,OAAAq2B,EAAAr2B,OACAh8G,KAAA6xI,OAAAQ,EAAAR,WACA7xI,KAAAwmI,MAAA6L,EAAA7L,UACAxmI,KAAAwoH,OACAxoH,KAAAsyI,iBAAA,EAAAz7B,EAAAuQ,oBACApnH,KAAAuyI,WAAAvyI,KAAA6xI,OAAAzyI,OAAA,SAAAY,KAAA6xI,OAAAzyI,OAAA,iBACAY,KAAAwyI,UAAAxyI,KAAAwmI,MAAApnI,OAAA,SAAAY,KAAAwmI,MAAApnI,OAAA,iBACAY,KAAA8xI,aAAAO,EAAAP,aACA9xI,KAAAgqI,SAAAqI,EAAArI,SACAhqI,KAAA8pI,QAAAuI,EAAAvI,QAOA,OA/EAkI,EAAAr0I,WACA++G,UAAA,SAAA10F,GACA,IAAAwgG,EAAAupB,EAAA/xI,KAAAwoH,KAAAxgG,GACAyD,EAAAzrB,KAAAiyI,eAAAzpB,EAAAwN,SAQA,OAPAvqG,IACAA,EAAAzrB,KAAAyyI,aAAAzyI,KAAAg8G,OAAAwM,EAAAwN,SAAAxN,EAAAwN,SACAh2H,KAAAiyI,eAAAzpB,EAAAwN,SAAAvqG,QAEAvtB,IAAA8B,KAAAkyI,0BAAA1pB,EAAAE,YACA1oH,KAAAkyI,0BAAA1pB,EAAAE,UAAAF,EAAAwN,SAEAvqG,GAEAgnH,aAAA,SAAAjnI,EAAAwqH,GACA,IAAAxqH,GAAA,IAAAA,EAAApM,QAAA,KAAAoM,EAAA,GACA,MArBA,GAuBA,IAAA02G,EAAAliH,KAAAkiH,WACA,GAAAliH,KAAA8xI,aAAA,CACA,IAAApG,EAAA1rI,KAAAgqI,SAAA2B,WAAA3V,GACA,GAAA0V,GAAA,GAAAA,EAAA1rI,KAAA8pI,QAAA1qI,OAEA8iH,EADAliH,KAAA8pI,QAAA4B,GACAlC,UAAA,eAAAhqI,EAAAuQ,0BAEA,EAAAvQ,EAAA4H,MAAA,qCAGA,IAAAsrI,KAYA,OAXAA,EAAAvzI,MAAiB2xD,IAAA,SACjB4hF,EAAAvzI,MACA2xD,IAAA,YACAv2B,KAAA2nF,EAAAv/G,UAEA+vI,EAAAvzI,MACA2xD,IAAA,QACAv2B,MAAA,kBAEAv6B,KAAA2yI,iBAAAnnI,EAAAknI,EAAA1c,GACA0c,EAAAvzI,MAAiB2xD,IAAA,YACjB4hF,GAEAC,iBAAA,YACA,EAAAnzI,EAAAuN,aAAA,4CAEAyvG,aAAA,SAAAx0F,GACA,IAAAwgG,EAAAupB,EAAA/xI,KAAAwoH,KAAAxgG,GACA,YAAA9pB,IAAA8B,KAAAiyI,eAAAzpB,EAAAwN,eAAA93H,IAAA8B,KAAAkyI,0BAAA1pB,EAAAE,YASAlpH,EAAAqP,KAAAwF,QAAA89H,EAAAH,GACAW,iBAAA,SAAAnnI,EAAAknI,IArkBA,SAAAE,EAAApnI,EAAAknI,EAAA72H,GACA,SAAAnF,EAAAmN,EAAA8gD,GACA+tE,EAAAvzI,MACA2xD,IAAA,SACAv2B,MAAA1W,EAAA8gD,KAGA,SAAAhuD,EAAAkN,EAAA8gD,GACA+tE,EAAAvzI,MACA2xD,IAAA,SACAv2B,MAAA1W,EAAA8gD,KAGA,SAAAkuE,EAAAC,EAAAC,EAAAlvH,EAAA8gD,GACA+tE,EAAAvzI,MACA2xD,IAAA,mBACAv2B,MAAAu4G,EAAAC,EAAAlvH,EAAA8gD,KAGA,IAEAld,EAFAzrD,EAAA,EACAg3I,GAAAxnI,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,YAEA6nB,EAAA,EACA8gD,EAAA,EAEA,GADA3oE,GAAA,GACAg3I,EAAA,EACA,GACAvrF,EAAAj8C,EAAAxP,IAAA,EAAAwP,EAAAxP,EAAA,GACA,IAEAi3I,EAAAC,EAFA9E,EAAA5iI,EAAAxP,EAAA,MAAAwP,EAAAxP,EAAA,GACAA,GAAA,EAEA,EAAAyrD,GACAwrF,GAAAznI,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,YACAk3I,GAAA1nI,EAAAxP,EAAA,OAAAwP,EAAAxP,EAAA,YACAA,GAAA,IAEAi3I,EAAAznI,EAAAxP,KACAk3I,EAAA1nI,EAAAxP,MAEA,EAAAyrD,GACA5jC,EAAAovH,EACAtuE,EAAAuuE,IAEArvH,EAAA,EACA8gD,EAAA,GAEA,IAAAsc,EAAA,EACAC,EAAA,EACAiyD,EAAA,EACAC,EAAA,EACA,EAAA3rF,GACAw5B,EAAAC,GAAA11E,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,mBACAA,GAAA,GACS,GAAAyrD,GACTw5B,GAAAz1E,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,mBACAklF,GAAA11E,EAAAxP,EAAA,OAAAwP,EAAAxP,EAAA,mBACAA,GAAA,GACS,IAAAyrD,IACTw5B,GAAAz1E,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,mBACAm3I,GAAA3nI,EAAAxP,EAAA,OAAAwP,EAAAxP,EAAA,mBACAo3I,GAAA5nI,EAAAxP,EAAA,OAAAwP,EAAAxP,EAAA,mBACAklF,GAAA11E,EAAAxP,EAAA,OAAAwP,EAAAxP,EAAA,mBACAA,GAAA,GAEA,IAAAq3I,EAAAx3H,EAAAmgG,OAAAoyB,GACAiF,IACAX,EAAAvzI,MAAqB2xD,IAAA,SACrB4hF,EAAAvzI,MACA2xD,IAAA,YACAv2B,MAAA0mD,EAAAkyD,EAAAC,EAAAlyD,EAAAr9D,EAAA8gD,KAEAiuE,EAAAS,EAAAX,EAAA72H,GACA62H,EAAAvzI,MAAqB2xD,IAAA,mBAEd,GAAArJ,OACF,CACL,IACAloB,EAAAqqB,EADA0pF,KAEA,IAAA/zG,EAAA,EAAiBA,EAAAyzG,EAAsBzzG,IACvC+zG,EAAAn0I,KAAAqM,EAAAxP,IAAA,EAAAwP,EAAAxP,EAAA,IACAA,GAAA,EAGAA,GAAA,GADAwP,EAAAxP,IAAA,EAAAwP,EAAAxP,EAAA,IAIA,IAFA,IAAAu3I,EAAAD,IAAAl0I,OAAA,KACAo0I,KACAA,EAAAp0I,OAAAm0I,GAAA,CAEA,IAAAjY,EAAA,EAIA,IAHA,GAFA7zE,EAAAj8C,EAAAxP,QAGAs/H,GAAA9vH,EAAAxP,MAEAs/H,KAAA,GACAkY,EAAAr0I,MAAuBsoD,UAGvB,IAAAloB,EAAA,EAAiBA,EAAAg0G,EAAoBh0G,IAAA,CACrC,UAAAi0G,EAAAj0G,GAAAkoB,OACA,OACA5jC,IAAArY,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,YACAA,GAAA,EACA,MACA,OACA6nB,GAAArY,EAAAxP,KACA,MACA,QACA6nB,GAAArY,EAAAxP,KAGAw3I,EAAAj0G,GAAA1b,IAEA,IAAA0b,EAAA,EAAiBA,EAAAg0G,EAAoBh0G,IAAA,CACrC,UAAAi0G,EAAAj0G,GAAAkoB,OACA,OACAkd,IAAAn5D,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,YACAA,GAAA,EACA,MACA,OACA2oE,GAAAn5D,EAAAxP,KACA,MACA,QACA2oE,GAAAn5D,EAAAxP,KAGAw3I,EAAAj0G,GAAAolC,IAEA,IAAA8uE,EAAA,EACA,IAAAz3I,EAAA,EAAiBA,EAAAg3I,EAAsBh3I,IAAA,CACvC,IAAA03I,EAAAJ,EAAAt3I,GACA23I,EAAAH,EAAA7wI,MAAA8wI,EAAAC,EAAA,GACA,KAAAC,EAAA,GAAAlsF,MACAksF,EAAAx0I,KAAAw0I,EAAA,SACS,KAAAA,IAAAv0I,OAAA,GAAAqoD,MACTksF,EAAA1/H,QAAA0/H,IAAAv0I,OAAA,QACS,CACT,IAAAvB,GACA4pD,MAAA,EACA5jC,GAAA8vH,EAAA,GAAA9vH,EAAA8vH,IAAAv0I,OAAA,GAAAykB,GAAA,EACA8gD,GAAAgvE,EAAA,GAAAhvE,EAAAgvE,IAAAv0I,OAAA,GAAAulE,GAAA,GAEAgvE,EAAA1/H,QAAApW,GACA81I,EAAAx0I,KAAAtB,GAGA,IADA6Y,EAAAi9H,EAAA,GAAA9vH,EAAA8vH,EAAA,GAAAhvE,GACAplC,EAAA,EAAAqqB,EAAA+pF,EAAAv0I,OAAwCmgC,EAAAqqB,EAAQrqB,IAChD,EAAAo0G,EAAAp0G,GAAAkoB,MACA9wC,EAAAg9H,EAAAp0G,GAAA1b,EAAA8vH,EAAAp0G,GAAAolC,GACW,EAAAgvE,EAAAp0G,EAAA,GAAAkoB,OACXorF,EAAAc,EAAAp0G,GAAA1b,EAAA8vH,EAAAp0G,GAAAolC,EAAAgvE,EAAAp0G,EAAA,GAAA1b,EAAA8vH,EAAAp0G,EAAA,GAAAolC,GACAplC,KAEAszG,EAAAc,EAAAp0G,GAAA1b,EAAA8vH,EAAAp0G,GAAAolC,GAAAgvE,EAAAp0G,GAAA1b,EAAA8vH,EAAAp0G,EAAA,GAAA1b,GAAA,GAAA8vH,EAAAp0G,GAAAolC,EAAAgvE,EAAAp0G,EAAA,GAAAolC,GAAA,GAGA8uE,EAAAC,EAAA,IA4aAd,CAAApnI,EAAAknI,EAAA1yI,SAiBAR,EAAAqP,KAAAwF,QAAA+9H,EAAAJ,GACAW,iBAAA,SAAAnnI,EAAAknI,EAAA1c,IA1bA,SAAA4d,EAAApoI,EAAAknI,EAAA72H,EAAAm6G,GACA,IAAA3rH,KACAwZ,EAAA,EACA8gD,EAAA,EACAkvE,EAAA,EACA,SAAAn9H,EAAAmN,EAAA8gD,GACA+tE,EAAAvzI,MACA2xD,IAAA,SACAv2B,MAAA1W,EAAA8gD,KAGA,SAAAhuD,EAAAkN,EAAA8gD,GACA+tE,EAAAvzI,MACA2xD,IAAA,SACAv2B,MAAA1W,EAAA8gD,KAGA,SAAAmvE,EAAA/vD,EAAAK,EAAAtrB,EAAAk6B,EAAAnvE,EAAA8gD,GACA+tE,EAAAvzI,MACA2xD,IAAA,gBACAv2B,MAAAwpD,EAAAK,EAAAtrB,EAAAk6B,EAAAnvE,EAAA8gD,MAGA,SAAA79C,EAAAtb,GAEA,IADA,IAAAxP,EAAA,EACAA,EAAAwP,EAAApM,QAAA,CACA,IAEA0zI,EAAAiB,EAAAhB,EAAAiB,EAAA5vD,EAAA4O,EAAAx1F,EAAAy2I,EAFAC,GAAA,EACAniI,EAAAvG,EAAAxP,KAEA,OAAA+V,GACA,OAIA,OACA8hI,GAAAxpI,EAAAjL,QAAA,EACA80I,GAAA,EACA,MACA,OACAvvE,GAAAt6D,EAAAue,MACAlS,EAAAmN,EAAA8gD,GACAuvE,GAAA,EACA,MACA,OACA,KAAA7pI,EAAAjL,OAAA,GACAykB,GAAAxZ,EAAA0gC,QACA45B,GAAAt6D,EAAA0gC,QACAp0B,EAAAkN,EAAA8gD,GAEA,MACA,OACA,KAAAt6D,EAAAjL,OAAA,IAEAuX,EADAkN,GAAAxZ,EAAA0gC,QACA45B,GACA,IAAAt6D,EAAAjL,SAGAulE,GAAAt6D,EAAA0gC,QACAp0B,EAAAkN,EAAA8gD,GAEA,MACA,OACA,KAAAt6D,EAAAjL,OAAA,IACAulE,GAAAt6D,EAAA0gC,QACAp0B,EAAAkN,EAAA8gD,GACA,IAAAt6D,EAAAjL,SAIAuX,EADAkN,GAAAxZ,EAAA0gC,QACA45B,GAEA,MACA,OACA,KAAAt6D,EAAAjL,OAAA,GACA0zI,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GAEA,MACA,QAGA,GAFAnnE,EAAA6M,EAAAue,MACAqrH,EAAA,KACAp4H,EAAAi2H,aAAA,CACA,IAAApG,EAAA7vH,EAAAmuH,SAAA2B,WAAA3V,GACA,GAAA0V,GAAA,GAAAA,EAAA7vH,EAAAiuH,QAAA1qI,OAAA,CACA,IAAAyqI,EAAAhuH,EAAAiuH,QAAA4B,GACAlF,OAAA,EAIA,GAHAqD,EAAAlC,aAAAkC,EAAAlC,YAAAK,aACAxB,EAAAqD,EAAAlC,YAAAK,WAAAyF,SAEAjH,EAAA,CACA,IAAA2N,EAAA3N,EAAApnI,OAEA60I,EAAAzN,EADAhpI,GAAA22I,EAAA,SAAAA,EAAA,wBAIA,EAAA30I,EAAA4H,MAAA,0CAGA6sI,EAAAp4H,EAAA2qH,MAAAhpI,EAAAqe,EAAA22H,WAEAyB,GACAntH,EAAAmtH,GAEA,MACA,QACA,OACA,QAEA,OADAliI,EAAAvG,EAAAxP,MAEA,QAEA+3I,GADAjB,EAAAjvH,EAAAxZ,EAAA0gC,SACA1gC,EAAA0gC,QACAq5C,EAAAzf,EAAAt6D,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA+oG,EAAAhB,EAAAnuE,EAAAovE,EAAA3vD,EAAAvgE,EAAAugE,GAEA2vD,GADAjB,EAAAjvH,EAAAxZ,EAAA0gC,SACA1gC,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA+oG,EAAAhB,EAAA1uD,EAAA2vD,EAAApvE,EAAA9gD,EAAA8gD,GACA,MACA,QACAmuE,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GACAmuE,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GACAt6D,EAAAue,MACA,MACA,QAMAkrH,EALAhB,EAAAjvH,EAAAxZ,EAAA0gC,QACAq5C,EAAAzf,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAioD,EAAA5O,EAAA/5E,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACAioD,GAKA8gD,EAJAhB,EAAAjvH,EAAAxZ,EAAA0gC,QAIAioD,EAHA+gD,EAAAjB,EAAAzoI,EAAA0gC,QACAioD,EAAA3oF,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,GACA,MACA,QACA,IAAAif,EAAA//D,EACAogE,EAAAtf,EACAmuE,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GACAmuE,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EACApvE,EAAAqvE,EACAxsI,KAAAs8G,IAAAjgG,EAAA+/D,GAAAp8E,KAAAs8G,IAAAn/C,EAAAsf,GACApgE,GAAAxZ,EAAA0gC,QAEA45B,GAAAt6D,EAAA0gC,QAEA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GACA,MACA,QACA,UAAAnlE,EAAAoP,YAAA,wBAAAmD,GAEA,MACA,QACA,GAAA1H,EAAAjL,QAAA,GACA,IAAAg1I,EAAA/pI,EAAAue,MACAyrH,EAAAhqI,EAAAue,MACA+7C,EAAAt6D,EAAAue,MACA/E,EAAAxZ,EAAAue,MACA8pH,EAAAvzI,MAAyB2xD,IAAA,SACzB4hF,EAAAvzI,MACA2xD,IAAA,YACAv2B,MAAA1W,EAAA8gD,KAEA,IAAA6jD,EAAAupB,EAAAl2H,EAAA2sG,KAAArmG,OAAAC,aAAAvG,EAAAy2H,aAAA97B,EAAAiQ,iBAAA2tB,MACAR,EAAA/3H,EAAAmgG,OAAAwM,EAAAwN,SAAA0c,EAAA72H,EAAA2sG,EAAAwN,SACA0c,EAAAvzI,MAAyB2xD,IAAA,YACzB03D,EAAAupB,EAAAl2H,EAAA2sG,KAAArmG,OAAAC,aAAAvG,EAAAy2H,aAAA97B,EAAAiQ,iBAAA4tB,MACAT,EAAA/3H,EAAAmgG,OAAAwM,EAAAwN,SAAA0c,EAAA72H,EAAA2sG,EAAAwN,SAEA,OACA,QACA6d,GAAAxpI,EAAAjL,QAAA,EACA80I,GAAA,EACA,MACA,QAKA,QAEAl4I,IADA63I,GAAAxpI,EAAAjL,QAAA,GACA,KACA80I,GAAA,EACA,MACA,QACAvvE,GAAAt6D,EAAAue,MAEAlS,EADAmN,GAAAxZ,EAAAue,MACA+7C,GACAuvE,GAAA,EACA,MACA,QAEAx9H,EADAmN,GAAAxZ,EAAAue,MACA+7C,GACAuvE,GAAA,EACA,MACA,QACAL,GAAAxpI,EAAAjL,QAAA,EACA80I,GAAA,EACA,MACA,QACA,KAAA7pI,EAAAjL,OAAA,GACA0zI,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GAEA9gD,GAAAxZ,EAAA0gC,QACA45B,GAAAt6D,EAAA0gC,QACAp0B,EAAAkN,EAAA8gD,GACA,MACA,QACA,KAAAt6D,EAAAjL,OAAA,GACAykB,GAAAxZ,EAAA0gC,QACA45B,GAAAt6D,EAAA0gC,QACAp0B,EAAAkN,EAAA8gD,GAEAmuE,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GACA,MACA,QAIA,IAHAt6D,EAAAjL,OAAA,IACAykB,GAAAxZ,EAAA0gC,SAEA1gC,EAAAjL,OAAA,GACA0zI,EAAAjvH,EACAkvH,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EACApvE,EAAAqvE,EAAA3pI,EAAA0gC,QACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GAEA,MACA,QAIA,IAHAt6D,EAAAjL,OAAA,IACAulE,GAAAt6D,EAAA0gC,SAEA1gC,EAAAjL,OAAA,GAOA00I,EANAhB,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EACAovE,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,GAGA,MACA,QACA3pI,EAAAlL,MAAAqM,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,aACAA,GAAA,EACA,MACA,QACAwB,EAAA6M,EAAAue,MAAA/M,EAAA02H,YACA0B,EAAAp4H,EAAAg2H,OAAAr0I,KAEAspB,EAAAmtH,GAEA,MACA,QACA,KAAA5pI,EAAAjL,OAAA,IACA0zI,EAAAjvH,EACAkvH,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,GAAA,IAAA3pI,EAAAjL,OAAAiL,EAAA0gC,QAAA,GACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GACA,IAAAt6D,EAAAjL,SAGA0zI,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EACAovE,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QAEA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EADAnwH,EAAAkwH,GAAA,IAAA1pI,EAAAjL,OAAAiL,EAAA0gC,QAAA,GACA45B,GAEA,MACA,QACA,KAAAt6D,EAAAjL,OAAA,IACA0zI,EAAAjvH,EAAAxZ,EAAA0gC,QACAgoG,EAAApuE,EACAovE,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACA45B,EAAAqvE,EAAA3pI,EAAA0gC,QAEA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EADAnwH,EAAAkwH,GAAA,IAAA1pI,EAAAjL,OAAAiL,EAAA0gC,QAAA,GACA45B,GACA,IAAAt6D,EAAAjL,SAGA0zI,EAAAjvH,EACAkvH,EAAApuE,EAAAt6D,EAAA0gC,QACAgpG,EAAAjB,EAAAzoI,EAAA0gC,QACAipG,EAAAjB,EAAA1oI,EAAA0gC,QACAlnB,EAAAkwH,EAAA1pI,EAAA0gC,QACA45B,EAAAqvE,GAAA,IAAA3pI,EAAAjL,OAAAiL,EAAA0gC,QAAA,GACA+oG,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAnwH,EAAA8gD,GAEA,MACA,QACA,GAAA5yD,EAAA,GACA,UAAAvS,EAAAoP,YAAA,qBAAAmD,GAEAA,EAAA,IACA1H,EAAAlL,KAAA4S,EAAA,KACaA,EAAA,IACb1H,EAAAlL,KAAA,KAAA4S,EAAA,KAAAvG,EAAAxP,KAAA,KACa+V,EAAA,IACb1H,EAAAlL,KAAA,MAAA4S,EAAA,KAAAvG,EAAAxP,KAAA,MAEAqO,EAAAlL,MAAAqM,EAAAxP,IAAA,GAAAwP,EAAAxP,EAAA,OAAAwP,EAAAxP,EAAA,MAAAwP,EAAAxP,EAAA,WACAA,GAAA,GAIAk4I,IACA7pI,EAAAjL,OAAA,IAIA0nB,CAAAtb,GAoFAooI,CAAApoI,EAAAknI,EAAA1yI,KAAAg2H,OAIA34H,OAAA,SAAAwe,EAAA8sH,GAIA,IAHA,IACAngB,EAAAsS,EAAA2E,EAAAjL,EAAA4K,EAAA7H,EADA31H,EAAA,IAAA2B,WAAAsY,EAAAja,MAEA8xH,EAAA6d,EAAA3vI,EAAA,GACA5F,EAAA,EAAA6B,EAAA,GAA6B7B,EAAA03H,EAAe13H,IAAA6B,GAAA,IAC5C,IAAAs0B,GAAA,EAAA3yB,EAAAmP,eAAA/M,EAAA2gB,SAAA1kB,IAAA,IACAkmB,EAAAutH,EAAA1vI,EAAA/D,EAAA,GACAuB,EAAAkyI,EAAA1vI,EAAA/D,EAAA,IACA,OAAAs0B,GACA,WACAq2F,EAAAgpB,EAAA5vI,EAAAmiB,GACA,MACA,WACA+2G,EAAAl5H,EAAA2gB,SAAAwB,IAAA3kB,GACA,MACA,WACAqgI,EAAA79H,EAAA2gB,SAAAwB,IAAA3kB,GACA,MACA,WACAm4H,EAAAga,EAAA3vI,EAAAmiB,EAAA,IACAq7G,EAAAmS,EAAA3vI,EAAAmiB,EAAA,IACA,MACA,WACAywG,EAAAod,EAAAhwI,EAAAmiB,IAAA3kB,EAAAupI,IAIA,GAAA7N,EAAA,CACA,IAAA5Y,EAAAqV,GAAA,EAAAA,EAAA,MAAAA,EAAA,KAAA17G,EAAAqmG,WACA,WAAAiwB,EArqBA,SAAArX,EAAA2E,EAAAF,GACA,IAAAG,EAAAC,EACAJ,GACAG,EAAA,EACAC,EAAA,SAAA/9H,EAAAmiB,GACA,OAAAniB,EAAAmiB,IAAA,GAAAniB,EAAAmiB,EAAA,OAAAniB,EAAAmiB,EAAA,MAAAniB,EAAAmiB,EAAA,MAGA27G,EAAA,EACAC,EAAA,SAAA/9H,EAAAmiB,GACA,OAAAniB,EAAAmiB,IAAA,EAAAniB,EAAAmiB,EAAA,QAKA,IAFA,IAAAi4F,KACA1hC,EAAAqlD,EAAAF,EAAA,GACAlgG,EAAAmgG,EAA0BngG,EAAAkgG,EAAArgI,OAAiBmgC,GAAAmgG,EAAA,CAC3C,IAAAxhD,EAAAyhD,EAAAF,EAAAlgG,GACAy8E,EAAA78G,KAAA27H,EAAAv4G,SAAA+3D,EAAA4D,IACA5D,EAAA4D,EAEA,OAAA89B,EAipBAs4B,CAAAxZ,EAAA2E,EAAAL,GAAA5W,EAAAtG,GAEA,WAAAkwB,EAAA5d,EAAAhM,EAAA3sG,EAAAqmG,WAAArmG,EAAAy2H,gBA3uBA,GA+uBAx2I,EAAAq9H,uBAIA,SAAAp9H,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAkB,OAAA,IAEAlB,EAAAmqI,iBAAA/nI,EAEA,IAAAsB,EAAA5D,EAAA,GAEA46G,EAAA56G,EAAA,KAEAwzC,EAAAxzC,EAAA,KAGA24I,EAAA,WACA,IAAAC,GAGA,GAHAA,GAIA,GAJAA,GAKA,GALAA,GAMA,GANAA,GAOA,GAPAA,GASA,OATAA,GAWA,IAXAA,GAYA,IAZAA,GAaA,IAbAA,GAcA,IAdAA,GAeA,IAEA,SAAAD,IACAv0I,KAAAmlE,MAAA,EACAnlE,KAAAy0I,IAAA,EACAz0I,KAAA00I,SAAA,EACA10I,KAAAghF,UACAhhF,KAAAqK,SA0NA,OAxNAkqI,EAAA52I,WACAg3H,QAAA,SAAAggB,EAAAnO,EAAAmC,GAIA,IAHA,IAEAiM,EAAAC,EAAAvJ,EAFAnjF,EAAAwsF,EAAAv1I,OACAmL,GAAA,EAEAvO,EAAA,EAAqBA,EAAAmsD,EAAWnsD,IAAA,CAChC,IAAAgB,EAAA23I,EAAA34I,GACA,GAAAgB,EAAA,IAIA,OAHA,KAAAA,IACAA,MAAA,GAAA23I,IAAA34I,IAEAgB,GACA,OAOA,OAEAgD,KAAAqK,SACA,MAIA,OACA,GAAArK,KAAA00I,QAAA,CACA,GAAA10I,KAAAqK,MAAAjL,OAAA,GACAmL,GAAA,EACA,MAEA,IAAAuqI,EAAA90I,KAAAqK,MAAAue,MACA5oB,KAAAqK,MAAAlL,KAAA,EAAA21I,GACA,MAEAvqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,OACAjqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,OACAjqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,OACAjqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,OACAjqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,OACAx0I,KAAAqK,SACA,MACA,QACA,GAAArK,KAAAqK,MAAAjL,OAAA,GACAmL,GAAA,EACA,MAGA,IAAAi8H,EADA8E,EAAAtrI,KAAAqK,MAAAue,OACA,CACAre,GAAA,EACA,MAEAA,EAAAvK,KAAA20H,QAAA6R,EAAA8E,GAAA9E,EAAAmC,GACA,MACA,QACA,OAAAp+H,EACA,QACA,GAAAvK,KAAAqK,MAAAjL,OAAA,GACAmL,GAAA,EACA,MAEAqqI,EAAA50I,KAAAqK,MAAAue,MACAisH,EAAA70I,KAAAqK,MAAAue,MACA5oB,KAAAy0I,IAAAI,EACA70I,KAAAmlE,MAAAyvE,EACA50I,KAAAqK,MAAAlL,KAAAy1I,EAAAC,GACAtqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,QACAx0I,KAAAghF,OAAA7hF,KAAAq1I,EAAA,IACA,MACA,QACA,GAAAx0I,KAAA00I,QACA,MAEAnqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,QACA,GAAAx0I,KAAA00I,QAAA,CACA10I,KAAAqK,MAAAlL,KAAA,GACA,MAEAoL,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,QACAjqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,QACAjqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,UAGA,UAOA,UAEAx0I,KAAAqK,SACA,MAIA,UACAs+H,GACA3oI,KAAA2jI,KAAA3jI,KAAAqK,MAAApF,QAAA,KACAsF,EAAAvK,KAAA+0I,eAAA,EAAAP,IAEAjqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GAEA,MACA,UACA,GAAAx0I,KAAAqK,MAAAjL,OAAA,GACAmL,GAAA,EACA,MAEAvK,KAAAqK,MAAAue,MACAgsH,EAAA50I,KAAAqK,MAAAue,MACA,IAAAosH,EAAAh1I,KAAAqK,MAAAue,MACAisH,EAAA70I,KAAAqK,MAAAue,MACA5oB,KAAAy0I,IAAAI,EACA70I,KAAAmlE,MAAAyvE,EACA50I,KAAAqK,MAAAlL,KAAAy1I,EAAAC,EAAAG,GACAzqI,EAAAvK,KAAA+0I,eAAA,EAAAP,GACA,MACA,UACA,GAAAx0I,KAAAqK,MAAAjL,OAAA,GACAmL,GAAA,EACA,MAEA,IAAA0qI,EAAAj1I,KAAAqK,MAAAue,MACAssH,EAAAl1I,KAAAqK,MAAAue,MACA5oB,KAAAqK,MAAAlL,KAAA+1I,EAAAD,GACA,MACA,UACA,GAAAj1I,KAAAqK,MAAAjL,OAAA,GACAmL,GAAA,EACA,MAEA+gI,EAAAtrI,KAAAqK,MAAAue,MACA,IAAAwkG,EAAAptH,KAAAqK,MAAAue,MACA,OAAA0iH,GAAA,IAAAle,EAAA,CACA,IAAA+nB,EAAAn1I,KAAAqK,MAAApF,OAAAjF,KAAAqK,MAAAjL,OAAA,OACAY,KAAAqK,MAAAlL,KAAAg2I,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACA5qI,EAAAvK,KAAA+0I,eAAA,GAAAP,GAAA,GACAx0I,KAAA00I,SAAA,EACA10I,KAAAqK,MAAAlL,KAAAg2I,EAAA,IAAAA,EAAA,UACe,IAAA7J,GAAA,IAAAle,IACfptH,KAAA00I,SAAA,GAEA,MACA,UACA,MACA,UACA10I,KAAAqK,SACA,MACA,SACA,EAAA7K,EAAA4H,MAAA,yCAAApK,EAAA,KAGA,GAAAuN,EACA,WAGSvN,GAAA,IACTA,GAAA,IAEAA,EADSA,GAAA,IACT,KAAAA,EAAA,KAAA23I,IAAA34I,GAAA,IACSgB,GAAA,KACT,KAAAA,EAAA,KAAA23I,IAAA34I,GAAA,KAEA,IAAA24I,IAAA34I,KAAA,QAAA24I,IAAA34I,KAAA,QAAA24I,IAAA34I,KAAA,OAAA24I,IAAA34I,KAAA,EAEAgE,KAAAqK,MAAAlL,KAAAnC,GAEA,OAAAuN,GAEAwqI,eAAA,SAAAK,EAAAC,EAAAC,GACA,IAAAC,EAAAv1I,KAAAqK,MAAAjL,OACA,GAAAg2I,EAAAG,EACA,SAGA,IADA,IAAAhsI,EAAAgsI,EAAAH,EACAp5I,EAAAuN,EAAyBvN,EAAAu5I,EAAiBv5I,IAAA,CAC1C,IAAAgB,EAAAgD,KAAAqK,MAAArO,GACAsX,OAAAC,UAAAvW,GACAgD,KAAAghF,OAAA7hF,KAAA,GAAAnC,GAAA,UAAAA,IAEAA,EAAA,MAAAA,EAAA,EACAgD,KAAAghF,OAAA7hF,KAAA,IAAAnC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IASA,OANAgD,KAAAghF,OAAA7hF,KAAA4U,MAAA/T,KAAAghF,OAAAq0D,GACAC,EACAt1I,KAAAqK,MAAApF,OAAAsE,EAAA6rI,GAEAp1I,KAAAqK,MAAAjL,OAAA,GAEA,IAGAm1I,EAjPA,GAmPAtO,EAAA,WACA,IAAAuP,EAAA,MAEA,SAAAC,EAAAjqI,GACA,OAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAEA,SAAAmzD,EAAA/8D,EAAAtE,EAAAo4I,GACA,GAAAA,GAAA9zI,EAAAxC,OACA,WAAAmE,WAAA,GAEA,IAGAvH,EACAujC,EAJA1iC,EAAA,EAAAS,EAKA,IAAAtB,EAAA,EAAeA,EAAA05I,EAAmB15I,IAClCa,EALA,OAKA+E,EAAA5F,GAAAa,GAJA,MAIA,MAEA,IAAAsrD,EAAAvmD,EAAAxC,OAAAs2I,EACAC,EAAA,IAAApyI,WAAA4kD,GACA,IAAAnsD,EAAA05I,EAAAn2G,EAAA,EAAkCA,EAAA4oB,EAAWnsD,IAAAujC,IAAA,CAC7C,IAAAviC,EAAA4E,EAAA5F,GACA25I,EAAAp2G,GAAAviC,EAAAH,GAAA,EACAA,EAZA,OAYAG,EAAAH,GAXA,MAWA,MAEA,OAAA84I,EA4BA,SAAAC,EAAAx5I,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA,SAAA6pI,EAAAh9H,EAAA4sI,EAAAlN,GACA,GAAAkN,EAAA,CACA,IAAAj0I,EAAAqH,EAAAgzC,WACA65F,IAAAL,EAAA7zI,EAAA,KAAA6zI,EAAA7zI,EAAA,KAAA6zI,EAAA7zI,EAAA,KAAA6zI,EAAA7zI,EAAA,KACAqH,EAAA,IAAAmmC,EAAAwK,OAAAk8F,EAAAn3E,EAAA/8D,EAAA4zI,EAAA,GAjCA,SAAA5zI,EAAAtE,EAAAo4I,GACA,IAMA15I,EAAAujC,EANA1iC,EAAA,EAAAS,EAGA6qD,EAAAvmD,EAAAxC,OAEAu2I,EAAA,IAAApyI,WADA4kD,IAAA,GAGA,IAAAnsD,EAAA,EAAAujC,EAAA,EAAsBvjC,EAAAmsD,EAAWnsD,IAAA,CACjC,IAAA+5I,EAAAn0I,EAAA5F,GACA,GAAAy5I,EAAAM,GAAA,CAIA,IAAAC,EACA,IAFAh6I,IAEAA,EAAAmsD,IAAAstF,EAAAO,EAAAp0I,EAAA5F,KACAA,IAEA,GAAAA,EAAAmsD,EAAA,CACA,IAAAnrD,EAAAgsB,SAAA7G,OAAAC,aAAA2zH,EAAAC,GAAA,IACAL,EAAAp2G,KAAAviC,EAAAH,GAAA,EACAA,EAnBA,OAmBAG,EAAAH,GAlBA,MAkBA,QAGA,OAAA4B,MAAAd,UAAAgF,MAAAzG,KAAAy5I,EAAAD,EAAAn2G,GASA02G,CAAAr0I,EAAA4zI,EAAA,IAEAx1I,KAAA2oI,wBACA3oI,KAAAiJ,SACAjJ,KAAAu2D,WAuOA,OArOA0vE,EAAAtoI,WACAu4I,gBAAA,WACAl2I,KAAAm2I,WAEA,IADA,IAAAphF,OACA,CACA,IAAA/F,EAAAhvD,KAAAm2I,WACA,UAAAnnF,GAAA,MAAAA,GAAA,MAAAA,EACA,MAEA+F,EAAA51D,KAAAkqH,WAAAr6D,GAAA,IAEA,OAAA+F,GAEAu6D,WAAA,WACA,IAAAtgE,EAAAhvD,KAAAm2I,WACA,OAAA9sB,WAAAr6D,GAAA,IAEAonF,QAAA,WACA,IAAApnF,EAAAhvD,KAAAm2I,WACA,SAAAntH,SAAAgmC,GAAA,OAEAqnF,YAAA,WAEA,eADAr2I,KAAAm2I,WACA,KAEA5/E,SAAA,WACA,OAAAv2D,KAAA83D,YAAA93D,KAAAiJ,OAAA4yC,WAEAs6F,SAAA,WAGA,IAFA,IAAAh9E,GAAA,EACAj2C,EAAAljB,KAAA83D,cACA,CACA,QAAA50C,EACA,YAEA,GAAAi2C,EACA,KAAAj2C,GAAA,KAAAA,IACAi2C,GAAA,QAES,QAAAj2C,EACTi2C,GAAA,OACS,OAAA35D,EAAAuO,SAAAmV,GACT,MAEAA,EAAAljB,KAAAu2D,WAEA,GAAAq/E,EAAA1yH,GAEA,OADAljB,KAAAu2D,WACAp0C,OAAAC,aAAAc,GAEA,IAAA8rC,EAAA,GACA,GACAA,GAAA7sC,OAAAC,aAAAc,GACAA,EAAAljB,KAAAu2D,iBACOrzC,GAAA,OAAA1jB,EAAAuO,SAAAmV,KAAA0yH,EAAA1yH,IACP,OAAA8rC,GAEAsnF,gBAAA,SAAAptI,EAAAqtI,GACA,WAAAA,EACArtI,EAEAy1D,EAAAz1D,EA7HA,KA6HAqtI,IAEAlQ,mBAAA,WACA,IAAAp9H,EAAAjJ,KAAAiJ,OACAu9H,KACAnP,KACAyQ,EAAArrI,OAAAY,OAAA,MACAyqI,EAAA,QAOA,IANA,IAKA94E,EAAA5vD,EAAAwC,EAAA20I,EAAA5B,EALA6B,GACAhQ,SACAnP,eACAjS,YAAqB0iB,gBAGrB,QAAA94E,EAAAhvD,KAAAm2I,aACA,SAAAnnF,EAIA,OADAA,EAAAhvD,KAAAm2I,YAEA,kBAKA,IAJAn2I,KAAAm2I,WACAn2I,KAAAm2I,WACAn2I,KAAAm2I,WACAn2I,KAAAm2I,WAGA,QADAnnF,EAAAhvD,KAAAm2I,aACA,QAAAnnF,GAGA,SAAAA,EAAA,CAGA,IAAA2tD,EAAA38G,KAAAm2I,WACA/2I,EAAAY,KAAAo2I,UACAp2I,KAAAm2I,WACAv0I,EAAAxC,EAAA,EAAA6J,EAAAgzC,SAAA78C,GAAA,IAAAmE,WAAA,GACAgzI,EAAAC,EAAApxB,WAAA0iB,YAAA,MACA6M,EAAA30I,KAAAs2I,gBAAA10I,EAAA20I,GACAv2I,KAAAu2D,WAEA,cADAvH,EAAAhvD,KAAAm2I,aAEAn2I,KAAAm2I,WAEA9e,EAAAl4H,MACAw9G,QACAg4B,YAGA,MACA,YAGA,IAFA30I,KAAAo2I,UACAp2I,KAAAm2I,WACA,QAAAn2I,KAAAm2I,YAAA,CACA,IAAAroH,EAAA9tB,KAAAo2I,UACAh3I,EAAAY,KAAAo2I,UACAp2I,KAAAm2I,WACAv0I,EAAAxC,EAAA,EAAA6J,EAAAgzC,SAAA78C,GAAA,IAAAmE,WAAA,GACAgzI,EAAAC,EAAApxB,WAAA0iB,YAAA,MACA6M,EAAA30I,KAAAs2I,gBAAA10I,EAAA20I,GACAv2I,KAAAu2D,WAEA,cADAvH,EAAAhvD,KAAAm2I,aAEAn2I,KAAAm2I,WAEA3P,EAAA14G,GAAA6mH,EAEA,MACA,iBACA,iBACA,kBACA,uBACA,IAAA8B,EAAAz2I,KAAAk2I,kBACAO,EAAAr3I,OAAA,GAAAq3I,EAAAr3I,OAAAq3I,EAGA,MACA,gBACA,gBACAD,EAAApxB,WAAA0iB,YAAA94E,GAAAhvD,KAAAk2I,kBACA,MACA,YACA,YACAM,EAAApxB,WAAA0iB,YAAA94E,GAAAhvD,KAAAk2I,kBAAA,GACA,MACA,gBACA,YACA,eACA,gBACA,oBACA,sBACAM,EAAApxB,WAAA0iB,YAAA94E,GAAAhvD,KAAAsvH,aACA,MACA,gBACAknB,EAAApxB,WAAA0iB,YAAA94E,GAAAhvD,KAAAq2I,cAIA,QAAAr6I,EAAA,EAAqBA,EAAAq7H,EAAAj4H,OAAwBpD,IAAA,CAC7C2gH,EAAA0a,EAAAr7H,GAAA2gH,MACAg4B,EAAAtd,EAAAr7H,GAAA24I,QACA,IAAA+B,EAAA,IAAAnC,EACAhqI,EAAAmsI,EAAA/hB,QAAAggB,EAAAnO,EAAAxmI,KAAA2oI,qBACA3nD,EAAA01D,EAAA11D,OACAz2E,IACAy2E,GAAA,KAEAw1D,EAAAnf,YAAAl4H,MACA+nH,UAAAvK,EACA2nB,WAAAtjD,EACA7b,MAAAuxE,EAAAvxE,MACAsvE,IAAAiC,EAAAjC,IACA9Q,KAAA+S,EAAA/S,OAGA,OAAA6S,GAEAtQ,kBAAA,SAAA9gB,GAEA,IADA,IAAAp2D,EACA,QAAAA,EAAAhvD,KAAAm2I,aACA,SAAAnnF,EAIA,OADAA,EAAAhvD,KAAAm2I,YAEA,iBACA,IAAAhzC,EAAAnjG,KAAAk2I,kBACA9wB,EAAAlD,WAAA/e,EACA,MACA,eACA,IACA7hC,EADAq1E,EAAA32I,KAAAm2I,WAEA,WAAA1tH,KAAAkuH,GAEa,CACbr1E,KACA,IAAA39B,EAAA,EAAA3a,SAAA2tH,EAAA,IACA32I,KAAAm2I,WACA,QAAA52G,EAAA,EAA6BA,EAAAoE,EAAUpE,IAAA,CAEvC,IADAyvB,EAAAhvD,KAAAm2I,WACA,QAAAnnF,GAAA,QAAAA,GAEA,WADAA,EAAAhvD,KAAAm2I,YAEA,OAGA,WAAAnnF,EACA,MAEA,IAAAlhC,EAAA9tB,KAAAo2I,UACAp2I,KAAAm2I,WACA,IAAAx5B,EAAA38G,KAAAm2I,WACA70E,EAAAxzC,GAAA6uF,EACA38G,KAAAm2I,iBApBA70E,GAAA,EAAAk1C,EAAA2P,aAAAwwB,GAuBAvxB,EAAA8d,gBAAA5hE,EACA,MACA,eACA,IAAAooE,EAAA1pI,KAAAk2I,kBACA9wB,EAAAvD,OAAAr6G,KAAAC,IAAAiiI,EAAA,GAAAA,EAAA,IACAtkB,EAAAtD,QAAAt6G,KAAAoK,IAAA83H,EAAA,GAAAA,EAAA,IACAtkB,EAAA6S,cAAA,KAMAgO,EAvSA,GAySAnqI,EAAAmqI,eAIA,SAAAlqI,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAkB,OAAA,IAEAlB,EAAAq/G,mBAAAr/G,EAAA2iH,aAAAvgH,EAEA,IAAAsB,EAAA5D,EAAA,GAEAiqD,EAAAjqD,EAAA,KAEAkE,EAAAlE,EAAA,KAEAg7I,GACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAEA14B,EAAA,WACA,SAAAA,KACA,EAAAj/G,EAAAuN,aAAA,uCAgCA,OA9BA0xG,EAAA9gH,WACAy5I,WAAA,SAAA1tH,IACA,EAAAlqB,EAAAuN,aAAA,qCAAA2c,KAGA+0F,EAAAC,aAAA,SAAAF,EAAArb,EAAAh6F,EAAAg1B,EAAAh7B,EAAAs8C,GACA,IAAAh9B,GAAA,EAAA3iB,EAAA8gD,UAAA49D,KAAA/7F,KAAA+7F,EACAjpG,EAAAkN,EAAA7lB,IAAA,eACA,IACA,OAAA2Y,GACA,KAAAqhI,EAAAE,MACA,KAAAF,EAAAG,OACA,WAAAM,EAAAC,YAAA70H,EAAA0gF,EAAAh6F,EAAAg1B,EAAAshB,GACA,KAAAm3F,EAAAI,eACA,KAAAJ,EAAAK,kBACA,KAAAL,EAAAM,iBACA,KAAAN,EAAAO,kBACA,WAAAE,EAAAE,KAAA/4B,EAAArb,EAAAh6F,EAAAg1B,EAAAshB,GACA,QACA,UAAAjgD,EAAAoP,YAAA,4BAAA2G,IAEK,MAAAlP,GACL,GAAAA,aAAA7G,EAAA2P,qBACA,MAAA9I,EAIA,OAFAlD,EAAAY,KAAA,sBAA0CgG,UAAAvK,EAAAwK,qBAAA4R,kBAC1C,EAAApc,EAAA4H,MAAAf,GACA,IAAAgxI,EAAAG,QAGA/4B,EAlCA,GAoCA44B,KACAA,EAAAI,aAAA,KACAJ,EAAAC,YAAA,WACA,SAAAA,EAAA70H,EAAA0gF,EAAAh6F,EAAAg1B,EAAAshB,GACAz/C,KAAAmjG,SACAnjG,KAAA03I,UAAAj1H,EAAAE,SAAA,UACA3iB,KAAA23I,YAAAl1H,EAAA7lB,IAAA,eACAoD,KAAAuV,KAAA,UACA,IAAAmtF,EAAAjgF,EAAA7lB,IAAA,mBACA8lG,EAAA78C,EAAA+B,WAAA9gC,MAAA47E,EAAAv5F,EAAAg1B,EAAAshB,GACAz/C,KAAA0iG,KACA,IAAAk1C,EAAA,EACAx9C,EAAA,EACA,GAAA33E,EAAAoJ,IAAA,WACA,IAAAgsH,EAAAp1H,EAAAE,SAAA,UACAi1H,EAAAC,EAAA,GACAz9C,EAAAy9C,EAAA,GAEA,IAAAC,GAAA,EACAC,GAAA,EACA,GAAAt1H,EAAAoJ,IAAA,WACA,IAAAmsH,EAAAv1H,EAAAE,SAAA,UACAm1H,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAEA,GAAAh4I,KAAA23I,cAAAf,EAAAG,UAAAe,IAAAC,GAAA,CACA,IAAAh0D,EAAA/jF,KAAA03I,UAAA,GACAtzD,EAAApkF,KAAA03I,UAAA,GACAO,EAAAj4I,KAAA03I,UAAA,GACA5+E,EAAA94D,KAAA03I,UAAA,GACA1kD,EAAAhzF,KAAA03I,UAAA,GACAQ,EAAAl4I,KAAA03I,UAAA,GACAS,EAAA3wI,KAAA6K,MAAA0xE,EAAAjrB,IAAAirB,EAAAjrB,IAAAsrB,EAAA4O,IAAA5O,EAAA4O,IACAilD,GAAAC,EAAAC,GAAAD,GAAAD,EAAAE,IACA,EAAA34I,EAAA4H,MAAA,gCAGApH,KAAA83I,cACA93I,KAAA+3I,YACA,IAAAK,EAAA31H,EAAA7lB,IAAA,YACA6uB,EAAAg0B,EAAA44F,gBAAAD,GACA58D,EAAA4e,EAAAw9C,EACA7iH,EAAAymD,EAAA,GACA88D,EAAAt4I,KAAAs4I,cACA,GAAAV,GAAAx9C,GAAArlE,GAAA,GACA,EAAAv1B,EAAAqK,MAAA,2BADA,CAOA,IAHA,IAEA89C,EAFAD,EAAA,IAAA0oC,aAAAsS,EAAAf,UACA42C,EAAA,IAAAnoD,aAAA,GAEAp0F,EAAA47I,EAAoB57I,GAAAo+F,EAASp+F,GAAA+4B,EAAA,CAC7BwjH,EAAA,GAAAv8I,EACAyvB,EAAA8sH,EAAA,EAAA7wF,EAAA,GACAC,EAAA+6C,EAAA36C,OAAAL,EAAA,GACA,IAAA8wF,EAAAh5I,EAAAqP,KAAAiC,WAAA62C,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA2wF,EAAAn5I,OAAAnD,EAAA47I,GAAAp8D,EAAAg9D,IAEA,IAAAC,EAAA,cACAh2H,EAAAoJ,IAAA,gBACA87B,EAAA+6C,EAAA36C,OAAAtlC,EAAA7lB,IAAA,iBACA67I,EAAAj5I,EAAAqP,KAAAiC,WAAA62C,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAmwF,IACAQ,EAAArkI,SAAA,EAAAwkI,IACAH,EAAA,OAAAjB,EAAAI,cAEAM,IACAO,IAAAl5I,OAAA,OAAAi4I,EAAAI,aACAa,EAAAn5I,MAAA,EAAAs5I,KAEAz4I,KAAAs4I,cAmCA,OAjCAhB,EAAA35I,WACA66E,MAAA,WACA,IAEAjjE,EAAAunE,EAAAtrE,EAAAknI,EAAAT,EAFAP,EAAA13I,KAAA03I,UACAC,EAAA33I,KAAA23I,YAEAA,IAAAf,EAAAE,OACAh6D,GAAA46D,EAAA,GAAAA,EAAA,IACAlmI,GAAAkmI,EAAA,GAAAA,EAAA,IACAgB,EAAA,KACAT,EAAA,KACA1iI,EAAA,SACOoiI,IAAAf,EAAAG,QACPj6D,GAAA46D,EAAA,GAAAA,EAAA,IACAlmI,GAAAkmI,EAAA,GAAAA,EAAA,IACAgB,EAAAhB,EAAA,GACAO,EAAAP,EAAA,GACAniI,EAAA,WAEA,EAAA/V,EAAAuN,aAAA,4BAAA4qI,GAEA,IAAAx0C,EAAAnjG,KAAAmjG,OACA,GAAAA,IACArmB,EAAAt9E,EAAAqP,KAAAwC,eAAAyrE,EAAAqmB,GACA3xF,EAAAhS,EAAAqP,KAAAwC,eAAAG,EAAA2xF,GACAw0C,IAAAf,EAAAG,QAAA,CACA,IAAAlsD,EAAArrF,EAAAqP,KAAAmD,8BAAAmxF,GACAu1C,GAAA7tD,EAAA,GACAotD,GAAAptD,EAAA,GAGA,qBAAAt1E,EAAAvV,KAAAs4I,WAAAx7D,EAAAtrE,EAAAknI,EAAAT,KAGAX,EAxGA,GA0GAD,EAAAE,KAAA,WACA,SAAAoB,EAAA1vI,EAAAkgB,GACAnpB,KAAAiJ,SACAjJ,KAAAmpB,UACAnpB,KAAAgD,OAAA,EACAhD,KAAAq6D,aAAA,EACA,IAAAsnC,EAAAx4E,EAAAw4E,SACA3hG,KAAA44I,YAAA,IAAAxoD,aAAAuR,GACA,IAAAk3C,EAAA1vH,EAAAwuF,WAAAhW,SACA3hG,KAAA84I,cAAA3vH,EAAA4vH,QAAA,IAAA3oD,aAAAyoD,GAAA74I,KAAA44I,YAEAD,EAAAh7I,WACAq7I,cACA,GAAAh5I,KAAAiJ,OAAA/G,IACA,OAAAlC,KAAAiJ,OAAAuK,IAAAxT,KAAAiJ,OAAA/G,IAEA,GAAAlC,KAAAq6D,aAAA,EACA,SAEA,IAAAogB,EAAAz6E,KAAAiJ,OAAA4yC,UACA,QAAA4+B,EAAA,KAGAz6E,KAAAgD,OAAAy3E,EACAz6E,KAAAq6D,aAAA,GACA,IAEAwF,SAAA,SAAAriE,GACA,IAAAwF,EAAAhD,KAAAgD,OACAq3D,EAAAr6D,KAAAq6D,aACA,QAAA78D,EAAA,CACA,OAAA68D,EACA,OAAAr6D,KAAAiJ,OAAA4yC,WAAA,GAAA77C,KAAAiJ,OAAA4yC,WAAA,GAAA77C,KAAAiJ,OAAA4yC,WAAA,EAAA77C,KAAAiJ,OAAA4yC,aAAA,EAEA74C,KAAA,GAAAhD,KAAAiJ,OAAA4yC,WAAA,GAAA77C,KAAAiJ,OAAA4yC,WAAA,EAAA77C,KAAAiJ,OAAA4yC,UACA,IAAA4+B,EAAAz6E,KAAAiJ,OAAA4yC,UAEA,OADA77C,KAAAgD,OAAAy3E,GAAA,GAAApgB,GAAA,GACAr3D,GAAA,EAAAq3D,GAAA,IAAAogB,IAAApgB,KAAA,EAEA,OAAA78D,GAAA,IAAA68D,EACA,OAAAr6D,KAAAiJ,OAAA4yC,UAEA,KAAAwe,EAAA78D,GACAwF,KAAA,EAAAhD,KAAAiJ,OAAA4yC,UACAwe,GAAA,EAKA,OAHAA,GAAA78D,EACAwC,KAAAq6D,eACAr6D,KAAAgD,UAAA,GAAAq3D,GAAA,EACAr3D,GAAAq3D,GAEA4+E,MAAA,WACAj5I,KAAAgD,OAAA,EACAhD,KAAAq6D,aAAA,GAEA6+E,SAAA,WACA,OAAAl5I,KAAA6/D,SAAA7/D,KAAAmpB,QAAAgwH,cAEAC,eAAA,WACA,IAAAC,EAAAr5I,KAAAmpB,QAAAkwH,kBACAC,EAAAt5I,KAAA6/D,SAAAw5E,GACAE,EAAAv5I,KAAA6/D,SAAAw5E,GACA/vE,EAAAtpE,KAAAmpB,QAAAmgD,OACAuhB,EAAAwuD,EAAA,UAAAA,GAAA,0BACA,OAAAC,EAAAzuD,GAAAvhB,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAiwE,EAAA1uD,GAAAvhB,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAEAkwE,eAAA,WAMA,IALA,IAAA73C,EAAA3hG,KAAAmpB,QAAAw4E,SACA5pB,EAAA/3E,KAAAmpB,QAAA4uD,iBACA8S,EAAA9S,EAAA,UAAAA,GAAA,0BACAzO,EAAAtpE,KAAAmpB,QAAAmgD,OACAuQ,EAAA75E,KAAA44I,YACA58I,EAAA,EAAAujC,EAAA,EAA4BvjC,EAAA2lG,EAAc3lG,IAAAujC,GAAA,GAC1C,IAAAk6G,EAAAz5I,KAAA6/D,SAAAkY,GACA8B,EAAA79E,GAAAy9I,EAAA5uD,GAAAvhB,EAAA/pC,EAAA,GAAA+pC,EAAA/pC,IAAA+pC,EAAA/pC,GAEA,IAAAmoB,EAAA1nD,KAAA84I,cAIA,OAHA94I,KAAAmpB,QAAA4vH,SACA/4I,KAAAmpB,QAAA4vH,QAAAl/D,EAAA,EAAAnyB,EAAA,GAEA1nD,KAAAmpB,QAAAwuF,WAAA5vD,OAAAL,EAAA,KA8DA,IAAAgyF,EAAA,EACAC,EAAA,GACAC,EAAA,GACAC,EAAA,WAUA,IAAAztF,KACA,gBAAAjE,GAIA,OAHAiE,EAAAjE,KACAiE,EAAAjE,GAZA,SAAAA,GAEA,IADA,IAAA2xF,KACA99I,EAAA,EAAqBA,GAAAmsD,EAAYnsD,IAAA,CACjC,IAAAiB,EAAAjB,EAAAmsD,EACA4xF,EAAA,EAAA98I,EACA68I,EAAA36I,KAAA,IAAAixF,cAAA2pD,MAAA,EAAA98I,EAAA88I,IAAA,EAAA98I,IAAA88I,EAAA98I,SAEA,OAAA68I,EAKAE,CAAA7xF,IAEAiE,EAAAjE,IAfA,GAkBA,SAAA8xF,EAAAC,EAAApsH,GACA,IAAAqsH,EAAAD,EAAAE,QAAAtsH,IACA,EAAAtuB,EAAA6C,QAAA,UAAA83I,EAAA5kI,KAAA,gCACA,IAAA8kI,EAAAH,EAAAG,OACA/8E,EAAA48E,EAAA58E,OACAg9E,EAAAH,EAAAE,OACAZ,EAAAU,EAAA78E,OACAi9E,EAAA/yI,KAAAoK,IAAAyoI,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAE,EAAAhzI,KAAAoK,IAAAyoI,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAG,EAAAjzI,KAAAC,IAAA4yI,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAI,EAAAlzI,KAAAC,IAAA4yI,EAAAC,EAAA,OAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,SACAK,EAAAnzI,KAAAsc,MAAA22H,EAAAF,GAAAX,GAAAM,EAAAhtC,OAAA,GAAAgtC,EAAAhtC,OAAA,KACAytC,EAAAnzI,KAAAC,IAAAiyI,EAAAlyI,KAAAoK,IAAA+nI,EAAAgB,IACA,IAAAC,EAAApzI,KAAAsc,MAAA42H,EAAAF,GAAAZ,GAAAM,EAAAhtC,OAAA,GAAAgtC,EAAAhtC,OAAA,KACA0tC,EAAApzI,KAAAC,IAAAiyI,EAAAlyI,KAAAoK,IAAA+nI,EAAAiB,IAaA,IAZA,IAAAC,EAAAF,EAAA,EACAG,EAAA,IAAA//E,YAAA6/E,EAAA,GAAAC,GACAE,EAAA,IAAAhgF,YAAA6/E,EAAA,GAAAC,GACA17G,EAAA,EACA67G,EAAA,IAAAz3I,WAAA,GACA03I,EAAA,IAAA13I,WAAA,GACA23I,EAAA59E,EAAAm8E,EAAA,IACA0B,EAAA79E,EAAAm8E,EAAA,IACA2B,EAAA99E,EAAAm8E,EAAA,IACA4B,EAAA/9E,EAAAm8E,EAAA,IACA6B,EAAAzB,EAAAe,GACAW,EAAA1B,EAAAc,GACA54E,EAAA,EAAqBA,GAAA64E,EAAiB74E,IAAA,CACtCi5E,EAAA,IAAAE,EAAA,IAAAN,EAAA74E,GAAAq5E,EAAA,GAAAr5E,GAAA64E,EAAA,EACAI,EAAA,IAAAE,EAAA,IAAAN,EAAA74E,GAAAq5E,EAAA,GAAAr5E,GAAA64E,EAAA,EACAI,EAAA,IAAAE,EAAA,IAAAN,EAAA74E,GAAAq5E,EAAA,GAAAr5E,GAAA64E,EAAA,EACAK,EAAA,IAAAE,EAAA,IAAAP,EAAA74E,GAAAs5E,EAAA,GAAAt5E,GAAA64E,EAAA,EACAK,EAAA,IAAAE,EAAA,IAAAP,EAAA74E,GAAAs5E,EAAA,GAAAt5E,GAAA64E,EAAA,EACAK,EAAA,IAAAE,EAAA,IAAAP,EAAA74E,GAAAs5E,EAAA,GAAAt5E,GAAA64E,EAAA,EACA,QAAAnhE,EAAA,EAAuBA,GAAAkhE,EAAiBlhE,IAAAt6C,IACxC,OAAA4iC,OAAA64E,GAAA,IAAAnhE,OAAAkhE,EAAA,CAMA,IAHA,IAAA92H,EAAA,EACA8gD,EAAA,EACA5E,EAAA,EACA/jE,EAAA,EAAuBA,GAAA,EAAQA,IAC/B,QAAAujC,EAAA,EAAyBA,GAAA,EAAQA,IAAAwgC,IAAA,CACjC,IAAA5jE,EAAAm/I,EAAAv5E,GAAA/lE,GAAAu/I,EAAA9hE,GAAAl6C,GACA1b,GAAAw2H,EAAAC,EAAAv6E,IAAA,GAAA5jE,EACAwoE,GAAA01E,EAAAC,EAAAv6E,IAAA,GAAA5jE,EAGA2+I,EAAA37G,GAAAk7G,EAAAj7I,OACAi7I,EAAAl7I,MAAA0kB,EAAA8gD,IACAo2E,EAAA57G,GAAAm+B,EAAAl+D,OACA,IAAAo8I,EAAA,IAAAj4I,WAAA,GACAi4I,EAAA,IAAAR,EAAA,IAAAL,EAAAlhE,GAAAwhE,EAAA,GAAAxhE,GAAAkhE,EAAA,EACAa,EAAA,IAAAR,EAAA,IAAAL,EAAAlhE,GAAAwhE,EAAA,GAAAxhE,GAAAkhE,EAAA,EACAa,EAAA,IAAAR,EAAA,IAAAL,EAAAlhE,GAAAwhE,EAAA,GAAAxhE,GAAAkhE,EAAA,EACAr9E,EAAAn+D,KAAAq8I,IAGAV,EAAA,GAAAR,EAAA,GACAS,EAAA,GAAAtB,EAAA,GACAqB,EAAAH,GAAAL,EAAA,GACAS,EAAAJ,GAAAlB,EAAA,GACAqB,EAAAD,EAAAD,GAAAN,EAAA,IACAS,EAAAF,EAAAD,GAAAnB,EAAA,GACAqB,EAAAD,EAAAD,EAAAD,GAAAL,EAAA,IACAS,EAAAF,EAAAD,EAAAD,GAAAlB,EAAA,GACAS,EAAAE,QAAAtsH,IACAvY,KAAA,UACA8kI,OAAAS,EACAx9E,OAAAy9E,EACAF,kBAuPA,SAAAY,EAAAvB,GAKA,IAJA,IAAA3zE,EAAA2zE,EAAAG,OAAA,MACA5zE,EAAAyzE,EAAAG,OAAA,MACA7zE,EAAAD,EACA4mC,EAAA1mC,EACAzqE,EAAA,EAAA2Z,EAAAukI,EAAAG,OAAAj7I,OAA4CpD,EAAA2Z,EAAQ3Z,IAAA,CACpD,IAAA6nB,EAAAq2H,EAAAG,OAAAr+I,GAAA,GACA2oE,EAAAu1E,EAAAG,OAAAr+I,GAAA,GACAuqE,IAAA1iD,IAAA0iD,EACAE,IAAA9B,IAAA8B,EACAD,IAAA3iD,IAAA2iD,EACA2mC,IAAAxoC,IAAAwoC,EAEA+sC,EAAAhtC,QAAA3mC,EAAAE,EAAAD,EAAA2mC,GAgCA,SAAAoqC,EAAAtuI,EAAAk6F,EAAAh6F,EAAAg1B,EAAAshB,GACA,OAAA3/C,EAAA8gD,UAAA33C,GACA,UAAAzJ,EAAAoP,YAAA,6BAEA,IAAA6T,EAAAxZ,EAAAwZ,KACAziB,KAAAmjG,SACAnjG,KAAA23I,YAAAl1H,EAAA7lB,IAAA,eACAoD,KAAAuV,KAAA,UACAvV,KAAAitG,KAAAxqF,EAAAE,SAAA,QACA,IAAA+/E,EAAAjgF,EAAA7lB,IAAA,mBACA8lG,EAAA78C,EAAA+B,WAAA9gC,MAAA47E,EAAAv5F,EAAAg1B,EAAAshB,GACAz/C,KAAA0iG,KACA1iG,KAAAy4I,WAAAh2H,EAAAoJ,IAAA,cAAA62E,EAAA36C,OAAAtlC,EAAA7lB,IAAA,sBACA,IAAAw7I,EAAA31H,EAAA7lB,IAAA,YACA6uB,EAAA2sH,EAAA34F,EAAA44F,gBAAAD,GAAA,KACAp4I,KAAAq6I,UACAr6I,KAAAs9D,UACAt9D,KAAAo6I,WACA,IASA73I,EAAA,IAAAo2I,EAAA1vI,GARAowI,kBAAA52H,EAAA7lB,IAAA,qBACAm7E,iBAAAt1D,EAAA7lB,IAAA,oBACAu8I,YAAA12H,EAAA7lB,IAAA,eACA0sE,OAAA7mD,EAAAE,SAAA,UACAo2H,QAAAttH,EACAksF,WAAAjV,EACAf,SAAAl2E,EAAA,EAAAi3E,EAAAf,WAGA+5C,GAAA,EACA,OAAA17I,KAAA23I,aACA,KAAAf,EAAAI,gBAxdA,SAAAkD,EAAA33I,GAMA,IALA,IAAA83I,EAAAH,EAAAG,OACA/8E,EAAA48E,EAAA58E,OACAq+E,KACAC,KACAC,EAAA,EACAt5I,EAAAy2I,SAAA,CACA,IAAAjuH,EAAAxoB,EAAA22I,WACA4C,EAAAv5I,EAAA62I,iBACA1xF,EAAAnlD,EAAAi3I,iBACA,OAAAqC,EAAA,CACA,QAAA9wH,MAAA,GACA,UAAAvrB,EAAAoP,YAAA,sBAEA,OAAAmc,GACA,OACA8wH,EAAA,EACA,MACA,OACAD,EAAAz8I,KAAAy8I,IAAAx8I,OAAA,GAAAw8I,IAAAx8I,OAAA,IACAy8I,EAAA,EACA,MACA,OACAD,EAAAz8I,KAAAy8I,IAAAx8I,OAAA,GAAAw8I,IAAAx8I,OAAA,IACAy8I,EAAA,EAGAF,EAAAx8I,KAAA4rB,GAEA6wH,EAAAz8I,KAAAk7I,EAAAj7I,QACAi7I,EAAAl7I,KAAA28I,GACAx+E,EAAAn+D,KAAAuoD,GACAm0F,IACAt5I,EAAA02I,QAEAiB,EAAAE,QAAAj7I,MACAoW,KAAA,YACA8kI,OAAA,IAAAt/E,WAAA6gF,GACAt+E,OAAA,IAAAvC,WAAA6gF,KAmbAG,CAAA/7I,KAAAuC,GACA,MACA,KAAAq0I,EAAAK,kBACA,IAAA4D,EAAA,EAAAp4H,EAAA7lB,IAAA,kBACA,GAAAi+I,EAAA,EACA,UAAAr7I,EAAAoP,YAAA,2BArbA,SAAAsrI,EAAA33I,EAAAs4I,GAIA,IAHA,IAAAR,EAAAH,EAAAG,OACA/8E,EAAA48E,EAAA58E,OACAs+E,KACAr5I,EAAAy2I,SAAA,CACA,IAAA8C,EAAAv5I,EAAA62I,iBACA1xF,EAAAnlD,EAAAi3I,iBACAoC,EAAAz8I,KAAAk7I,EAAAj7I,QACAi7I,EAAAl7I,KAAA28I,GACAx+E,EAAAn+D,KAAAuoD,GAEAwyF,EAAAE,QAAAj7I,MACAoW,KAAA,UACA8kI,OAAA,IAAAt/E,WAAA6gF,GACAt+E,OAAA,IAAAvC,WAAA6gF,GACAf,mBAwaAmB,CAAAh8I,KAAAuC,EAAAs4I,GACA,MACA,KAAAjE,EAAAM,kBAzUA,SAAAgD,EAAA33I,GAKA,IAJA,IAAA83I,EAAAH,EAAAG,OACA/8E,EAAA48E,EAAA58E,OACAs+E,EAAA,IAAA7gF,WAAA,IACA2nC,EAAA,IAAA3nC,WAAA,GACAx4D,EAAAy2I,SAAA,CACA,IAIAh9I,EAAA2Z,EAJAoV,EAAAxoB,EAAA22I,WACA,QAAAnuH,MAAA,GACA,UAAAvrB,EAAAoP,YAAA,sBAGA,IAAA0rI,EAAAD,EAAAj7I,OACA,IAAApD,EAAA,EAAA2Z,EAAA,IAAAoV,EAAA,KAAwC/uB,EAAA2Z,EAAQ3Z,IAChDq+I,EAAAl7I,KAAAoD,EAAA62I,kBAEA,IAIA5+C,EAAAxC,EAAAuC,EAAA0hD,EAJAxC,EAAAn8E,EAAAl+D,OACA,IAAApD,EAAA,EAAA2Z,EAAA,IAAAoV,EAAA,IAAuC/uB,EAAA2Z,EAAQ3Z,IAC/CshE,EAAAn+D,KAAAoD,EAAAi3I,kBAGA,OAAAzuH,GACA,OACA6wH,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,EACA53C,EAAA,GAAA+2C,EAAA,EACA/2C,EAAA,GAAA+2C,EAAA,EACA/2C,EAAA,GAAA+2C,EACA/2C,EAAA,GAAA+2C,EAAA,EACA,MACA,OACAj/C,EAAAohD,EAAA,IACA5jD,EAAA4jD,EAAA,IACArhD,EAAAqhD,EAAA,IACAK,EAAAL,EAAA,IACAA,EAAA,IAAAK,EACAL,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAArhD,EACAqhD,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAA5jD,EACA4jD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAphD,EACAohD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACA9/C,EAAAkI,EAAA,GACA1K,EAAA0K,EAAA,GACAA,EAAA,GAAA1K,EACA0K,EAAA,GAAA+2C,EACA/2C,EAAA,GAAAlI,EACAkI,EAAA,GAAA+2C,EAAA,EACA,MACA,OACAj/C,EAAAohD,EAAA,IACA5jD,EAAA4jD,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAA5jD,EACA4jD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAphD,EACAohD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACA9/C,EAAAkI,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+2C,EACA/2C,EAAA,GAAAlI,EACAkI,EAAA,GAAA+2C,EAAA,EACA,MACA,OACAmC,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACA53C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+2C,EACA/2C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+2C,EAAA,EAGAmC,EAAA,GAAAvB,EAAAj7I,OACAi7I,EAAAl7I,QAAA,EAAAk7I,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,eAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,aACAA,EAAA,GAAAvB,EAAAj7I,OACAi7I,EAAAl7I,QAAA,EAAAk7I,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,gBAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,cACAA,EAAA,GAAAvB,EAAAj7I,OACAi7I,EAAAl7I,QAAA,EAAAk7I,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,UAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,eAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,UAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,aACAA,EAAA,IAAAvB,EAAAj7I,OACAi7I,EAAAl7I,QAAA,EAAAk7I,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,UAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,eAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,UAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,YAAAvB,EAAAuB,EAAA,QAAAvB,EAAAuB,EAAA,WAAAvB,EAAAuB,EAAA,OAAAvB,EAAAuB,EAAA,aACA1B,EAAAE,QAAAj7I,MACAoW,KAAA,QACA8kI,OAAA,IAAAt/E,WAAA6gF,GACAt+E,OAAA,IAAAvC,WAAA2nC,MAwNAw5C,CAAAl8I,KAAAuC,GACAm5I,GAAA,EACA,MACA,KAAA9E,EAAAO,mBAvNA,SAAA+C,EAAA33I,GAKA,IAJA,IAAA83I,EAAAH,EAAAG,OACA/8E,EAAA48E,EAAA58E,OACAs+E,EAAA,IAAA7gF,WAAA,IACA2nC,EAAA,IAAA3nC,WAAA,GACAx4D,EAAAy2I,SAAA,CACA,IAIAh9I,EAAA2Z,EAJAoV,EAAAxoB,EAAA22I,WACA,QAAAnuH,MAAA,GACA,UAAAvrB,EAAAoP,YAAA,sBAGA,IAAA0rI,EAAAD,EAAAj7I,OACA,IAAApD,EAAA,EAAA2Z,EAAA,IAAAoV,EAAA,MAAyC/uB,EAAA2Z,EAAQ3Z,IACjDq+I,EAAAl7I,KAAAoD,EAAA62I,kBAEA,IAIA5+C,EAAAxC,EAAAuC,EAAA0hD,EAJAxC,EAAAn8E,EAAAl+D,OACA,IAAApD,EAAA,EAAA2Z,EAAA,IAAAoV,EAAA,IAAuC/uB,EAAA2Z,EAAQ3Z,IAC/CshE,EAAAn+D,KAAAoD,EAAAi3I,kBAGA,OAAAzuH,GACA,OACA6wH,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,IAAAtB,EAAA,GACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,EACA53C,EAAA,GAAA+2C,EAAA,EACA/2C,EAAA,GAAA+2C,EAAA,EACA/2C,EAAA,GAAA+2C,EACA/2C,EAAA,GAAA+2C,EAAA,EACA,MACA,OACAj/C,EAAAohD,EAAA,IACA5jD,EAAA4jD,EAAA,IACArhD,EAAAqhD,EAAA,IACAK,EAAAL,EAAA,IACAA,EAAA,IAAAK,EACAL,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAArhD,EACAqhD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,GACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAA5jD,EACA4jD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAphD,EACAohD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACA9/C,EAAAkI,EAAA,GACA1K,EAAA0K,EAAA,GACAA,EAAA,GAAA1K,EACA0K,EAAA,GAAA+2C,EACA/2C,EAAA,GAAAlI,EACAkI,EAAA,GAAA+2C,EAAA,EACA,MACA,OACAj/C,EAAAohD,EAAA,IACA5jD,EAAA4jD,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,GACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAA5jD,EACA4jD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAphD,EACAohD,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACA9/C,EAAAkI,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+2C,EACA/2C,EAAA,GAAAlI,EACAkI,EAAA,GAAA+2C,EAAA,EACA,MACA,OACAmC,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAtB,EAAA,EACAsB,EAAA,IAAAtB,EAAA,GACAsB,EAAA,IAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,GACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACAsB,EAAA,GAAAtB,EAAA,EACA53C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+2C,EACA/2C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAA+2C,EAAA,EAGAS,EAAAE,QAAAj7I,MACAoW,KAAA,QACA8kI,OAAA,IAAAt/E,WAAA6gF,GACAt+E,OAAA,IAAAvC,WAAA2nC,MA8FAy5C,CAAAn8I,KAAAuC,GACAm5I,GAAA,EACA,MACA,SACA,EAAAl8I,EAAAuN,aAAA,0BAGA,GAAA2uI,EAAA,CACAD,EAAAz7I,MACA,QAAAhE,EAAA,EAAA2Z,EAAA3V,KAAAo6I,QAAAh7I,OAA+CpD,EAAA2Z,EAAQ3Z,IACvDi+I,EAAAj6I,KAAAhE,GAGAy/I,EAAAz7I,MAxFA,SAAAk6I,GACA,IAAAl+I,EAAA2Z,EAAA4pB,EAAAqqB,EACAywF,EAAAH,EAAAG,OACA+B,EAAA,IAAAhsD,aAAA,EAAAiqD,EAAAj7I,QACA,IAAApD,EAAA,EAAAujC,EAAA,EAAA5pB,EAAA0kI,EAAAj7I,OAA0CpD,EAAA2Z,EAAQ3Z,IAAA,CAClD,IAAAqgJ,EAAAhC,EAAAr+I,GACAogJ,EAAA78G,KAAA88G,EAAA,GACAD,EAAA78G,KAAA88G,EAAA,GAEAnC,EAAAG,OAAA+B,EACA,IAAA9+E,EAAA48E,EAAA58E,OACAg/E,EAAA,IAAA/4I,WAAA,EAAA+5D,EAAAl+D,QACA,IAAApD,EAAA,EAAAujC,EAAA,EAAA5pB,EAAA2nD,EAAAl+D,OAA0CpD,EAAA2Z,EAAQ3Z,IAAA,CAClD,IAAAI,EAAAkhE,EAAAthE,GACAsgJ,EAAA/8G,KAAAnjC,EAAA,GACAkgJ,EAAA/8G,KAAAnjC,EAAA,GACAkgJ,EAAA/8G,KAAAnjC,EAAA,GAEA89I,EAAA58E,OAAAg/E,EACA,IAAAlC,EAAAF,EAAAE,QACA,IAAAp+I,EAAA,EAAA2Z,EAAAykI,EAAAh7I,OAAoCpD,EAAA2Z,EAAQ3Z,IAAA,CAC5C,IAAAm+I,EAAAC,EAAAp+I,GACA4/I,EAAAzB,EAAAE,OACA33C,EAAAy3C,EAAA78E,OACA,IAAA/9B,EAAA,EAAAqqB,EAAAgyF,EAAAx8I,OAAiCmgC,EAAAqqB,EAAQrqB,IACzCq8G,EAAAr8G,IAAA,EACAmjE,EAAAnjE,IAAA,GA+DAg9G,CAAAv8I,MAOA,OALAu3I,EAAA55I,WACA66E,MAAA,WACA,cAAAx4E,KAAA23I,YAAA33I,KAAAq6I,OAAAr6I,KAAAs9D,OAAAt9D,KAAAo6I,QAAAp6I,KAAAktG,OAAAltG,KAAAmjG,OAAAnjG,KAAAitG,KAAAjtG,KAAAy4I,cAGAlB,EA/kBA,GAilBAF,EAAAG,MAAA,WACA,SAAAA,IACAx3I,KAAAuV,KAAA,UAOA,OALAiiI,EAAA75I,WACA66E,MAAA,WACA,kBAGAg/D,EATA,GAuBA17I,EAAA2iH,UACA3iH,EAAAq/G,mBAbA,SAAAvxG,EAAA6Y,EAAA8X,GACA,IAAA4oE,EAAA1gF,EAAAE,SAAA,UACAsqF,EAAAztG,EAAAqP,KAAA2D,cAAAiQ,EAAAE,SAAA,SACA65H,EAAA/5H,EAAA7lB,IAAA,SACA6/I,EAAAh6H,EAAA7lB,IAAA,SACA8/I,EAAAj6H,EAAA7lB,IAAA,aACA+/I,EAAAl6H,EAAA7lB,IAAA,cACA,GAAAqwG,EAAA,GAAAA,EAAA,QAAAA,EAAA,GAAAA,EAAA,OACA,UAAAztG,EAAAoP,YAAA,4CAAAq+F,EAAA,MAEA,uBAAA1yE,EAAA3wB,EAAAu5F,EAAA8J,EAAAuvC,EAAAC,EAAAC,EAAAC,KAOA,SAAA5gJ,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAkB,OAAA,IAEAlB,EAAAgnH,UAAA5kH,EAEA,IAAAsB,EAAA5D,EAAA,GAEAghJ,GAAA,moCACAC,GAAA,mzCACA,SAAAC,EAAA9gJ,GACA,cAAAA,GAEA,SAAA+gJ,EAAA/gJ,GACA,cAAAA,GAEA,SAAAghJ,EAAAx+I,EAAA+K,EAAAvM,GACA,QAAAuiC,EAAAh2B,EAAAqgD,EAAAprD,EAAAY,OAAsCmgC,EAAAqqB,IAAQrqB,EAC9C,GAAA/gC,EAAA+gC,KAAAviC,EACA,OAAAuiC,EAGA,OAAAA,EAEA,SAAA09G,EAAAz+I,EAAA+K,EAAArH,EAAAlF,GACA,QAAAuiC,EAAAh2B,EAAqBg2B,EAAAr9B,IAASq9B,EAC9B/gC,EAAA+gC,GAAAviC,EAGA,SAAAkgJ,EAAA1+I,EAAA+K,EAAArH,GACA,QAAAlG,EAAAuN,EAAAg2B,EAAAr9B,EAAA,EAAkClG,EAAAujC,IAAOvjC,IAAAujC,EAAA,CACzC,IAAAxW,EAAAvqB,EAAAxC,GACAwC,EAAAxC,GAAAwC,EAAA+gC,GACA/gC,EAAA+gC,GAAAxW,GAGA,SAAAo0H,EAAAxsI,EAAAysI,EAAAv8B,GACA,OACAlwG,MACAqyG,IAAAnC,EAAA,MAAAu8B,EAAA,aAGA,IAAAt4H,KACAgpH,KAkMAhyI,EAAAgnH,KAjMA,SAAAnyG,EAAA0sI,EAAAx8B,GACA,IAAAu8B,GAAA,EACAE,EAAA3sI,EAAAvR,OACA,OAAAk+I,GAAAz8B,EACA,OAAAs8B,EAAAxsI,EAAAysI,EAAAv8B,GAEA/7F,EAAA1lB,OAAAk+I,EACAxP,EAAA1uI,OAAAk+I,EACA,IACAthJ,EAAA2Z,EADA4nI,EAAA,EAEA,IAAAvhJ,EAAA,EAAaA,EAAAshJ,IAAethJ,EAAA,CAC5B8oB,EAAA9oB,GAAA2U,EAAAyT,OAAApoB,GACA,IAAA0sH,EAAA/3G,EAAAC,WAAA5U,GACAwhJ,EAAA,IACA90B,GAAA,IACA80B,EAAAZ,EAAAl0B,GACK,MAAAA,MAAA,KACL80B,EAAA,IACK,MAAA90B,MAAA,MACL80B,EAAAX,EAAA,IAAAn0B,MAEA,EAAAlpH,EAAA4H,MAAA,mCAAAshH,EAAAp+G,SAAA,KAEK,MAAAo+G,MAAA,OACL80B,EAAA,MAEA,MAAAA,GAAA,OAAAA,GAAA,OAAAA,GACAD,IAEAzP,EAAA9xI,GAAAwhJ,EAEA,OAAAD,EAEA,OAAAJ,EAAAxsI,EADAysI,GAAA,IAGA,IAAAC,IACAE,EAAAD,EAAA,IACAF,GAAA,EACAC,EAAA,IAEAD,GAAA,EACAC,EAAA,IAGA,IAAA1pD,KACA,IAAA33F,EAAA,EAAaA,EAAAshJ,IAAethJ,EAC5B23F,EAAA33F,GAAAqhJ,EAEA,IAYApgJ,EAZA6G,EAAAg5I,EAAAO,GAAA,QACAI,EAAA35I,EACA45I,EAAAD,EACAE,EAAAF,EACA,IAAAzhJ,EAAA,EAAaA,EAAAshJ,IAAethJ,EAC5B,QAAA8xI,EAAA9xI,GACA8xI,EAAA9xI,GAAA2hJ,EAEAA,EAAA7P,EAAA9xI,GAKA,IAFA2hJ,EAAAF,EAEAzhJ,EAAA,EAAaA,EAAAshJ,IAAethJ,EAE5B,QADAiB,EAAA6wI,EAAA9xI,IAEA8xI,EAAA9xI,GAAA,OAAA2hJ,EAAA,UACK,MAAA1gJ,GAAA,MAAAA,GAAA,OAAAA,IACL0gJ,EAAA1gJ,GAGA,IAAAjB,EAAA,EAAaA,EAAAshJ,IAAethJ,EAE5B,QADAiB,EAAA6wI,EAAA9xI,MAEA8xI,EAAA9xI,GAAA,KAGA,IAAAA,EAAA,EAAaA,EAAAshJ,EAAA,IAAmBthJ,EAChC,OAAA8xI,EAAA9xI,IAAA,OAAA8xI,EAAA9xI,EAAA,WAAA8xI,EAAA9xI,EAAA,KACA8xI,EAAA9xI,GAAA,MAEA,OAAA8xI,EAAA9xI,IAAA,OAAA8xI,EAAA9xI,EAAA,WAAA8xI,EAAA9xI,EAAA,IAAA8xI,EAAA9xI,EAAA,KAAA8xI,EAAA9xI,EAAA,KACA8xI,EAAA9xI,GAAA8xI,EAAA9xI,EAAA,IAGA,IAAAA,EAAA,EAAaA,EAAAshJ,IAAethJ,EAC5B,UAAA8xI,EAAA9xI,GAAA,CACA,IAAAujC,EACA,IAAAA,EAAAvjC,EAAA,EAAqBujC,GAAA,GACrB,OAAAuuG,EAAAvuG,KAD6BA,EAI7BuuG,EAAAvuG,GAAA,KAEA,IAAAA,EAAAvjC,EAAA,EAAqBujC,EAAA+9G,GACrB,OAAAxP,EAAAvuG,KADoCA,EAIpCuuG,EAAAvuG,GAAA,KAIA,IAAAvjC,EAAA,EAAaA,EAAAshJ,IAAethJ,EAE5B,QADAiB,EAAA6wI,EAAA9xI,KACA,OAAAiB,GAAA,OAAAA,GAAA,OAAAA,IACA6wI,EAAA9xI,GAAA,MAIA,IADA2hJ,EAAAF,EACAzhJ,EAAA,EAAaA,EAAAshJ,IAAethJ,EAE5B,QADAiB,EAAA6wI,EAAA9xI,IAEA8xI,EAAA9xI,GAAA,MAAA2hJ,EAAA,SACK,MAAA1gJ,GAAA,MAAAA,IACL0gJ,EAAA1gJ,GAGA,IAAAjB,EAAA,EAAaA,EAAAshJ,IAAethJ,EAC5B,UAAA8xI,EAAA9xI,GAAA,CACA,IAAAkG,EAAA86I,EAAAlP,EAAA9xI,EAAA,QACA4hJ,EAAAH,EACAzhJ,EAAA,IACA4hJ,EAAA9P,EAAA9xI,EAAA,IAEA,IAAA6hJ,EAAAH,EACAx7I,EAAA,EAAAo7I,IACAO,EAAA/P,EAAA5rI,EAAA,IAEA,MAAA07I,IACAA,EAAA,KAEA,MAAAC,IACAA,EAAA,KAEAD,IAAAC,GACAZ,EAAAnP,EAAA9xI,EAAAkG,EAAA07I,GAEA5hJ,EAAAkG,EAAA,EAGA,IAAAlG,EAAA,EAAaA,EAAAshJ,IAAethJ,EAC5B,OAAA8xI,EAAA9xI,KACA8xI,EAAA9xI,GAAA8H,GAGA,IAAA9H,EAAA,EAAaA,EAAAshJ,IAAethJ,EAC5BiB,EAAA6wI,EAAA9xI,GACA+gJ,EAAAppD,EAAA33F,IACA,MAAAiB,EACA02F,EAAA33F,IAAA,EACO,OAAAiB,GAAA,OAAAA,IACP02F,EAAA33F,IAAA,GAGA,MAAAiB,GAAA,OAAAA,GAAA,OAAAA,IACA02F,EAAA33F,IAAA,GAIA,IAEAioB,EAFA65H,GAAA,EACAC,EAAA,GAEA,IAAA/hJ,EAAA,EAAA2Z,EAAAg+E,EAAAv0F,OAAiCpD,EAAA2Z,IAAQ3Z,EAEzC8hJ,GADA75H,EAAA0vE,EAAA33F,MAEA8hJ,EAAA75H,GAEA85H,EAAA95H,GAAA64H,EAAA74H,KACA85H,EAAA95H,GAGA,IAAAA,EAAA65H,EAA4B75H,GAAA85H,IAAyB95H,EAAA,CACrD,IAAA1a,GAAA,EACA,IAAAvN,EAAA,EAAA2Z,EAAAg+E,EAAAv0F,OAAmCpD,EAAA2Z,IAAQ3Z,EAC3C23F,EAAA33F,GAAAioB,EACA1a,GAAA,IACA2zI,EAAAp4H,EAAAvb,EAAAvN,GACAuN,GAAA,GAEOA,EAAA,IACPA,EAAAvN,GAGAuN,GAAA,GACA2zI,EAAAp4H,EAAAvb,EAAAoqF,EAAAv0F,QAGA,IAAApD,EAAA,EAAA2Z,EAAAmP,EAAA1lB,OAAgCpD,EAAA2Z,IAAQ3Z,EAAA,CACxC,IAAAknB,EAAA4B,EAAA9oB,GACA,MAAAknB,GAAA,MAAAA,IACA4B,EAAA9oB,GAAA,IAGA,OAAAmhJ,EAAAr4H,EAAA7T,KAAA,IAAAmsI,KAMA,SAAArhJ,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAkB,OAAA,IAEAlB,EAAAquH,gBAAAjsH,EAEA,IAAAsB,EAAA5D,EAAA,GAEAuuH,GAAA,EAAA3qH,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,YACAA,EAAA,oBACAA,EAAA,2BACAA,EAAA,uBACAA,EAAA,aAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,QACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,qBAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,4BAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,wBAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,QACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,UAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,cACAA,EAAA,aACAA,EAAA,cACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,YACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,YACAA,EAAA,OACAA,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,OACAA,EAAA,QACAA,EAAA,SACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,YACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,OACAA,EAAA,YACAA,EAAA,OACAA,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,OACAA,EAAA,QACAA,EAAA,SACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,YACAA,EAAA,SACAA,EAAA,aACAA,EAAA,WACAA,EAAA,cACAA,EAAA,aACAA,EAAA,aACAA,EAAA,WACAA,EAAA,SACAA,EAAA,YACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,cACAA,EAAA,YACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,UACAA,EAAA,aACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,mBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,UACAA,EAAA,aACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,YACAA,EAAA,YACAA,EAAA,YACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,eACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,iBACAA,EAAA,YAEAA,EAAA,kBAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,iBAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,uBAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,mBAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,aACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,SACAA,EAAA,UACAA,EAAA,YACAA,EAAA,aACAA,EAAA,OACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,cACAA,EAAA,QACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,SACAA,EAAA,aACAA,EAAA,aACAA,EAAA,QACAA,EAAA,WACAA,EAAA,YACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,OACAA,EAAA,OACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,mBACAA,EAAA,aACAA,EAAA,gBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,eACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,cACAA,EAAA,aACAA,EAAA,SACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,WACAA,EAAA,OACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,iBACAA,EAAA,OACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,OACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,UACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,YACAA,EAAA,WACAA,EAAA,UACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,aACAA,EAAA,eACAA,EAAA,UACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,aACAA,EAAA,WACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,WACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,cACAA,EAAA,OACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,cACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,YACAA,EAAA,cACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,UACAA,EAAA,WACAA,EAAA,eACAA,EAAA,WACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,cACAA,EAAA,cACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,QACAA,EAAA,WACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,YACAA,EAAA,WAEAA,EAAA,gBAAAuC,EAAA8O,uBAAA,SAAArR,GACAA,EAAA,UACAA,EAAA,OACAA,EAAA,OACAA,EAAA,SACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,aAGAnB,EAAAquH,cAIA,SAAApuH,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAkB,OAAA,IAEAlB,EAAAkiJ,mBAAAliJ,EAAAmiJ,oBAAAniJ,EAAA+mD,mBAAA/mD,EAAA6+G,mBAAAz8G,EAEA,IAAAE,EAAA,oBAAAtB,QAAA,kBAAAA,OAAAuB,SAAA,SAAAF,GAAoG,cAAAA,GAAqB,SAAAA,GAAmB,OAAAA,GAAA,oBAAArB,QAAAqB,EAAAG,cAAAxB,QAAAqB,IAAArB,OAAAa,UAAA,gBAAAQ,GAE5I2lC,EAAA,WAAgC,SAAAlS,EAAAxH,EAAA2Z,GAA2C,QAAA/nC,EAAA,EAAgBA,EAAA+nC,EAAA3kC,OAAkBpD,IAAA,CAAO,IAAA40B,EAAAmT,EAAA/nC,GAA2B40B,EAAAj0B,WAAAi0B,EAAAj0B,aAAA,EAAwDi0B,EAAA1M,cAAA,EAAgC,UAAA0M,MAAAzM,UAAA,GAAuD1nB,OAAAC,eAAA0tB,EAAAwG,EAAAtzB,IAAAszB,IAA+D,gBAAAhB,EAAAoU,EAAAC,GAA2L,OAAlID,GAAApS,EAAAhC,EAAAjyB,UAAAqmC,GAAqEC,GAAArS,EAAAhC,EAAAqU,GAA6DrU,GAAxhB,GAEApwB,EAAA5D,EAAA,GAEAkE,EAAAlE,EAAA,KAEAsiJ,EAAAtiJ,EAAA,KAIA,IAAAuiJ,GACAnhJ,YACA,SAAAwC,EAAA6N,QAAArN,KAAA,WAAAR,EAAA+M,sBAIAs2C,EAAA,WACA,SAAAA,EAAA9/C,GACA,IAAAoG,EAAApG,EAAAoG,KACAi1I,EAAAr7I,EAAAwJ,gBACAA,OAAArO,IAAAkgJ,MAZA,SAAA39G,EAAA7Q,GAAiD,KAAA6Q,aAAA7Q,GAA0C,UAAArwB,UAAA,qCAc3F2kC,CAAAlkC,KAAA6iD,GAEA7iD,KAAAmJ,OACAnJ,KAAAuM,iBAAA,IAAAA,EAuBA,OApBAu3B,EAAA+e,IACAvlD,IAAA,SACAN,MAAA,SAAAyuB,GACA,OAAA4yH,EAAAv3H,OACA3d,KAAAnJ,KAAAmJ,KACAoD,gBAAAvM,KAAAuM,gBACAkf,UAIAnuB,IAAA,kBACAN,MAAA,SAAAo7I,GACA,OAAAiG,EAAAC,YACAn1I,KAAAnJ,KAAAmJ,KACAoD,gBAAAvM,KAAAuM,gBACA6rI,cAKAv1F,EAhCA,GAmCA,SAAA07F,EAAA//I,GACA,IAAAC,MAAAC,QAAAF,GACA,YAGA,IADA,IAAAY,EAAAZ,EAAAY,OACApD,EAAA,EAAiBA,EAAAoD,EAAYpD,IAC7B,qBAAAwC,EAAAxC,GAAA,CAEA,IADA,IAAAiX,EAAA,IAAAxU,MAAAW,GACAJ,EAAA,EAAsBA,EAAAI,EAAaJ,IACnCiU,EAAAjU,IAAAR,EAAAQ,GAEA,OAAAiU,EAGA,OAAAzU,EAEA,IAAA6/I,GAMAG,eAAA,SAAA76G,EAAA86G,EAAAC,EAAAz1I,GACA,IAAAjN,EAAA2Z,EACAvW,EAAA,EACA,IAAApD,EAAA,EAAA2Z,EAAAguB,EAAAvkC,OAAmCpD,EAAA2Z,EAAQ3Z,IAC3CoD,GAAAukC,EAAA3nC,GAEAoD,GAAAq/I,EACA,IAAA1pF,EAAA,IAAAt2D,MAAAW,GACAk8D,EAAA,EACAC,EAAA,EACAojF,EAAA,GAAAn3I,KAAAgxD,IAAA,EAAAkmF,GAAA,GACAE,EAAA31I,EAAAgzC,UAAA78C,EAAAs/I,EAAA,MACAG,EAAA,EACA,IAAA7iJ,EAAA,EAAiBA,EAAAoD,EAAYpD,IAAA,CAC7B,KAAAs/D,EAAAojF,GACAnjF,IAAA,EACAA,GAAAqjF,EAAAC,KACAvjF,GAAA,EAEAA,GAAAojF,EACA3pF,EAAA/4D,IAAAu/D,GAAAD,GAAAqjF,EACApjF,IAAA,GAAAD,GAAA,EAEA,OAAAvG,GAEAyjB,MAAA,SAAAv1E,GACA,IAAAkG,EAAAlG,EAAAkG,KACAoD,EAAAtJ,EAAAsJ,gBACAkf,EAAAxoB,EAAAwoB,GAEAhJ,EAAAgJ,EAAAhJ,KACAA,IACAA,EAAAgJ,GAEA,IAEAqzH,GAFA9+I,KAAA++I,iBAAA,KAAA/+I,KAAAg/I,sBAAAh/I,KAAAi/I,iBAAAj/I,KAAAk/I,qBACAz8H,EAAA7lB,IAAA,iBAEA,IAAAkiJ,EACA,UAAAt/I,EAAAoP,YAAA,4BAEA,OAAAkwI,EAAA5iJ,KAAA8D,MACAmJ,OACAoD,kBACAkf,KACAhJ,UAGAogF,OAAA,SAAAp9F,GACA,IAAA0D,EAAA1D,EAAA0D,KACAoD,EAAA9G,EAAA8G,gBACAo2F,EAAAl9F,EAAAk9F,GAGA,OADAA,EAAA,IAEA,KA3DA,EA4DA,OAAA3iG,KAAAm/I,wBACAh2I,OACAoD,kBACAo2F,OAEA,KAhEA,EAiEA,OAAA3iG,KAAAo/I,6BACAj2I,OACAoD,kBACAo2F,OAEA,KArEA,EAsEA,OAAA3iG,KAAAq/I,wBACAl2I,OACAoD,kBACAo2F,OAEA,QACA,OAAA3iG,KAAAs/I,2BACAn2I,OACAoD,kBACAo2F,SAIA77E,MAAA,SAAAphB,GACA,IAAAyD,EAAAzD,EAAAyD,KACAoD,EAAA7G,EAAA6G,gBACAkf,EAAA/lB,EAAA+lB,GAEAk3E,EAAA3iG,KAAAw4E,OACArvE,OACAoD,kBACAkf,OAEA,OAAAzrB,KAAA6iG,QACA15F,OACAoD,kBACAo2F,QAGA27C,WAAA,SAAA1wG,GACA,IAAAzkC,EAAAykC,EAAAzkC,KACAoD,EAAAqhC,EAAArhC,gBACA6rI,EAAAxqG,EAAAwqG,MAEA,IAAA35I,MAAAC,QAAA05I,GACA,OAAAp4I,KAAA8mB,OACA3d,OACAoD,kBACAkf,GAAA2sH,IAIA,IADA,IAAAnlC,KACA1zE,EAAA,EAAAqqB,EAAAwuF,EAAAh5I,OAAwCmgC,EAAAqqB,EAAQrqB,IAChD0zE,EAAA9zG,KAAAa,KAAA8mB,OACA3d,OACAoD,kBACAkf,GAAAtiB,EAAAu3C,WAAA03F,EAAA74G,OAGA,gBAAA7qB,EAAAkuB,EAAAF,EAAAC,GACA,QAAA3mC,EAAA,EAAA2Z,EAAAs9F,EAAA7zG,OAA4CpD,EAAA2Z,EAAQ3Z,IACpDi3G,EAAAj3G,GAAA0Y,EAAAkuB,EAAAF,EAAAC,EAAA3mC,KAIA+iJ,iBAAA,SAAAn9F,GACAA,EAAAz4C,KACAy4C,EAAAr1C,gBADA,IAEAkf,EAAAm2B,EAAAn2B,GACAhJ,EAAAm/B,EAAAn/B,KAEA,SAAA88H,EAAA/gJ,GAIA,IAHA,IAAAyiG,EAAAziG,EAAAY,OACAwqB,KACAkE,EAAA,EACA9xB,EAAA,EAAuBA,EAAAilG,EAAiBjlG,GAAA,EACxC4tB,EAAAkE,IAAAtvB,EAAAxC,GAAAwC,EAAAxC,EAAA,MACA8xB,EAEA,OAAAlE,EAEA,IAAAsN,EAAAqnH,EAAA97H,EAAAE,SAAA,WACAyrC,EAAAmwF,EAAA97H,EAAAE,SAAA,UACA,IAAAuU,IAAAk3B,EACA,UAAA5uD,EAAAoP,YAAA,sBAEA,IAAA4wI,EAAAtoH,EAAA93B,OAAA,EACAq/I,EAAArwF,EAAAhvD,OAAA,EACA83B,EAAAqoH,EAAAroH,GACAk3B,EAAAmxF,EAAAnxF,GACA,IAAAzqB,EAAA46G,EAAA97H,EAAAE,SAAA,SACA+7H,EAAAj8H,EAAA7lB,IAAA,iBACAoxI,EAAAvrH,EAAA7lB,IAAA,YACA,IAAAoxI,IACA,EAAAxuI,EAAAqK,MAAA,8CAAAmkI,GAEA,IAAAyR,EAAAlB,EAAA97H,EAAAE,SAAA,WACA,GAAA88H,EAMAA,EAAAF,EAAAE,OANA,CACAA,KACA,QAAAzjJ,EAAA,EAAuBA,EAAAwjJ,IAAexjJ,EACtCyjJ,EAAAtgJ,MAAA,EAAAwkC,EAAA3nC,GAAA,IAKA,IAAAstE,EAAAi1E,EAAA97H,EAAAE,SAAA,WAOA,OA9KA,EA8KA68H,EAAAtoH,EAAAuoH,EAHAn2E,EAHAA,EAGAi2E,EAAAj2E,GAFAlb,EAIApuD,KAAAw+I,eAAA76G,EAAA86G,EAAAC,EAAAjzH,GACAkY,EAAA86G,EAAAj3I,KAAAgxD,IAAA,EAAAkmF,GAAA,EAAAtwF,IAEA+wF,uBAAA,SAAAh9F,GACAA,EAAAh5C,KACAg5C,EAAA51C,gBADA,IAEAo2F,EAAAxgD,EAAAwgD,GAEA,SAAA+8C,EAAA77H,EAAA87H,EAAAC,EAAAC,EAAAC,GACA,OAAAD,GAAAC,EAAAD,IAAAD,EAAAD,IAAA97H,EAAA87H,GAEA,gBAAAjrI,EAAAkuB,EAAAF,EAAAC,GACA,IAWA3mC,EAAAujC,EAXApjC,EAAAwmG,EAAA,GACAzrE,EAAAyrE,EAAA,GACA88C,EAAA98C,EAAA,GACAr5B,EAAAq5B,EAAA,GACAo9C,EAAAp9C,EAAA,GACAh/D,EAAAg/D,EAAA,GACAnlG,EAAAmlG,EAAA,GACAv0C,EAAAu0C,EAAA,GACAq9C,EAAA,GAAA7jJ,EACA8jJ,EAAA,IAAAC,aAAAF,GACAG,EAAA,IAAAx8H,YAAAq8H,GAEA,IAAAzgH,EAAA,EAAmBA,EAAAygH,EAAkBzgH,IACrC0gH,EAAA1gH,GAAA,EAEA,IAAAJ,EAAA3hC,EACAgW,EAAA,EACA,IAAAxX,EAAA,EAAmBA,EAAAG,IAAOH,EAAA,CAC1B,IAAAokJ,EAAAlpH,EAAAl7B,GAAA,GACAqkJ,EAAAnpH,EAAAl7B,GAAA,GAEA8H,EAAA47I,EADAl4I,KAAAoK,IAAApK,KAAAC,IAAAiN,EAAAkuB,EAAA5mC,GAAAokJ,GAAAC,GACAD,EAAAC,EAAAZ,EAAAzjJ,GAAA,GAAAyjJ,EAAAzjJ,GAAA,IACAskJ,EAAA38G,EAAA3nC,GAEAukJ,GADAz8I,EAAA0D,KAAAoK,IAAApK,KAAAC,IAAA3D,EAAA,GAAAw8I,EAAA,IACAA,EAAA,EAAA94I,KAAA0mB,MAAApqB,KAAA,EACA08I,EAAAD,EAAA,EAAAz8I,EACA28I,EAAA38I,EAAAy8I,EACAxvE,EAAAwvE,EAAAphH,EACAuvG,EAAA39D,EAAA5xC,EACA,IAAAI,EAAA,EAAqBA,EAAAygH,EAAkBzgH,IACvCA,EAAA/rB,GACAysI,EAAA1gH,IAAAkhH,EACAN,EAAA5gH,IAAAmvG,IAEAuR,EAAA1gH,IAAAihH,EACAL,EAAA5gH,IAAAwxC,GAGA5xC,GAAAmhH,EACA9sI,IAAA,EAEA,IAAA+rB,EAAA,EAAmBA,EAAA/hC,IAAO+hC,EAAA,CAC1B,IAAAmhH,EAAA,EACA,IAAA1kJ,EAAA,EAAqBA,EAAAgkJ,EAAkBhkJ,IACvC0kJ,GAAAX,EAAAI,EAAAnkJ,GAAAujC,GAAA0gH,EAAAjkJ,GAEA0kJ,EAAAhB,EAAAgB,EAAA,IAAAp3E,EAAA/pC,GAAA,GAAA+pC,EAAA/pC,GAAA,IACAmD,EAAAC,EAAApD,GAAA/3B,KAAAoK,IAAApK,KAAAC,IAAAi5I,EAAAtyF,EAAA7uB,GAAA,IAAA6uB,EAAA7uB,GAAA,OAIAy/G,sBAAA,SAAA38F,GACAA,EAAAl5C,KACAk5C,EAAA91C,gBACA81C,EAAA52B,GAQA,IAVA,IAGAhJ,EAAA4/B,EAAA5/B,KAEAy4H,EAAAqD,EAAA97H,EAAAE,SAAA,YACAw4H,EAAAoD,EAAA97H,EAAAE,SAAA,YACAnlB,EAAAilB,EAAA7lB,IAAA,KACAwC,EAAA87I,EAAA97I,OACAo8E,KACAx/E,EAAA,EAAqBA,EAAAoD,IAAYpD,EACjCw/E,EAAAr8E,KAAAg8I,EAAAn/I,GAAAk/I,EAAAl/I,IAEA,OAzPA,EAyPAk/I,EAAA1/D,EAAAh+E,IAEA4hJ,4BAAA,SAAAuB,GACAA,EAAAx3I,KACAw3I,EAAAp0I,gBADA,IAEAo2F,EAAAg+C,EAAAh+C,GAEAu4C,EAAAv4C,EAAA,GACAnnB,EAAAmnB,EAAA,GACAnlG,EAAAmlG,EAAA,GACAvjG,EAAAo8E,EAAAp8E,OACA,gBAAAsV,EAAAkuB,EAAAF,EAAAC,GAEA,IADA,IAAA9e,EAAA,IAAArmB,EAAAkX,EAAAkuB,GAAAp7B,KAAAgxD,IAAA9jD,EAAAkuB,GAAAplC,GACA+hC,EAAA,EAAuBA,EAAAngC,IAAYmgC,EACnCmD,EAAAC,EAAApD,GAAA27G,EAAA37G,GAAA1b,EAAA23D,EAAAj8C,KAIA0/G,iBAAA,SAAA2B,GACA,IAAAz3I,EAAAy3I,EAAAz3I,KACAoD,EAAAq0I,EAAAr0I,gBAEAkW,GADAm+H,EAAAn1H,GACAm1H,EAAAn+H,MAEAyU,EAAAqnH,EAAA97H,EAAAE,SAAA,WACA,IAAAuU,EACA,UAAA13B,EAAAoP,YAAA,aAGA,OADAsoB,EAAA93B,OAAA,EAEA,UAAAI,EAAAoP,YAAA,mCAIA,IAFA,IAAAiyI,EAAAp+H,EAAA7lB,IAAA,aACAkkJ,KACA9kJ,EAAA,EAAA2Z,EAAAkrI,EAAAzhJ,OAAyCpD,EAAA2Z,IAAQ3Z,EACjD8kJ,EAAA3hJ,KAAAa,KAAA8mB,OACA3d,OACAoD,kBACAkf,GAAAtiB,EAAAu3C,WAAAmgG,EAAA7kJ,OAKA,OAnSA,EAmSAk7B,EAFAqnH,EAAA97H,EAAAE,SAAA,WACA47H,EAAA97H,EAAAE,SAAA,WACAm+H,IAEAzB,uBAAA,SAAA0B,GACAA,EAAA53I,KACA43I,EAAAx0I,gBADA,IAEAo2F,EAAAo+C,EAAAp+C,GAEAzrE,EAAAyrE,EAAA,GACAuK,EAAAvK,EAAA,GACA88C,EAAA98C,EAAA,GACAm+C,EAAAn+C,EAAA,GACA2B,EAAA,IAAAlU,aAAA,GACA,gBAAA17E,EAAAkuB,EAAAF,EAAAC,GAUA,IATA,IAQA5wB,EARA,SAAAA,EAAAH,EAAAnK,GAMA,OALAsK,EAAAtK,EACAsK,EAAAtK,EACWsK,EAAAH,IACXG,EAAAH,GAEAG,EAEA2F,CAAAhD,EAAAkuB,GAAA1L,EAAA,GAAAA,EAAA,IACAl7B,EAAA,EAAA2Z,EAAAu3F,EAAA9tG,OAA2CpD,EAAA2Z,KAC3C5D,EAAAm7F,EAAAlxG,MADmDA,GAKnD,IAAAglJ,EAAA9pH,EAAA,GACAl7B,EAAA,IACAglJ,EAAA9zC,EAAAlxG,EAAA,IAEA,IAAAilJ,EAAA/pH,EAAA,GACAl7B,EAAAkxG,EAAA9tG,SACA6hJ,EAAA/zC,EAAAlxG,IAEA,IAAAklJ,EAAAzB,EAAA,EAAAzjJ,GACAmlJ,EAAA1B,EAAA,EAAAzjJ,EAAA,GACAsoG,EAAA,GAAA08C,IAAAC,EAAAC,KAAAnvI,EAAAivI,IAAAG,EAAAD,IAAAD,EAAAD,GACAF,EAAA9kJ,GAAAsoG,EAAA,EAAA5hE,EAAAC,KAGAu8G,oBAAA,SAAAkC,GACAA,EAAAj4I,KACAi4I,EAAA70I,gBADA,IAEAkf,EAAA21H,EAAA31H,GACAhJ,EAAA2+H,EAAA3+H,KAEAyU,EAAAqnH,EAAA97H,EAAAE,SAAA,WACAyrC,EAAAmwF,EAAA97H,EAAAE,SAAA,UACA,IAAAuU,EACA,UAAA13B,EAAAoP,YAAA,cAEA,IAAAw/C,EACA,UAAA5uD,EAAAoP,YAAA,aAEA,IAAAy+C,EAAA,IAAA6wF,EAAAmD,gBAAA51H,GAGA,OA5VA,EA4VAyL,EAAAk3B,EAFA,IAAA8vF,EAAAoD,iBAAAj0F,GACAvmC,UAGAw4H,0BAAA,SAAAiC,GACAA,EAAAp4I,KAAA,IACAoD,EAAAg1I,EAAAh1I,gBACAo2F,EAAA4+C,EAAA5+C,GAEAzrE,EAAAyrE,EAAA,GACAv0C,EAAAu0C,EAAA,GACAn3F,EAAAm3F,EAAA,GACA,GAAAp2F,GAAA4xI,EAAAnhJ,MAAA,CACA,IAAAiyI,GAAA,IAAA+O,GAAAlb,QAAAt3H,EAAA0rB,EAAAk3B,GACA,GAAA6gF,EACA,WAAArrH,SAAA,sCAAAqrH,IAGA,EAAAzvI,EAAAqK,MAAA,iCACA,IAAA23I,EAAApzF,EAAAhvD,QAAA,EACAqiJ,EAAAvqH,EAAA93B,QAAA,EACA0tG,EAAA,IAAAmxC,EAAAzyI,GACA4gD,EAAA3vD,OAAAY,OAAA,MAEAqkJ,EADA,KAEAp9C,EAAA,IAAAlU,aAAAqxD,GACA,gBAAA/sI,EAAAkuB,EAAAF,EAAAC,GACA,IAAA3mC,EAAAgB,EACAM,EAAA,GACA2nB,EAAAq/E,EACA,IAAAtoG,EAAA,EAAmBA,EAAAylJ,EAAezlJ,IAClCgB,EAAA0X,EAAAkuB,EAAA5mC,GACAipB,EAAAjpB,GAAAgB,EACAM,GAAAN,EAAA,IAEA,IAAA2kJ,EAAAv1F,EAAA9uD,GACA,QAAAY,IAAAyjJ,EAAA,CAIA,IAAA3gE,EAAA,IAAAoP,aAAAoxD,GACAn3I,EAAAyiG,EAAA80C,QAAA38H,GACA48H,EAAAx3I,EAAAjL,OAAAoiJ,EACA,IAAAxlJ,EAAA,EAAmBA,EAAAwlJ,EAAgBxlJ,IAAA,CACnCgB,EAAAqN,EAAAw3I,EAAA7lJ,GACA,IAAA8lJ,EAAA1zF,EAAA,EAAApyD,GACAgB,EAAA8kJ,EACA9kJ,EAAA8kJ,EAGA9kJ,GADA8kJ,EAAA1zF,EAAA,EAAApyD,EAAA,MAEAgB,EAAA8kJ,GAGA9gE,EAAAhlF,GAAAgB,EAEA0kJ,EAAA,IACAA,IACAt1F,EAAA9uD,GAAA0jF,GAEAt+C,EAAAxgB,IAAA8+D,EAAAr+C,QAvBAD,EAAAxgB,IAAAy/H,EAAAh/G,MAyCA,IAAAo/G,EAAA,WAEA,SAAAA,EAAAC,GACAhiJ,KAAAqK,MAAA23I,EAAAvjJ,MAAAd,UAAAgF,MAAAzG,KAAA8lJ,EAAA,MAoDA,OAlDAD,EAAApkJ,WACAwB,KAAA,SAAAnC,GACA,GAAAgD,KAAAqK,MAAAjL,QANA,IAOA,UAAAsB,MAAA,uCAEAV,KAAAqK,MAAAlL,KAAAnC,IAEA4rB,IAAA,WACA,GAAA5oB,KAAAqK,MAAAjL,QAAA,EACA,UAAAsB,MAAA,wCAEA,OAAAV,KAAAqK,MAAAue,OAEAq5H,KAAA,SAAAzkJ,GACA,GAAAwC,KAAAqK,MAAAjL,OAAA5B,GAlBA,IAmBA,UAAAkD,MAAA,uCAGA,IADA,IAAA2J,EAAArK,KAAAqK,MACArO,EAAAqO,EAAAjL,OAAA5B,EAAA+hC,EAAA/hC,EAAA,EAA+C+hC,GAAA,EAAQA,IAAAvjC,IACvDqO,EAAAlL,KAAAkL,EAAArO,KAGA8xB,MAAA,SAAAtwB,GACAwC,KAAAb,KAAAa,KAAAqK,MAAArK,KAAAqK,MAAAjL,OAAA5B,EAAA,KAEA0kJ,KAAA,SAAA1kJ,EAAAK,GACA,IAIA7B,EACAujC,EACAtiC,EANAoN,EAAArK,KAAAqK,MACApO,EAAAoO,EAAAjL,OAAA5B,EACAX,EAAAwN,EAAAjL,OAAA,EACAhD,EAAAH,GAAA4B,EAAA2J,KAAA0mB,MAAArwB,EAAAL,MAIA,IAAAxB,EAAAC,EAAAsjC,EAAA1iC,EAAwBb,EAAAujC,EAAOvjC,IAAAujC,IAC/BtiC,EAAAoN,EAAArO,GACAqO,EAAArO,GAAAqO,EAAAk1B,GACAl1B,EAAAk1B,GAAAtiC,EAEA,IAAAjB,EAAAC,EAAAsjC,EAAAnjC,EAAA,EAA4BJ,EAAAujC,EAAOvjC,IAAAujC,IACnCtiC,EAAAoN,EAAArO,GACAqO,EAAArO,GAAAqO,EAAAk1B,GACAl1B,EAAAk1B,GAAAtiC,EAEA,IAAAjB,EAAAI,EAAAmjC,EAAA1iC,EAAwBb,EAAAujC,EAAOvjC,IAAAujC,IAC/BtiC,EAAAoN,EAAArO,GACAqO,EAAArO,GAAAqO,EAAAk1B,GACAl1B,EAAAk1B,GAAAtiC,IAIA8kJ,EAvDA,GAyDA9D,EAAA,WACA,SAAAA,EAAAtC,GACA37I,KAAA27I,YAkOA,OAhOAsC,EAAAtgJ,WACAikJ,QAAA,SAAAI,GAMA,IALA,IAIAG,EAAAjwI,EAAAlB,EAJA3G,EAAA,IAAA03I,EAAAC,GACA7nH,EAAA,EACAwhH,EAAA37I,KAAA27I,UACAv8I,EAAAu8I,EAAAv8I,OAEA+6B,EAAA/6B,GAEA,qBADA+iJ,EAAAxG,EAAAxhH,MAKA,OAAAgoH,GACA,SACAnxI,EAAA3G,EAAAue,OACA1W,EAAA7H,EAAAue,SAEAuR,EAAAnpB,GAEA,MACA,QAEAmpB,EADAjoB,EAAA7H,EAAAue,MAEA,MACA,UACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAAs8G,IAAA5xG,IACA,MACA,UACAlB,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,EAAAlB,GACA,MACA,UACAA,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,OACA,EAAAppB,EAAA2O,QAAA+D,KAAA,EAAA1S,EAAA2O,QAAA6C,GACA3G,EAAAlL,KAAA+S,GAAAlB,GAEA3G,EAAAlL,KAAA+S,EAAAlB,GAEA,MACA,WACAkB,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAA46I,KAAAlwI,IACA,MACA,eACAlB,EAAA3G,EAAAue,OACA1W,EAAA7H,EAAAue,OACA,EACAve,EAAAlL,KAAA+S,GAAAlB,GAEA3G,EAAAlL,KAAA+S,GAAAlB,GAEA,MACA,cACAkB,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAAsc,KAAA5R,IACA,MACA,WACAA,EAAA7H,EAAAue,MACAve,EAAA43I,KAAA/vI,GACA,MACA,UACAA,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAA66I,IAAAnwI,IACA,MACA,UACAA,EAAA,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,GACA,MACA,UACA,MACA,UACAlB,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,EAAAlB,GACA,MACA,UACA3G,EAAA43I,KAAA,GACA,MACA,SACAjxI,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,IAAAlB,GACA,MACA,WACA3G,EAAA63I,KAAA,KACA,MACA,UACAlxI,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAAgxD,IAAAtmD,EAAAlB,IACA,MACA,YACA3G,EAAAlL,MAAA,GACA,MACA,YACA+S,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAA0mB,MAAAhc,IACA,MACA,SACAlB,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,GAAAlB,GACA,MACA,SACAA,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,EAAAlB,GACA,MACA,WACAA,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,EAAAlB,EAAA,GACA,MACA,YACAkB,EAAA7H,EAAAue,MACAve,EAAAyjB,MAAA5b,GACA,MACA,SACAlB,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,GAAAlB,GACA,MACA,SACAkB,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAA8I,IAAA4B,IACA,MACA,UACAA,EAAA7H,EAAAue,MACAve,EAAAlL,KAAAqI,KAAA8I,IAAA4B,GAAA1K,KAAA86I,MACA,MACA,SACAtxI,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,EAAAlB,GACA,MACA,UACAA,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,EAAAlB,GACA,MACA,UACAA,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,EAAAlB,GACA,MACA,SACAA,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,MACAve,EAAAlL,KAAA+S,IAAAlB,GACA,MACA,UACAkB,EAAA7H,EAAAue,MACAve,EAAAlL,MAAA+S,GACA,MACA,UACAA,EAAA7H,EAAAue,OACA,EAAAppB,EAAA2O,QAAA+D,GACA7H,EAAAlL,MAAA+S,GAEA7H,EAAAlL,MAAA+S,GAEA,MACA,SACAlB,EAAA3G,EAAAue,MACA1W,EAAA7H,EAAAue,OACA,EAAAppB,EAAA2O,QAAA+D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","file":"static/js/1.591d6af0.chunk.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__w_pdfjs_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__w_pdfjs_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__w_pdfjs_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.550';\nvar pdfjsBuild = '76337fdc';\nvar pdfjsCoreWorker = __w_pdfjs_require__(1);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _pdf_manager = __w_pdfjs_require__(115);\n\nvar _is_node = __w_pdfjs_require__(5);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _message_handler = __w_pdfjs_require__(153);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.550';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _message_handler.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (boundException) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', boundException);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _message_handler.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.getInheritableProperty = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(3);\n\nvar _streams_polyfill = __w_pdfjs_require__(113);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VerbosityLevel.WARNINGS;\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction getInheritableProperty(_ref) {\n  var dict = _ref.dict,\n      key = _ref.key,\n      _ref$getArray = _ref.getArray,\n      getArray = _ref$getArray === undefined ? false : _ref$getArray,\n      _ref$stopWhenFound = _ref.stopWhenFound,\n      stopWhenFound = _ref$stopWhenFound === undefined ? true : _ref$stopWhenFound;\n\n  var LOOP_LIMIT = 100;\n  var loopCount = 0;\n  var values = void 0;\n  while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n      if (stopWhenFound) {\n        return value;\n      }\n      if (!values) {\n        values = [];\n      }\n      values.push(value);\n    }\n    if (++loopCount > LOOP_LIMIT) {\n      warn('getInheritableProperty: maximum loop count exceeded for \"' + key + '\"');\n      break;\n    }\n    dict = dict.get('Parent');\n  }\n  return values;\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VerbosityLevel = VerbosityLevel;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getInheritableProperty = getInheritableProperty;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar globalScope = __w_pdfjs_require__(4);\nif (!globalScope._pdfjsCompatibilityChecked) {\n  globalScope._pdfjsCompatibilityChecked = true;\n  var isNodeJS = __w_pdfjs_require__(5);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(6);\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    __w_pdfjs_require__(34);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(43);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(45);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(47);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(50);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(90);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(110);\n  })();\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(7);\nmodule.exports = __w_pdfjs_require__(10).String.includes;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\nvar context = __w_pdfjs_require__(26);\nvar INCLUDES = 'includes';\n$export($export.P + $export.F * __w_pdfjs_require__(33)(INCLUDES), 'String', {\n  includes: function includes(searchString) {\n    return !!~context(this, searchString, INCLUDES).indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(9);\nvar core = __w_pdfjs_require__(10);\nvar hide = __w_pdfjs_require__(11);\nvar redefine = __w_pdfjs_require__(21);\nvar ctx = __w_pdfjs_require__(24);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(12);\nvar createDesc = __w_pdfjs_require__(20);\nmodule.exports = __w_pdfjs_require__(16) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(13);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(15);\nvar toPrimitive = __w_pdfjs_require__(19);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(16) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(16) && !__w_pdfjs_require__(17)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(18)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(17)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nvar document = __w_pdfjs_require__(9).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(9);\nvar hide = __w_pdfjs_require__(11);\nvar has = __w_pdfjs_require__(22);\nvar SRC = __w_pdfjs_require__(23)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(10).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(25);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isRegExp = __w_pdfjs_require__(27);\nvar defined = __w_pdfjs_require__(32);\nmodule.exports = function (that, searchString, NAME) {\n  if (isRegExp(searchString)) throw TypeError('String#' + NAME + \" doesn't accept regex!\");\n  return String(defined(that));\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nvar cof = __w_pdfjs_require__(28);\nvar MATCH = __w_pdfjs_require__(29)('match');\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(30)('wks');\nvar uid = __w_pdfjs_require__(23);\nvar _Symbol = __w_pdfjs_require__(9).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = __w_pdfjs_require__(10);\nvar global = __w_pdfjs_require__(9);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __w_pdfjs_require__(31) ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar MATCH = __w_pdfjs_require__(29)('match');\nmodule.exports = function (KEY) {\n  var re = /./;\n  try {\n    '/./'[KEY](re);\n  } catch (e) {\n    try {\n      re[MATCH] = false;\n      return !'/./'[KEY](re);\n    } catch (f) {}\n  }\n  return true;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(35);\nmodule.exports = __w_pdfjs_require__(10).Array.includes;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\nvar $includes = __w_pdfjs_require__(36)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(42)('includes');\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(37);\nvar toLength = __w_pdfjs_require__(39);\nvar toAbsoluteIndex = __w_pdfjs_require__(41);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(38);\nvar defined = __w_pdfjs_require__(32);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(28);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(40);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(40);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(29)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(11)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(44);\nmodule.exports = __w_pdfjs_require__(10).Math.log2;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(46);\nmodule.exports = __w_pdfjs_require__(10).Number.isNaN;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(48);\nmodule.exports = __w_pdfjs_require__(10).Number.isInteger;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(49) });\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(51);\n__w_pdfjs_require__(53);\n__w_pdfjs_require__(68);\n__w_pdfjs_require__(71);\n__w_pdfjs_require__(88);\n__w_pdfjs_require__(89);\nmodule.exports = __w_pdfjs_require__(10).Promise;\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(52);\nvar test = {};\ntest[__w_pdfjs_require__(29)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(21)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(28);\nvar TAG = __w_pdfjs_require__(29)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(54)(true);\n__w_pdfjs_require__(55)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(40);\nvar defined = __w_pdfjs_require__(32);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(31);\nvar $export = __w_pdfjs_require__(8);\nvar redefine = __w_pdfjs_require__(21);\nvar hide = __w_pdfjs_require__(11);\nvar Iterators = __w_pdfjs_require__(56);\nvar $iterCreate = __w_pdfjs_require__(57);\nvar setToStringTag = __w_pdfjs_require__(65);\nvar getPrototypeOf = __w_pdfjs_require__(66);\nvar ITERATOR = __w_pdfjs_require__(29)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(58);\nvar descriptor = __w_pdfjs_require__(20);\nvar setToStringTag = __w_pdfjs_require__(65);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(11)(IteratorPrototype, __w_pdfjs_require__(29)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(13);\nvar dPs = __w_pdfjs_require__(59);\nvar enumBugKeys = __w_pdfjs_require__(63);\nvar IE_PROTO = __w_pdfjs_require__(62)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(18)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(64).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(12);\nvar anObject = __w_pdfjs_require__(13);\nvar getKeys = __w_pdfjs_require__(60);\nmodule.exports = __w_pdfjs_require__(16) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(61);\nvar enumBugKeys = __w_pdfjs_require__(63);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(22);\nvar toIObject = __w_pdfjs_require__(37);\nvar arrayIndexOf = __w_pdfjs_require__(36)(false);\nvar IE_PROTO = __w_pdfjs_require__(62)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(30)('keys');\nvar uid = __w_pdfjs_require__(23);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(9).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(12).f;\nvar has = __w_pdfjs_require__(22);\nvar TAG = __w_pdfjs_require__(29)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(22);\nvar toObject = __w_pdfjs_require__(67);\nvar IE_PROTO = __w_pdfjs_require__(62)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(32);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(69);\nvar getKeys = __w_pdfjs_require__(60);\nvar redefine = __w_pdfjs_require__(21);\nvar global = __w_pdfjs_require__(9);\nvar hide = __w_pdfjs_require__(11);\nvar Iterators = __w_pdfjs_require__(56);\nvar wks = __w_pdfjs_require__(29);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(42);\nvar step = __w_pdfjs_require__(70);\nvar Iterators = __w_pdfjs_require__(56);\nvar toIObject = __w_pdfjs_require__(37);\nmodule.exports = __w_pdfjs_require__(55)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(31);\nvar global = __w_pdfjs_require__(9);\nvar ctx = __w_pdfjs_require__(24);\nvar classof = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(14);\nvar aFunction = __w_pdfjs_require__(25);\nvar anInstance = __w_pdfjs_require__(72);\nvar forOf = __w_pdfjs_require__(73);\nvar speciesConstructor = __w_pdfjs_require__(77);\nvar task = __w_pdfjs_require__(78).set;\nvar microtask = __w_pdfjs_require__(80)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(81);\nvar perform = __w_pdfjs_require__(82);\nvar userAgent = __w_pdfjs_require__(83);\nvar promiseResolve = __w_pdfjs_require__(84);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(29)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(85)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(65)($Promise, PROMISE);\n__w_pdfjs_require__(86)(PROMISE);\nWrapper = __w_pdfjs_require__(10)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(87)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(24);\nvar call = __w_pdfjs_require__(74);\nvar isArrayIter = __w_pdfjs_require__(75);\nvar anObject = __w_pdfjs_require__(13);\nvar toLength = __w_pdfjs_require__(39);\nvar getIterFn = __w_pdfjs_require__(76);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(13);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(56);\nvar ITERATOR = __w_pdfjs_require__(29)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(52);\nvar ITERATOR = __w_pdfjs_require__(29)('iterator');\nvar Iterators = __w_pdfjs_require__(56);\nmodule.exports = __w_pdfjs_require__(10).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(13);\nvar aFunction = __w_pdfjs_require__(25);\nvar SPECIES = __w_pdfjs_require__(29)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(24);\nvar invoke = __w_pdfjs_require__(79);\nvar html = __w_pdfjs_require__(64);\nvar cel = __w_pdfjs_require__(18);\nvar global = __w_pdfjs_require__(9);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(28)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(9);\nvar macrotask = __w_pdfjs_require__(78).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(28)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve(undefined);\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(25);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(9);\nvar navigator = global.navigator;\nmodule.exports = navigator && navigator.userAgent || '';\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(13);\nvar isObject = __w_pdfjs_require__(14);\nvar newPromiseCapability = __w_pdfjs_require__(81);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(21);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(9);\nvar dP = __w_pdfjs_require__(12);\nvar DESCRIPTORS = __w_pdfjs_require__(16);\nvar SPECIES = __w_pdfjs_require__(29)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(29)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\nvar core = __w_pdfjs_require__(10);\nvar global = __w_pdfjs_require__(9);\nvar speciesConstructor = __w_pdfjs_require__(77);\nvar promiseResolve = __w_pdfjs_require__(84);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\nvar newPromiseCapability = __w_pdfjs_require__(81);\nvar perform = __w_pdfjs_require__(82);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(51);\n__w_pdfjs_require__(68);\n__w_pdfjs_require__(91);\n__w_pdfjs_require__(106);\n__w_pdfjs_require__(108);\nmodule.exports = __w_pdfjs_require__(10).WeakMap;\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(92)(0);\nvar redefine = __w_pdfjs_require__(21);\nvar meta = __w_pdfjs_require__(96);\nvar assign = __w_pdfjs_require__(97);\nvar weak = __w_pdfjs_require__(100);\nvar isObject = __w_pdfjs_require__(14);\nvar fails = __w_pdfjs_require__(17);\nvar validate = __w_pdfjs_require__(101);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(102)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(24);\nvar IObject = __w_pdfjs_require__(38);\nvar toObject = __w_pdfjs_require__(67);\nvar toLength = __w_pdfjs_require__(39);\nvar asc = __w_pdfjs_require__(93);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(94);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nvar isArray = __w_pdfjs_require__(95);\nvar SPECIES = __w_pdfjs_require__(29)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(28);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(23)('meta');\nvar isObject = __w_pdfjs_require__(14);\nvar has = __w_pdfjs_require__(22);\nvar setDesc = __w_pdfjs_require__(12).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(17)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(60);\nvar gOPS = __w_pdfjs_require__(98);\nvar pIE = __w_pdfjs_require__(99);\nvar toObject = __w_pdfjs_require__(67);\nvar IObject = __w_pdfjs_require__(38);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(17)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(85);\nvar getWeak = __w_pdfjs_require__(96).getWeak;\nvar anObject = __w_pdfjs_require__(13);\nvar isObject = __w_pdfjs_require__(14);\nvar anInstance = __w_pdfjs_require__(72);\nvar forOf = __w_pdfjs_require__(73);\nvar createArrayMethod = __w_pdfjs_require__(92);\nvar $has = __w_pdfjs_require__(22);\nvar validate = __w_pdfjs_require__(101);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(9);\nvar $export = __w_pdfjs_require__(8);\nvar redefine = __w_pdfjs_require__(21);\nvar redefineAll = __w_pdfjs_require__(85);\nvar meta = __w_pdfjs_require__(96);\nvar forOf = __w_pdfjs_require__(73);\nvar anInstance = __w_pdfjs_require__(72);\nvar isObject = __w_pdfjs_require__(14);\nvar fails = __w_pdfjs_require__(17);\nvar $iterDetect = __w_pdfjs_require__(87);\nvar setToStringTag = __w_pdfjs_require__(65);\nvar inheritIfRequired = __w_pdfjs_require__(103);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nvar setPrototypeOf = __w_pdfjs_require__(104).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(14);\nvar anObject = __w_pdfjs_require__(13);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(24)(Function.call, __w_pdfjs_require__(105).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(99);\nvar createDesc = __w_pdfjs_require__(20);\nvar toIObject = __w_pdfjs_require__(37);\nvar toPrimitive = __w_pdfjs_require__(19);\nvar has = __w_pdfjs_require__(22);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(15);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(16) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(107)('WeakMap');\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(109)('WeakMap');\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(25);\nvar ctx = __w_pdfjs_require__(24);\nvar forOf = __w_pdfjs_require__(73);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(111);\nmodule.exports = __w_pdfjs_require__(10).Object.values;\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(8);\nvar $values = __w_pdfjs_require__(112)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(60);\nvar toIObject = __w_pdfjs_require__(37);\nvar isEnum = __w_pdfjs_require__(99).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(114).ReadableStream;\n}\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _chunked_stream = __w_pdfjs_require__(116);\n\nvar _document = __w_pdfjs_require__(117);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!chunksToRequest.includes(chunk)) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(118);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _annotation = __w_pdfjs_require__(133);\n\nvar _crypto = __w_pdfjs_require__(131);\n\nvar _parser = __w_pdfjs_require__(120);\n\nvar _operator_list = __w_pdfjs_require__(134);\n\nvar _evaluator = __w_pdfjs_require__(135);\n\nvar _function = __w_pdfjs_require__(149);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    _getInheritableProperty: function _getInheritableProperty(key) {\n      var getArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var value = (0, _util.getInheritableProperty)({\n        dict: this.pageDict,\n        key: key,\n        getArray: getArray,\n        stopWhenFound: false\n      });\n      if (!Array.isArray(value)) {\n        return value;\n      }\n      if (value.length === 1 || !(0, _primitives.isDict)(value[0])) {\n        return value[0];\n      }\n      return _primitives.Dict.merge(this.xref, value);\n    },\n\n    get content() {\n      return this.pageDict.get('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this._getInheritableProperty('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this._getInheritableProperty('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this._getInheritableProperty('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.pageDict.get('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this._getInheritableProperty('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this._getInheritableProperty('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _parser = __w_pdfjs_require__(120);\n\nvar _chunked_stream = __w_pdfjs_require__(116);\n\nvar _crypto = __w_pdfjs_require__(131);\n\nvar _colorspace = __w_pdfjs_require__(132);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          if (labelDict.has('Type') && !(0, _primitives.isName)(labelDict.get('Type'), 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          if (labelDict.has('S')) {\n            var s = labelDict.get('S');\n            if (!(0, _primitives.isName)(s)) {\n              throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n            }\n            style = s.name;\n          } else {\n            style = null;\n          }\n          if (labelDict.has('P')) {\n            var p = labelDict.get('P');\n            if (!(0, _util.isString)(p)) {\n              throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n            }\n            prefix = (0, _util.stringToPDFString)(p);\n          } else {\n            prefix = '';\n          }\n          if (labelDict.has('St')) {\n            var st = labelDict.get('St');\n            if (!(Number.isInteger(st) && st >= 1)) {\n              throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n            }\n            currentIndex = st;\n          } else {\n            currentIndex = 1;\n          }\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n            currentLabel = '';\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          if (Number.isInteger(count) && count >= 0) {\n            var objId = currentNode.objId;\n            if (objId && !pageKidsCountCache.has(objId)) {\n              pageKidsCountCache.put(objId, count);\n            }\n            if (currentPageIndex + count <= pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            if ((0, _primitives.isName)(currentNode.get('Type'), 'Page') || !currentNode.has('Type') && currentNode.has('Contents')) {\n              if (currentPageIndex === pageIndex) {\n                capability.resolve([currentNode, null]);\n                return;\n              }\n              currentPageIndex++;\n              continue;\n            }\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if ((0, _primitives.isRefsEqual)(kid, kidRef)) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (!(0, _primitives.isDict)(kid)) {\n                throw new _util.FormatError('kid node must be a Dict.');\n              }\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _ccitt_stream = __w_pdfjs_require__(122);\n\nvar _jbig2_stream = __w_pdfjs_require__(124);\n\nvar _jpeg_stream = __w_pdfjs_require__(127);\n\nvar _jpx_stream = __w_pdfjs_require__(129);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar MAX_ADLER32_LENGTH = 5552;\nfunction computeAdler32(bytes) {\n  var bytesLength = bytes.length;\n  if (bytesLength >= MAX_ADLER32_LENGTH) {\n    throw new Error('computeAdler32: The input is too large.');\n  }\n  var a = 1,\n      b = 0;\n  for (var i = 0; i < bytesLength; ++i) {\n    a += bytes[i] & 0xFF;\n    b += a;\n  }\n  return b % 65521 << 16 | a % 65521;\n}\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref),\n          dictLength = void 0;\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      if (lexer.beginInlineImagePos !== -1) {\n        dictLength = stream.pos - lexer.beginInlineImagePos;\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length = void 0;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var cacheKey = void 0;\n      if (length < MAX_LENGTH_TO_CACHE && dictLength < MAX_ADLER32_LENGTH) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var initialStreamPos = stream.pos;\n        stream.pos = lexer.beginInlineImagePos;\n        var dictBytes = stream.getBytes(dictLength);\n        stream.pos = initialStreamPos;\n        cacheKey = computeAdler32(imageBytes) + '_' + computeAdler32(dictBytes);\n        var cacheEntry = this.imageCache[cacheKey];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (cacheKey !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + cacheKey;\n        this.imageCache[cacheKey] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n    this.beginInlineImagePos = -1;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      if (str === 'BI') {\n        this.beginInlineImagePos = this.stream.pos;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _ccitt = __w_pdfjs_require__(123);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _jbig = __w_pdfjs_require__(125);\n\nvar _util = __w_pdfjs_require__(2);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(126);\n\nvar _ccitt = __w_pdfjs_require__(123);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _jpg = __w_pdfjs_require__(128);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(2);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar DNLMarkerError = function DNLMarkerErrorClosure() {\n  function DNLMarkerError(message, scanLines) {\n    this.message = message;\n    this.scanLines = scanLines;\n  }\n  DNLMarkerError.prototype = new Error();\n  DNLMarkerError.prototype.name = 'DNLMarkerError';\n  DNLMarkerError.constructor = DNLMarkerError;\n  return DNLMarkerError;\n}();\nvar EOIMarkerError = function EOIMarkerErrorClosure() {\n  function EOIMarkerError(message) {\n    this.message = message;\n  }\n  EOIMarkerError.prototype = new Error();\n  EOIMarkerError.prototype.name = 'EOIMarkerError';\n  EOIMarkerError.constructor = EOIMarkerError;\n  return EOIMarkerError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var parseDNLMarker = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : false;\n\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          if (nextByte === 0xDC && parseDNLMarker) {\n            offset += 2;\n            var scanLines = data[offset++] << 8 | data[offset++];\n            if (scanLines > 0 && scanLines !== frame.scanLines) {\n              throw new DNLMarkerError('Found DNL marker (0xFFDC) while parsing scan data', scanLines);\n            }\n          } else if (nextByte === 0xD9) {\n            throw new EOIMarkerError('Found EOI marker (0xFFD9) while parsing scan data');\n          }\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, current marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, current marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos) {\n    var startPos = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : currentPos;\n\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$dnlScanLines = _ref.dnlScanLines,\n          dnlScanLines = _ref$dnlScanLines === undefined ? null : _ref$dnlScanLines;\n\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, current marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var numSOSMarkers = 0;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      markerLoop: while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            var sofScanLines = readUint16();\n            frame.scanLines = dnlScanLines || sofScanLines;\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            var parseDNLMarker = ++numSOSMarkers === 1 && !dnlScanLines;\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            try {\n              var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15, parseDNLMarker);\n              offset += processed;\n            } catch (ex) {\n              if (ex instanceof DNLMarkerError) {\n                (0, _util.warn)(ex.message + ' -- attempting to re-parse the JPEG image.');\n                return this.parse(data, { dnlScanLines: ex.scanLines });\n              } else if (ex instanceof EOIMarkerError) {\n                (0, _util.warn)(ex.message + ' -- ignoring the rest of the image data.');\n                break markerLoop;\n              }\n              throw ex;\n            }\n            break;\n          case 0xFFDC:\n            offset += 4;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            var nextFileMarker = findNextFileMarker(data, offset - 2);\n            if (nextFileMarker && nextFileMarker.invalid) {\n              (0, _util.warn)('JpegImage.parse - unexpected data, current marker is: ' + nextFileMarker.invalid);\n              offset = nextFileMarker.offset;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data.subarray(0, offset);\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data.subarray(0, offset);\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _jpx = __w_pdfjs_require__(130);\n\nvar _util = __w_pdfjs_require__(2);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(126);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticallyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticallyStripe) {\n                unsupported.push('verticallyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _stream = __w_pdfjs_require__(121);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\n\nvar AESBaseCipher = function () {\n  function AESBaseCipher() {\n    _classCallCheck(this, AESBaseCipher);\n\n    if (this.constructor === AESBaseCipher) {\n      (0, _util.unreachable)('Cannot initialize AESBaseCipher.');\n    }\n    this._s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n    this._inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n    this._mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n    this._mixCol = new Uint8Array(256);\n    for (var i = 0; i < 256; i++) {\n      if (i < 128) {\n        this._mixCol[i] = i << 1;\n      } else {\n        this._mixCol[i] = i << 1 ^ 0x1b;\n      }\n    }\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n\n  _createClass(AESBaseCipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      (0, _util.unreachable)('Cannot call `_expandKey` on the base class');\n    }\n  }, {\n    key: '_decrypt',\n    value: function _decrypt(input, key) {\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0, k = this._keySize; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (var i = this._cyclesOfRepetition - 1; i >= 1; --i) {\n        t = state[13];\n        state[13] = state[9];\n        state[9] = state[5];\n        state[5] = state[1];\n        state[1] = t;\n        t = state[14];\n        u = state[10];\n        state[14] = state[6];\n        state[10] = state[2];\n        state[6] = t;\n        state[2] = u;\n        t = state[15];\n        u = state[11];\n        v = state[7];\n        state[15] = state[3];\n        state[11] = t;\n        state[7] = u;\n        state[3] = v;\n        for (var _j = 0; _j < 16; ++_j) {\n          state[_j] = this._inv_s[state[_j]];\n        }\n        for (var _j2 = 0, _k = i * 16; _j2 < 16; ++_j2, ++_k) {\n          state[_j2] ^= key[_k];\n        }\n        for (var _j3 = 0; _j3 < 16; _j3 += 4) {\n          var s0 = this._mix[state[_j3]];\n          var s1 = this._mix[state[_j3 + 1]];\n          var s2 = this._mix[state[_j3 + 2]];\n          var s3 = this._mix[state[_j3 + 3]];\n          t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n          state[_j3] = t >>> 24 & 0xFF;\n          state[_j3 + 1] = t >> 16 & 0xFF;\n          state[_j3 + 2] = t >> 8 & 0xFF;\n          state[_j3 + 3] = t & 0xFF;\n        }\n      }\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (var _j4 = 0; _j4 < 16; ++_j4) {\n        state[_j4] = this._inv_s[state[_j4]];\n        state[_j4] ^= key[_j4];\n      }\n      return state;\n    }\n  }, {\n    key: '_encrypt',\n    value: function _encrypt(input, key) {\n      var s = this._s;\n      var t = void 0,\n          u = void 0,\n          v = void 0;\n      var state = new Uint8Array(16);\n      state.set(input);\n      for (var j = 0; j < 16; ++j) {\n        state[j] ^= key[j];\n      }\n      for (var i = 1; i < this._cyclesOfRepetition; i++) {\n        for (var _j5 = 0; _j5 < 16; ++_j5) {\n          state[_j5] = s[state[_j5]];\n        }\n        v = state[1];\n        state[1] = state[5];\n        state[5] = state[9];\n        state[9] = state[13];\n        state[13] = v;\n        v = state[2];\n        u = state[6];\n        state[2] = state[10];\n        state[6] = state[14];\n        state[10] = v;\n        state[14] = u;\n        v = state[3];\n        u = state[7];\n        t = state[11];\n        state[3] = state[15];\n        state[7] = v;\n        state[11] = u;\n        state[15] = t;\n        for (var _j6 = 0; _j6 < 16; _j6 += 4) {\n          var s0 = state[_j6 + 0];\n          var s1 = state[_j6 + 1];\n          var s2 = state[_j6 + 2];\n          var s3 = state[_j6 + 3];\n          t = s0 ^ s1 ^ s2 ^ s3;\n          state[_j6 + 0] ^= t ^ this._mixCol[s0 ^ s1];\n          state[_j6 + 1] ^= t ^ this._mixCol[s1 ^ s2];\n          state[_j6 + 2] ^= t ^ this._mixCol[s2 ^ s3];\n          state[_j6 + 3] ^= t ^ this._mixCol[s3 ^ s0];\n        }\n        for (var _j7 = 0, k = i * 16; _j7 < 16; ++_j7, ++k) {\n          state[_j7] ^= key[k];\n        }\n      }\n      for (var _j8 = 0; _j8 < 16; ++_j8) {\n        state[_j8] = s[state[_j8]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var _j9 = 0, _k2 = this._keySize; _j9 < 16; ++_j9, ++_k2) {\n        state[_j9] ^= key[_k2];\n      }\n      return state;\n    }\n  }, {\n    key: '_decryptBlock2',\n    value: function _decryptBlock2(data, finalize) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [],\n          iv = this.iv;\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        var plain = this._decrypt(buffer, this._key);\n        for (var j = 0; j < 16; ++j) {\n          plain[j] ^= iv[j];\n        }\n        iv = buffer;\n        result.push(plain);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      if (finalize) {\n        var lastBlock = result[result.length - 1];\n        var psLen = lastBlock[15];\n        if (psLen <= 16) {\n          for (var _i = 15, ii = 16 - psLen; _i >= ii; --_i) {\n            if (lastBlock[_i] !== psLen) {\n              psLen = 0;\n              break;\n            }\n          }\n          outputLength -= psLen;\n          result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n        }\n      }\n      var output = new Uint8Array(outputLength);\n      for (var _i2 = 0, _j10 = 0, _ii = result.length; _i2 < _ii; ++_i2, _j10 += 16) {\n        output.set(result[_i2], _j10);\n      }\n      return output;\n    }\n  }, {\n    key: 'decryptBlock',\n    value: function decryptBlock(data, finalize) {\n      var iv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (var i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array(0);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = this._decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    }\n  }, {\n    key: 'encrypt',\n    value: function encrypt(data, iv) {\n      var sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      var result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (var i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (var j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = this._encrypt(buffer, this._key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array(0);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (var _i3 = 0, _j11 = 0, ii = result.length; _i3 < ii; ++_i3, _j11 += 16) {\n        output.set(result[_i3], _j11);\n      }\n      return output;\n    }\n  }]);\n\n  return AESBaseCipher;\n}();\n\nvar AES128Cipher = function (_AESBaseCipher) {\n  _inherits(AES128Cipher, _AESBaseCipher);\n\n  function AES128Cipher(key) {\n    _classCallCheck(this, AES128Cipher);\n\n    var _this = _possibleConstructorReturn(this, (AES128Cipher.__proto__ || Object.getPrototypeOf(AES128Cipher)).call(this));\n\n    _this._cyclesOfRepetition = 10;\n    _this._keySize = 160;\n    _this._rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n    _this._key = _this._expandKey(key);\n    return _this;\n  }\n\n  _createClass(AES128Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 176;\n      var s = this._s;\n      var rcon = this._rcon;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      for (var j = 16, i = 1; j < b; ++i) {\n        var t1 = result[j - 3];\n        var t2 = result[j - 2];\n        var t3 = result[j - 1];\n        var t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ rcon[i];\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 16];\n          j++;\n          result[j] = t2 ^= result[j - 16];\n          j++;\n          result[j] = t3 ^= result[j - 16];\n          j++;\n          result[j] = t4 ^= result[j - 16];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES128Cipher;\n}(AESBaseCipher);\n\nvar AES256Cipher = function (_AESBaseCipher2) {\n  _inherits(AES256Cipher, _AESBaseCipher2);\n\n  function AES256Cipher(key) {\n    _classCallCheck(this, AES256Cipher);\n\n    var _this2 = _possibleConstructorReturn(this, (AES256Cipher.__proto__ || Object.getPrototypeOf(AES256Cipher)).call(this));\n\n    _this2._cyclesOfRepetition = 14;\n    _this2._keySize = 224;\n    _this2._key = _this2._expandKey(key);\n    return _this2;\n  }\n\n  _createClass(AES256Cipher, [{\n    key: '_expandKey',\n    value: function _expandKey(cipherKey) {\n      var b = 240;\n      var s = this._s;\n      var result = new Uint8Array(b);\n      result.set(cipherKey);\n      var r = 1;\n      var t1 = void 0,\n          t2 = void 0,\n          t3 = void 0,\n          t4 = void 0;\n      for (var j = 32, i = 1; j < b; ++i) {\n        if (j % 32 === 16) {\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n        } else if (j % 32 === 0) {\n          t1 = result[j - 3];\n          t2 = result[j - 2];\n          t3 = result[j - 1];\n          t4 = result[j - 4];\n          t1 = s[t1];\n          t2 = s[t2];\n          t3 = s[t3];\n          t4 = s[t4];\n          t1 = t1 ^ r;\n          if ((r <<= 1) >= 256) {\n            r = (r ^ 0x1b) & 0xFF;\n          }\n        }\n        for (var n = 0; n < 4; ++n) {\n          result[j] = t1 ^= result[j - 32];\n          j++;\n          result[j] = t2 ^= result[j - 32];\n          j++;\n          result[j] = t3 ^= result[j - 32];\n          j++;\n          result[j] = t4 ^= result[j - 32];\n          j++;\n        }\n      }\n      return result;\n    }\n  }]);\n\n  return AES256Cipher;\n}(AESBaseCipher);\n\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR);\n  };\n  ColorSpace.fromIR = function (IR) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFn = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt), tintFn);\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFn];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _obj = __w_pdfjs_require__(118);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _colorspace = __w_pdfjs_require__(132);\n\nvar _operator_list = __w_pdfjs_require__(134);\n\nvar _stream = __w_pdfjs_require__(121);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = (0, _util.getInheritableProperty)({\n            dict: dict,\n            key: 'FT'\n          });\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'V',\n      getArray: true\n    });\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DA'\n    }) || '';\n    var fieldType = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'FT'\n    });\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'DR'\n    }) || _primitives.Dict.empty;\n    data.fieldFlags = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Ff'\n    });\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'Q'\n    });\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = (0, _util.getInheritableProperty)({\n      dict: dict,\n      key: 'MaxLen'\n    });\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = (0, _util.getInheritableProperty)({\n      dict: params.dict,\n      key: 'Opt'\n    });\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _cmap = __w_pdfjs_require__(136);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _fonts = __w_pdfjs_require__(137);\n\nvar _encodings = __w_pdfjs_require__(140);\n\nvar _unicode = __w_pdfjs_require__(143);\n\nvar _standard_fonts = __w_pdfjs_require__(142);\n\nvar _pattern = __w_pdfjs_require__(146);\n\nvar _parser = __w_pdfjs_require__(120);\n\nvar _bidi = __w_pdfjs_require__(147);\n\nvar _colorspace = __w_pdfjs_require__(132);\n\nvar _glyphlist = __w_pdfjs_require__(141);\n\nvar _metrics = __w_pdfjs_require__(148);\n\nvar _function = __w_pdfjs_require__(149);\n\nvar _jpeg_stream = __w_pdfjs_require__(127);\n\nvar _murmurhash = __w_pdfjs_require__(151);\n\nvar _operator_list = __w_pdfjs_require__(134);\n\nvar _image = __w_pdfjs_require__(152);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      return this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), colorSpace.numComps]).then(function (_ref2) {\n        var data = _ref2.data,\n            width = _ref2.width,\n            height = _ref2.height;\n\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref3) {\n    var _this = this;\n\n    var pdfManager = _ref3.pdfManager,\n        xref = _ref3.xref,\n        handler = _ref3.handler,\n        pageIndex = _ref3.pageIndex,\n        idFactory = _ref3.idFactory,\n        fontCache = _ref3.fontCache,\n        builtInCMapCache = _ref3.builtInCMapCache,\n        _ref3$options = _ref3.options,\n        options = _ref3$options === undefined ? null : _ref3$options,\n        pdfFunctionFactory = _ref3.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function buildPaintImageXObject(_ref4) {\n      var _this2 = this;\n\n      var resources = _ref4.resources,\n          image = _ref4.image,\n          _ref4$isInline = _ref4.isInline,\n          isInline = _ref4$isInline === undefined ? false : _ref4$isInline,\n          operatorList = _ref4.operatorList,\n          cacheKey = _ref4.cacheKey,\n          imageCache = _ref4.imageCache,\n          _ref4$forceDisableNat = _ref4.forceDisableNativeImageDecoder,\n          forceDisableNativeImageDecoder = _ref4$forceDisableNat === undefined ? false : _ref4$forceDisableNat;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return Promise.resolve();\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return Promise.resolve();\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return Promise.resolve();\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (isInline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: isInline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return Promise.resolve();\n      }\n      var nativeImageDecoderSupport = forceDisableNativeImageDecoder ? _util.NativeImageDecoding.NONE : this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        return this.handler.sendWithPromise('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]).then(function () {\n          operatorList.addDependency(objId);\n          args = [objId, w, h];\n          operatorList.addOp(_util.OPS.paintJpegXObject, args);\n          if (cacheKey) {\n            imageCache[cacheKey] = {\n              fn: _util.OPS.paintJpegXObject,\n              args: args\n            };\n          }\n        }, function (reason) {\n          (0, _util.warn)('Native JPEG decoding failed -- trying to recover: ' + (reason && reason.message));\n          return _this2.buildPaintImageXObject({\n            resources: resources,\n            image: image,\n            isInline: isInline,\n            operatorList: operatorList,\n            cacheKey: cacheKey,\n            imageCache: imageCache,\n            forceDisableNativeImageDecoder: true\n          });\n        });\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: isInline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n      return Promise.resolve();\n    },\n\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref5) {\n      var _this8 = this;\n\n      var stream = _ref5.stream,\n          task = _ref5.task,\n          resources = _ref5.resources,\n          operatorList = _ref5.operatorList,\n          _ref5$initialState = _ref5.initialState,\n          initialState = _ref5$initialState === undefined ? null : _ref5$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject({\n                    resources: resources,\n                    image: xobj,\n                    operatorList: operatorList,\n                    cacheKey: name,\n                    imageCache: imageCache\n                  }).then(resolveXObject, rejectXObject);\n                  return;\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              next(self.buildPaintImageXObject({\n                resources: resources,\n                image: args[0],\n                isInline: true,\n                operatorList: operatorList,\n                cacheKey: cacheKey,\n                imageCache: imageCache\n              }));\n              return;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref6) {\n      var _this9 = this;\n\n      var stream = _ref6.stream,\n          task = _ref6.task,\n          resources = _ref6.resources,\n          _ref6$stateManager = _ref6.stateManager,\n          stateManager = _ref6$stateManager === undefined ? null : _ref6$stateManager,\n          _ref6$normalizeWhites = _ref6.normalizeWhitespace,\n          normalizeWhitespace = _ref6$normalizeWhites === undefined ? false : _ref6$normalizeWhites,\n          _ref6$combineTextItem = _ref6.combineTextItems,\n          combineTextItems = _ref6$combineTextItem === undefined ? false : _ref6$combineTextItem,\n          sink = _ref6.sink,\n          _ref6$seenStyles = _ref6.seenStyles,\n          seenStyles = _ref6$seenStyles === undefined ? Object.create(null) : _ref6$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _parser = __w_pdfjs_require__(120);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embeddedUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embeddedUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embeddedUseCMap) {\n      useCMap = embeddedUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (!BUILT_IN_CMAPS.includes(name)) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _cff_parser = __w_pdfjs_require__(138);\n\nvar _glyphlist = __w_pdfjs_require__(141);\n\nvar _encodings = __w_pdfjs_require__(140);\n\nvar _standard_fonts = __w_pdfjs_require__(142);\n\nvar _unicode = __w_pdfjs_require__(143);\n\nvar _font_renderer = __w_pdfjs_require__(144);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _type1_parser = __w_pdfjs_require__(145);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (!VALID_TABLES.includes(table.tag)) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && !functionsCalled.includes(funcId)) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 4;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _charsets = __w_pdfjs_require__(139);\n\nvar _encodings = __w_pdfjs_require__(140);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\nvar getLookupTableFactory = __w_pdfjs_require__(2).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n t['A'] = 0x0041;\n t['AE'] = 0x00C6;\n t['AEacute'] = 0x01FC;\n t['AEmacron'] = 0x01E2;\n t['AEsmall'] = 0xF7E6;\n t['Aacute'] = 0x00C1;\n t['Aacutesmall'] = 0xF7E1;\n t['Abreve'] = 0x0102;\n t['Abreveacute'] = 0x1EAE;\n t['Abrevecyrillic'] = 0x04D0;\n t['Abrevedotbelow'] = 0x1EB6;\n t['Abrevegrave'] = 0x1EB0;\n t['Abrevehookabove'] = 0x1EB2;\n t['Abrevetilde'] = 0x1EB4;\n t['Acaron'] = 0x01CD;\n t['Acircle'] = 0x24B6;\n t['Acircumflex'] = 0x00C2;\n t['Acircumflexacute'] = 0x1EA4;\n t['Acircumflexdotbelow'] = 0x1EAC;\n t['Acircumflexgrave'] = 0x1EA6;\n t['Acircumflexhookabove'] = 0x1EA8;\n t['Acircumflexsmall'] = 0xF7E2;\n t['Acircumflextilde'] = 0x1EAA;\n t['Acute'] = 0xF6C9;\n t['Acutesmall'] = 0xF7B4;\n t['Acyrillic'] = 0x0410;\n t['Adblgrave'] = 0x0200;\n t['Adieresis'] = 0x00C4;\n t['Adieresiscyrillic'] = 0x04D2;\n t['Adieresismacron'] = 0x01DE;\n t['Adieresissmall'] = 0xF7E4;\n t['Adotbelow'] = 0x1EA0;\n t['Adotmacron'] = 0x01E0;\n t['Agrave'] = 0x00C0;\n t['Agravesmall'] = 0xF7E0;\n t['Ahookabove'] = 0x1EA2;\n t['Aiecyrillic'] = 0x04D4;\n t['Ainvertedbreve'] = 0x0202;\n t['Alpha'] = 0x0391;\n t['Alphatonos'] = 0x0386;\n t['Amacron'] = 0x0100;\n t['Amonospace'] = 0xFF21;\n t['Aogonek'] = 0x0104;\n t['Aring'] = 0x00C5;\n t['Aringacute'] = 0x01FA;\n t['Aringbelow'] = 0x1E00;\n t['Aringsmall'] = 0xF7E5;\n t['Asmall'] = 0xF761;\n t['Atilde'] = 0x00C3;\n t['Atildesmall'] = 0xF7E3;\n t['Aybarmenian'] = 0x0531;\n t['B'] = 0x0042;\n t['Bcircle'] = 0x24B7;\n t['Bdotaccent'] = 0x1E02;\n t['Bdotbelow'] = 0x1E04;\n t['Becyrillic'] = 0x0411;\n t['Benarmenian'] = 0x0532;\n t['Beta'] = 0x0392;\n t['Bhook'] = 0x0181;\n t['Blinebelow'] = 0x1E06;\n t['Bmonospace'] = 0xFF22;\n t['Brevesmall'] = 0xF6F4;\n t['Bsmall'] = 0xF762;\n t['Btopbar'] = 0x0182;\n t['C'] = 0x0043;\n t['Caarmenian'] = 0x053E;\n t['Cacute'] = 0x0106;\n t['Caron'] = 0xF6CA;\n t['Caronsmall'] = 0xF6F5;\n t['Ccaron'] = 0x010C;\n t['Ccedilla'] = 0x00C7;\n t['Ccedillaacute'] = 0x1E08;\n t['Ccedillasmall'] = 0xF7E7;\n t['Ccircle'] = 0x24B8;\n t['Ccircumflex'] = 0x0108;\n t['Cdot'] = 0x010A;\n t['Cdotaccent'] = 0x010A;\n t['Cedillasmall'] = 0xF7B8;\n t['Chaarmenian'] = 0x0549;\n t['Cheabkhasiancyrillic'] = 0x04BC;\n t['Checyrillic'] = 0x0427;\n t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n t['Chedescendercyrillic'] = 0x04B6;\n t['Chedieresiscyrillic'] = 0x04F4;\n t['Cheharmenian'] = 0x0543;\n t['Chekhakassiancyrillic'] = 0x04CB;\n t['Cheverticalstrokecyrillic'] = 0x04B8;\n t['Chi'] = 0x03A7;\n t['Chook'] = 0x0187;\n t['Circumflexsmall'] = 0xF6F6;\n t['Cmonospace'] = 0xFF23;\n t['Coarmenian'] = 0x0551;\n t['Csmall'] = 0xF763;\n t['D'] = 0x0044;\n t['DZ'] = 0x01F1;\n t['DZcaron'] = 0x01C4;\n t['Daarmenian'] = 0x0534;\n t['Dafrican'] = 0x0189;\n t['Dcaron'] = 0x010E;\n t['Dcedilla'] = 0x1E10;\n t['Dcircle'] = 0x24B9;\n t['Dcircumflexbelow'] = 0x1E12;\n t['Dcroat'] = 0x0110;\n t['Ddotaccent'] = 0x1E0A;\n t['Ddotbelow'] = 0x1E0C;\n t['Decyrillic'] = 0x0414;\n t['Deicoptic'] = 0x03EE;\n t['Delta'] = 0x2206;\n t['Deltagreek'] = 0x0394;\n t['Dhook'] = 0x018A;\n t['Dieresis'] = 0xF6CB;\n t['DieresisAcute'] = 0xF6CC;\n t['DieresisGrave'] = 0xF6CD;\n t['Dieresissmall'] = 0xF7A8;\n t['Digammagreek'] = 0x03DC;\n t['Djecyrillic'] = 0x0402;\n t['Dlinebelow'] = 0x1E0E;\n t['Dmonospace'] = 0xFF24;\n t['Dotaccentsmall'] = 0xF6F7;\n t['Dslash'] = 0x0110;\n t['Dsmall'] = 0xF764;\n t['Dtopbar'] = 0x018B;\n t['Dz'] = 0x01F2;\n t['Dzcaron'] = 0x01C5;\n t['Dzeabkhasiancyrillic'] = 0x04E0;\n t['Dzecyrillic'] = 0x0405;\n t['Dzhecyrillic'] = 0x040F;\n t['E'] = 0x0045;\n t['Eacute'] = 0x00C9;\n t['Eacutesmall'] = 0xF7E9;\n t['Ebreve'] = 0x0114;\n t['Ecaron'] = 0x011A;\n t['Ecedillabreve'] = 0x1E1C;\n t['Echarmenian'] = 0x0535;\n t['Ecircle'] = 0x24BA;\n t['Ecircumflex'] = 0x00CA;\n t['Ecircumflexacute'] = 0x1EBE;\n t['Ecircumflexbelow'] = 0x1E18;\n t['Ecircumflexdotbelow'] = 0x1EC6;\n t['Ecircumflexgrave'] = 0x1EC0;\n t['Ecircumflexhookabove'] = 0x1EC2;\n t['Ecircumflexsmall'] = 0xF7EA;\n t['Ecircumflextilde'] = 0x1EC4;\n t['Ecyrillic'] = 0x0404;\n t['Edblgrave'] = 0x0204;\n t['Edieresis'] = 0x00CB;\n t['Edieresissmall'] = 0xF7EB;\n t['Edot'] = 0x0116;\n t['Edotaccent'] = 0x0116;\n t['Edotbelow'] = 0x1EB8;\n t['Efcyrillic'] = 0x0424;\n t['Egrave'] = 0x00C8;\n t['Egravesmall'] = 0xF7E8;\n t['Eharmenian'] = 0x0537;\n t['Ehookabove'] = 0x1EBA;\n t['Eightroman'] = 0x2167;\n t['Einvertedbreve'] = 0x0206;\n t['Eiotifiedcyrillic'] = 0x0464;\n t['Elcyrillic'] = 0x041B;\n t['Elevenroman'] = 0x216A;\n t['Emacron'] = 0x0112;\n t['Emacronacute'] = 0x1E16;\n t['Emacrongrave'] = 0x1E14;\n t['Emcyrillic'] = 0x041C;\n t['Emonospace'] = 0xFF25;\n t['Encyrillic'] = 0x041D;\n t['Endescendercyrillic'] = 0x04A2;\n t['Eng'] = 0x014A;\n t['Enghecyrillic'] = 0x04A4;\n t['Enhookcyrillic'] = 0x04C7;\n t['Eogonek'] = 0x0118;\n t['Eopen'] = 0x0190;\n t['Epsilon'] = 0x0395;\n t['Epsilontonos'] = 0x0388;\n t['Ercyrillic'] = 0x0420;\n t['Ereversed'] = 0x018E;\n t['Ereversedcyrillic'] = 0x042D;\n t['Escyrillic'] = 0x0421;\n t['Esdescendercyrillic'] = 0x04AA;\n t['Esh'] = 0x01A9;\n t['Esmall'] = 0xF765;\n t['Eta'] = 0x0397;\n t['Etarmenian'] = 0x0538;\n t['Etatonos'] = 0x0389;\n t['Eth'] = 0x00D0;\n t['Ethsmall'] = 0xF7F0;\n t['Etilde'] = 0x1EBC;\n t['Etildebelow'] = 0x1E1A;\n t['Euro'] = 0x20AC;\n t['Ezh'] = 0x01B7;\n t['Ezhcaron'] = 0x01EE;\n t['Ezhreversed'] = 0x01B8;\n t['F'] = 0x0046;\n t['Fcircle'] = 0x24BB;\n t['Fdotaccent'] = 0x1E1E;\n t['Feharmenian'] = 0x0556;\n t['Feicoptic'] = 0x03E4;\n t['Fhook'] = 0x0191;\n t['Fitacyrillic'] = 0x0472;\n t['Fiveroman'] = 0x2164;\n t['Fmonospace'] = 0xFF26;\n t['Fourroman'] = 0x2163;\n t['Fsmall'] = 0xF766;\n t['G'] = 0x0047;\n t['GBsquare'] = 0x3387;\n t['Gacute'] = 0x01F4;\n t['Gamma'] = 0x0393;\n t['Gammaafrican'] = 0x0194;\n t['Gangiacoptic'] = 0x03EA;\n t['Gbreve'] = 0x011E;\n t['Gcaron'] = 0x01E6;\n t['Gcedilla'] = 0x0122;\n t['Gcircle'] = 0x24BC;\n t['Gcircumflex'] = 0x011C;\n t['Gcommaaccent'] = 0x0122;\n t['Gdot'] = 0x0120;\n t['Gdotaccent'] = 0x0120;\n t['Gecyrillic'] = 0x0413;\n t['Ghadarmenian'] = 0x0542;\n t['Ghemiddlehookcyrillic'] = 0x0494;\n t['Ghestrokecyrillic'] = 0x0492;\n t['Gheupturncyrillic'] = 0x0490;\n t['Ghook'] = 0x0193;\n t['Gimarmenian'] = 0x0533;\n t['Gjecyrillic'] = 0x0403;\n t['Gmacron'] = 0x1E20;\n t['Gmonospace'] = 0xFF27;\n t['Grave'] = 0xF6CE;\n t['Gravesmall'] = 0xF760;\n t['Gsmall'] = 0xF767;\n t['Gsmallhook'] = 0x029B;\n t['Gstroke'] = 0x01E4;\n t['H'] = 0x0048;\n t['H18533'] = 0x25CF;\n t['H18543'] = 0x25AA;\n t['H18551'] = 0x25AB;\n t['H22073'] = 0x25A1;\n t['HPsquare'] = 0x33CB;\n t['Haabkhasiancyrillic'] = 0x04A8;\n t['Hadescendercyrillic'] = 0x04B2;\n t['Hardsigncyrillic'] = 0x042A;\n t['Hbar'] = 0x0126;\n t['Hbrevebelow'] = 0x1E2A;\n t['Hcedilla'] = 0x1E28;\n t['Hcircle'] = 0x24BD;\n t['Hcircumflex'] = 0x0124;\n t['Hdieresis'] = 0x1E26;\n t['Hdotaccent'] = 0x1E22;\n t['Hdotbelow'] = 0x1E24;\n t['Hmonospace'] = 0xFF28;\n t['Hoarmenian'] = 0x0540;\n t['Horicoptic'] = 0x03E8;\n t['Hsmall'] = 0xF768;\n t['Hungarumlaut'] = 0xF6CF;\n t['Hungarumlautsmall'] = 0xF6F8;\n t['Hzsquare'] = 0x3390;\n t['I'] = 0x0049;\n t['IAcyrillic'] = 0x042F;\n t['IJ'] = 0x0132;\n t['IUcyrillic'] = 0x042E;\n t['Iacute'] = 0x00CD;\n t['Iacutesmall'] = 0xF7ED;\n t['Ibreve'] = 0x012C;\n t['Icaron'] = 0x01CF;\n t['Icircle'] = 0x24BE;\n t['Icircumflex'] = 0x00CE;\n t['Icircumflexsmall'] = 0xF7EE;\n t['Icyrillic'] = 0x0406;\n t['Idblgrave'] = 0x0208;\n t['Idieresis'] = 0x00CF;\n t['Idieresisacute'] = 0x1E2E;\n t['Idieresiscyrillic'] = 0x04E4;\n t['Idieresissmall'] = 0xF7EF;\n t['Idot'] = 0x0130;\n t['Idotaccent'] = 0x0130;\n t['Idotbelow'] = 0x1ECA;\n t['Iebrevecyrillic'] = 0x04D6;\n t['Iecyrillic'] = 0x0415;\n t['Ifraktur'] = 0x2111;\n t['Igrave'] = 0x00CC;\n t['Igravesmall'] = 0xF7EC;\n t['Ihookabove'] = 0x1EC8;\n t['Iicyrillic'] = 0x0418;\n t['Iinvertedbreve'] = 0x020A;\n t['Iishortcyrillic'] = 0x0419;\n t['Imacron'] = 0x012A;\n t['Imacroncyrillic'] = 0x04E2;\n t['Imonospace'] = 0xFF29;\n t['Iniarmenian'] = 0x053B;\n t['Iocyrillic'] = 0x0401;\n t['Iogonek'] = 0x012E;\n t['Iota'] = 0x0399;\n t['Iotaafrican'] = 0x0196;\n t['Iotadieresis'] = 0x03AA;\n t['Iotatonos'] = 0x038A;\n t['Ismall'] = 0xF769;\n t['Istroke'] = 0x0197;\n t['Itilde'] = 0x0128;\n t['Itildebelow'] = 0x1E2C;\n t['Izhitsacyrillic'] = 0x0474;\n t['Izhitsadblgravecyrillic'] = 0x0476;\n t['J'] = 0x004A;\n t['Jaarmenian'] = 0x0541;\n t['Jcircle'] = 0x24BF;\n t['Jcircumflex'] = 0x0134;\n t['Jecyrillic'] = 0x0408;\n t['Jheharmenian'] = 0x054B;\n t['Jmonospace'] = 0xFF2A;\n t['Jsmall'] = 0xF76A;\n t['K'] = 0x004B;\n t['KBsquare'] = 0x3385;\n t['KKsquare'] = 0x33CD;\n t['Kabashkircyrillic'] = 0x04A0;\n t['Kacute'] = 0x1E30;\n t['Kacyrillic'] = 0x041A;\n t['Kadescendercyrillic'] = 0x049A;\n t['Kahookcyrillic'] = 0x04C3;\n t['Kappa'] = 0x039A;\n t['Kastrokecyrillic'] = 0x049E;\n t['Kaverticalstrokecyrillic'] = 0x049C;\n t['Kcaron'] = 0x01E8;\n t['Kcedilla'] = 0x0136;\n t['Kcircle'] = 0x24C0;\n t['Kcommaaccent'] = 0x0136;\n t['Kdotbelow'] = 0x1E32;\n t['Keharmenian'] = 0x0554;\n t['Kenarmenian'] = 0x053F;\n t['Khacyrillic'] = 0x0425;\n t['Kheicoptic'] = 0x03E6;\n t['Khook'] = 0x0198;\n t['Kjecyrillic'] = 0x040C;\n t['Klinebelow'] = 0x1E34;\n t['Kmonospace'] = 0xFF2B;\n t['Koppacyrillic'] = 0x0480;\n t['Koppagreek'] = 0x03DE;\n t['Ksicyrillic'] = 0x046E;\n t['Ksmall'] = 0xF76B;\n t['L'] = 0x004C;\n t['LJ'] = 0x01C7;\n t['LL'] = 0xF6BF;\n t['Lacute'] = 0x0139;\n t['Lambda'] = 0x039B;\n t['Lcaron'] = 0x013D;\n t['Lcedilla'] = 0x013B;\n t['Lcircle'] = 0x24C1;\n t['Lcircumflexbelow'] = 0x1E3C;\n t['Lcommaaccent'] = 0x013B;\n t['Ldot'] = 0x013F;\n t['Ldotaccent'] = 0x013F;\n t['Ldotbelow'] = 0x1E36;\n t['Ldotbelowmacron'] = 0x1E38;\n t['Liwnarmenian'] = 0x053C;\n t['Lj'] = 0x01C8;\n t['Ljecyrillic'] = 0x0409;\n t['Llinebelow'] = 0x1E3A;\n t['Lmonospace'] = 0xFF2C;\n t['Lslash'] = 0x0141;\n t['Lslashsmall'] = 0xF6F9;\n t['Lsmall'] = 0xF76C;\n t['M'] = 0x004D;\n t['MBsquare'] = 0x3386;\n t['Macron'] = 0xF6D0;\n t['Macronsmall'] = 0xF7AF;\n t['Macute'] = 0x1E3E;\n t['Mcircle'] = 0x24C2;\n t['Mdotaccent'] = 0x1E40;\n t['Mdotbelow'] = 0x1E42;\n t['Menarmenian'] = 0x0544;\n t['Mmonospace'] = 0xFF2D;\n t['Msmall'] = 0xF76D;\n t['Mturned'] = 0x019C;\n t['Mu'] = 0x039C;\n t['N'] = 0x004E;\n t['NJ'] = 0x01CA;\n t['Nacute'] = 0x0143;\n t['Ncaron'] = 0x0147;\n t['Ncedilla'] = 0x0145;\n t['Ncircle'] = 0x24C3;\n t['Ncircumflexbelow'] = 0x1E4A;\n t['Ncommaaccent'] = 0x0145;\n t['Ndotaccent'] = 0x1E44;\n t['Ndotbelow'] = 0x1E46;\n t['Nhookleft'] = 0x019D;\n t['Nineroman'] = 0x2168;\n t['Nj'] = 0x01CB;\n t['Njecyrillic'] = 0x040A;\n t['Nlinebelow'] = 0x1E48;\n t['Nmonospace'] = 0xFF2E;\n t['Nowarmenian'] = 0x0546;\n t['Nsmall'] = 0xF76E;\n t['Ntilde'] = 0x00D1;\n t['Ntildesmall'] = 0xF7F1;\n t['Nu'] = 0x039D;\n t['O'] = 0x004F;\n t['OE'] = 0x0152;\n t['OEsmall'] = 0xF6FA;\n t['Oacute'] = 0x00D3;\n t['Oacutesmall'] = 0xF7F3;\n t['Obarredcyrillic'] = 0x04E8;\n t['Obarreddieresiscyrillic'] = 0x04EA;\n t['Obreve'] = 0x014E;\n t['Ocaron'] = 0x01D1;\n t['Ocenteredtilde'] = 0x019F;\n t['Ocircle'] = 0x24C4;\n t['Ocircumflex'] = 0x00D4;\n t['Ocircumflexacute'] = 0x1ED0;\n t['Ocircumflexdotbelow'] = 0x1ED8;\n t['Ocircumflexgrave'] = 0x1ED2;\n t['Ocircumflexhookabove'] = 0x1ED4;\n t['Ocircumflexsmall'] = 0xF7F4;\n t['Ocircumflextilde'] = 0x1ED6;\n t['Ocyrillic'] = 0x041E;\n t['Odblacute'] = 0x0150;\n t['Odblgrave'] = 0x020C;\n t['Odieresis'] = 0x00D6;\n t['Odieresiscyrillic'] = 0x04E6;\n t['Odieresissmall'] = 0xF7F6;\n t['Odotbelow'] = 0x1ECC;\n t['Ogoneksmall'] = 0xF6FB;\n t['Ograve'] = 0x00D2;\n t['Ogravesmall'] = 0xF7F2;\n t['Oharmenian'] = 0x0555;\n t['Ohm'] = 0x2126;\n t['Ohookabove'] = 0x1ECE;\n t['Ohorn'] = 0x01A0;\n t['Ohornacute'] = 0x1EDA;\n t['Ohorndotbelow'] = 0x1EE2;\n t['Ohorngrave'] = 0x1EDC;\n t['Ohornhookabove'] = 0x1EDE;\n t['Ohorntilde'] = 0x1EE0;\n t['Ohungarumlaut'] = 0x0150;\n t['Oi'] = 0x01A2;\n t['Oinvertedbreve'] = 0x020E;\n t['Omacron'] = 0x014C;\n t['Omacronacute'] = 0x1E52;\n t['Omacrongrave'] = 0x1E50;\n t['Omega'] = 0x2126;\n t['Omegacyrillic'] = 0x0460;\n t['Omegagreek'] = 0x03A9;\n t['Omegaroundcyrillic'] = 0x047A;\n t['Omegatitlocyrillic'] = 0x047C;\n t['Omegatonos'] = 0x038F;\n t['Omicron'] = 0x039F;\n t['Omicrontonos'] = 0x038C;\n t['Omonospace'] = 0xFF2F;\n t['Oneroman'] = 0x2160;\n t['Oogonek'] = 0x01EA;\n t['Oogonekmacron'] = 0x01EC;\n t['Oopen'] = 0x0186;\n t['Oslash'] = 0x00D8;\n t['Oslashacute'] = 0x01FE;\n t['Oslashsmall'] = 0xF7F8;\n t['Osmall'] = 0xF76F;\n t['Ostrokeacute'] = 0x01FE;\n t['Otcyrillic'] = 0x047E;\n t['Otilde'] = 0x00D5;\n t['Otildeacute'] = 0x1E4C;\n t['Otildedieresis'] = 0x1E4E;\n t['Otildesmall'] = 0xF7F5;\n t['P'] = 0x0050;\n t['Pacute'] = 0x1E54;\n t['Pcircle'] = 0x24C5;\n t['Pdotaccent'] = 0x1E56;\n t['Pecyrillic'] = 0x041F;\n t['Peharmenian'] = 0x054A;\n t['Pemiddlehookcyrillic'] = 0x04A6;\n t['Phi'] = 0x03A6;\n t['Phook'] = 0x01A4;\n t['Pi'] = 0x03A0;\n t['Piwrarmenian'] = 0x0553;\n t['Pmonospace'] = 0xFF30;\n t['Psi'] = 0x03A8;\n t['Psicyrillic'] = 0x0470;\n t['Psmall'] = 0xF770;\n t['Q'] = 0x0051;\n t['Qcircle'] = 0x24C6;\n t['Qmonospace'] = 0xFF31;\n t['Qsmall'] = 0xF771;\n t['R'] = 0x0052;\n t['Raarmenian'] = 0x054C;\n t['Racute'] = 0x0154;\n t['Rcaron'] = 0x0158;\n t['Rcedilla'] = 0x0156;\n t['Rcircle'] = 0x24C7;\n t['Rcommaaccent'] = 0x0156;\n t['Rdblgrave'] = 0x0210;\n t['Rdotaccent'] = 0x1E58;\n t['Rdotbelow'] = 0x1E5A;\n t['Rdotbelowmacron'] = 0x1E5C;\n t['Reharmenian'] = 0x0550;\n t['Rfraktur'] = 0x211C;\n t['Rho'] = 0x03A1;\n t['Ringsmall'] = 0xF6FC;\n t['Rinvertedbreve'] = 0x0212;\n t['Rlinebelow'] = 0x1E5E;\n t['Rmonospace'] = 0xFF32;\n t['Rsmall'] = 0xF772;\n t['Rsmallinverted'] = 0x0281;\n t['Rsmallinvertedsuperior'] = 0x02B6;\n t['S'] = 0x0053;\n t['SF010000'] = 0x250C;\n t['SF020000'] = 0x2514;\n t['SF030000'] = 0x2510;\n t['SF040000'] = 0x2518;\n t['SF050000'] = 0x253C;\n t['SF060000'] = 0x252C;\n t['SF070000'] = 0x2534;\n t['SF080000'] = 0x251C;\n t['SF090000'] = 0x2524;\n t['SF100000'] = 0x2500;\n t['SF110000'] = 0x2502;\n t['SF190000'] = 0x2561;\n t['SF200000'] = 0x2562;\n t['SF210000'] = 0x2556;\n t['SF220000'] = 0x2555;\n t['SF230000'] = 0x2563;\n t['SF240000'] = 0x2551;\n t['SF250000'] = 0x2557;\n t['SF260000'] = 0x255D;\n t['SF270000'] = 0x255C;\n t['SF280000'] = 0x255B;\n t['SF360000'] = 0x255E;\n t['SF370000'] = 0x255F;\n t['SF380000'] = 0x255A;\n t['SF390000'] = 0x2554;\n t['SF400000'] = 0x2569;\n t['SF410000'] = 0x2566;\n t['SF420000'] = 0x2560;\n t['SF430000'] = 0x2550;\n t['SF440000'] = 0x256C;\n t['SF450000'] = 0x2567;\n t['SF460000'] = 0x2568;\n t['SF470000'] = 0x2564;\n t['SF480000'] = 0x2565;\n t['SF490000'] = 0x2559;\n t['SF500000'] = 0x2558;\n t['SF510000'] = 0x2552;\n t['SF520000'] = 0x2553;\n t['SF530000'] = 0x256B;\n t['SF540000'] = 0x256A;\n t['Sacute'] = 0x015A;\n t['Sacutedotaccent'] = 0x1E64;\n t['Sampigreek'] = 0x03E0;\n t['Scaron'] = 0x0160;\n t['Scarondotaccent'] = 0x1E66;\n t['Scaronsmall'] = 0xF6FD;\n t['Scedilla'] = 0x015E;\n t['Schwa'] = 0x018F;\n t['Schwacyrillic'] = 0x04D8;\n t['Schwadieresiscyrillic'] = 0x04DA;\n t['Scircle'] = 0x24C8;\n t['Scircumflex'] = 0x015C;\n t['Scommaaccent'] = 0x0218;\n t['Sdotaccent'] = 0x1E60;\n t['Sdotbelow'] = 0x1E62;\n t['Sdotbelowdotaccent'] = 0x1E68;\n t['Seharmenian'] = 0x054D;\n t['Sevenroman'] = 0x2166;\n t['Shaarmenian'] = 0x0547;\n t['Shacyrillic'] = 0x0428;\n t['Shchacyrillic'] = 0x0429;\n t['Sheicoptic'] = 0x03E2;\n t['Shhacyrillic'] = 0x04BA;\n t['Shimacoptic'] = 0x03EC;\n t['Sigma'] = 0x03A3;\n t['Sixroman'] = 0x2165;\n t['Smonospace'] = 0xFF33;\n t['Softsigncyrillic'] = 0x042C;\n t['Ssmall'] = 0xF773;\n t['Stigmagreek'] = 0x03DA;\n t['T'] = 0x0054;\n t['Tau'] = 0x03A4;\n t['Tbar'] = 0x0166;\n t['Tcaron'] = 0x0164;\n t['Tcedilla'] = 0x0162;\n t['Tcircle'] = 0x24C9;\n t['Tcircumflexbelow'] = 0x1E70;\n t['Tcommaaccent'] = 0x0162;\n t['Tdotaccent'] = 0x1E6A;\n t['Tdotbelow'] = 0x1E6C;\n t['Tecyrillic'] = 0x0422;\n t['Tedescendercyrillic'] = 0x04AC;\n t['Tenroman'] = 0x2169;\n t['Tetsecyrillic'] = 0x04B4;\n t['Theta'] = 0x0398;\n t['Thook'] = 0x01AC;\n t['Thorn'] = 0x00DE;\n t['Thornsmall'] = 0xF7FE;\n t['Threeroman'] = 0x2162;\n t['Tildesmall'] = 0xF6FE;\n t['Tiwnarmenian'] = 0x054F;\n t['Tlinebelow'] = 0x1E6E;\n t['Tmonospace'] = 0xFF34;\n t['Toarmenian'] = 0x0539;\n t['Tonefive'] = 0x01BC;\n t['Tonesix'] = 0x0184;\n t['Tonetwo'] = 0x01A7;\n t['Tretroflexhook'] = 0x01AE;\n t['Tsecyrillic'] = 0x0426;\n t['Tshecyrillic'] = 0x040B;\n t['Tsmall'] = 0xF774;\n t['Twelveroman'] = 0x216B;\n t['Tworoman'] = 0x2161;\n t['U'] = 0x0055;\n t['Uacute'] = 0x00DA;\n t['Uacutesmall'] = 0xF7FA;\n t['Ubreve'] = 0x016C;\n t['Ucaron'] = 0x01D3;\n t['Ucircle'] = 0x24CA;\n t['Ucircumflex'] = 0x00DB;\n t['Ucircumflexbelow'] = 0x1E76;\n t['Ucircumflexsmall'] = 0xF7FB;\n t['Ucyrillic'] = 0x0423;\n t['Udblacute'] = 0x0170;\n t['Udblgrave'] = 0x0214;\n t['Udieresis'] = 0x00DC;\n t['Udieresisacute'] = 0x01D7;\n t['Udieresisbelow'] = 0x1E72;\n t['Udieresiscaron'] = 0x01D9;\n t['Udieresiscyrillic'] = 0x04F0;\n t['Udieresisgrave'] = 0x01DB;\n t['Udieresismacron'] = 0x01D5;\n t['Udieresissmall'] = 0xF7FC;\n t['Udotbelow'] = 0x1EE4;\n t['Ugrave'] = 0x00D9;\n t['Ugravesmall'] = 0xF7F9;\n t['Uhookabove'] = 0x1EE6;\n t['Uhorn'] = 0x01AF;\n t['Uhornacute'] = 0x1EE8;\n t['Uhorndotbelow'] = 0x1EF0;\n t['Uhorngrave'] = 0x1EEA;\n t['Uhornhookabove'] = 0x1EEC;\n t['Uhorntilde'] = 0x1EEE;\n t['Uhungarumlaut'] = 0x0170;\n t['Uhungarumlautcyrillic'] = 0x04F2;\n t['Uinvertedbreve'] = 0x0216;\n t['Ukcyrillic'] = 0x0478;\n t['Umacron'] = 0x016A;\n t['Umacroncyrillic'] = 0x04EE;\n t['Umacrondieresis'] = 0x1E7A;\n t['Umonospace'] = 0xFF35;\n t['Uogonek'] = 0x0172;\n t['Upsilon'] = 0x03A5;\n t['Upsilon1'] = 0x03D2;\n t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n t['Upsilonafrican'] = 0x01B1;\n t['Upsilondieresis'] = 0x03AB;\n t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n t['Upsilonhooksymbol'] = 0x03D2;\n t['Upsilontonos'] = 0x038E;\n t['Uring'] = 0x016E;\n t['Ushortcyrillic'] = 0x040E;\n t['Usmall'] = 0xF775;\n t['Ustraightcyrillic'] = 0x04AE;\n t['Ustraightstrokecyrillic'] = 0x04B0;\n t['Utilde'] = 0x0168;\n t['Utildeacute'] = 0x1E78;\n t['Utildebelow'] = 0x1E74;\n t['V'] = 0x0056;\n t['Vcircle'] = 0x24CB;\n t['Vdotbelow'] = 0x1E7E;\n t['Vecyrillic'] = 0x0412;\n t['Vewarmenian'] = 0x054E;\n t['Vhook'] = 0x01B2;\n t['Vmonospace'] = 0xFF36;\n t['Voarmenian'] = 0x0548;\n t['Vsmall'] = 0xF776;\n t['Vtilde'] = 0x1E7C;\n t['W'] = 0x0057;\n t['Wacute'] = 0x1E82;\n t['Wcircle'] = 0x24CC;\n t['Wcircumflex'] = 0x0174;\n t['Wdieresis'] = 0x1E84;\n t['Wdotaccent'] = 0x1E86;\n t['Wdotbelow'] = 0x1E88;\n t['Wgrave'] = 0x1E80;\n t['Wmonospace'] = 0xFF37;\n t['Wsmall'] = 0xF777;\n t['X'] = 0x0058;\n t['Xcircle'] = 0x24CD;\n t['Xdieresis'] = 0x1E8C;\n t['Xdotaccent'] = 0x1E8A;\n t['Xeharmenian'] = 0x053D;\n t['Xi'] = 0x039E;\n t['Xmonospace'] = 0xFF38;\n t['Xsmall'] = 0xF778;\n t['Y'] = 0x0059;\n t['Yacute'] = 0x00DD;\n t['Yacutesmall'] = 0xF7FD;\n t['Yatcyrillic'] = 0x0462;\n t['Ycircle'] = 0x24CE;\n t['Ycircumflex'] = 0x0176;\n t['Ydieresis'] = 0x0178;\n t['Ydieresissmall'] = 0xF7FF;\n t['Ydotaccent'] = 0x1E8E;\n t['Ydotbelow'] = 0x1EF4;\n t['Yericyrillic'] = 0x042B;\n t['Yerudieresiscyrillic'] = 0x04F8;\n t['Ygrave'] = 0x1EF2;\n t['Yhook'] = 0x01B3;\n t['Yhookabove'] = 0x1EF6;\n t['Yiarmenian'] = 0x0545;\n t['Yicyrillic'] = 0x0407;\n t['Yiwnarmenian'] = 0x0552;\n t['Ymonospace'] = 0xFF39;\n t['Ysmall'] = 0xF779;\n t['Ytilde'] = 0x1EF8;\n t['Yusbigcyrillic'] = 0x046A;\n t['Yusbigiotifiedcyrillic'] = 0x046C;\n t['Yuslittlecyrillic'] = 0x0466;\n t['Yuslittleiotifiedcyrillic'] = 0x0468;\n t['Z'] = 0x005A;\n t['Zaarmenian'] = 0x0536;\n t['Zacute'] = 0x0179;\n t['Zcaron'] = 0x017D;\n t['Zcaronsmall'] = 0xF6FF;\n t['Zcircle'] = 0x24CF;\n t['Zcircumflex'] = 0x1E90;\n t['Zdot'] = 0x017B;\n t['Zdotaccent'] = 0x017B;\n t['Zdotbelow'] = 0x1E92;\n t['Zecyrillic'] = 0x0417;\n t['Zedescendercyrillic'] = 0x0498;\n t['Zedieresiscyrillic'] = 0x04DE;\n t['Zeta'] = 0x0396;\n t['Zhearmenian'] = 0x053A;\n t['Zhebrevecyrillic'] = 0x04C1;\n t['Zhecyrillic'] = 0x0416;\n t['Zhedescendercyrillic'] = 0x0496;\n t['Zhedieresiscyrillic'] = 0x04DC;\n t['Zlinebelow'] = 0x1E94;\n t['Zmonospace'] = 0xFF3A;\n t['Zsmall'] = 0xF77A;\n t['Zstroke'] = 0x01B5;\n t['a'] = 0x0061;\n t['aabengali'] = 0x0986;\n t['aacute'] = 0x00E1;\n t['aadeva'] = 0x0906;\n t['aagujarati'] = 0x0A86;\n t['aagurmukhi'] = 0x0A06;\n t['aamatragurmukhi'] = 0x0A3E;\n t['aarusquare'] = 0x3303;\n t['aavowelsignbengali'] = 0x09BE;\n t['aavowelsigndeva'] = 0x093E;\n t['aavowelsigngujarati'] = 0x0ABE;\n t['abbreviationmarkarmenian'] = 0x055F;\n t['abbreviationsigndeva'] = 0x0970;\n t['abengali'] = 0x0985;\n t['abopomofo'] = 0x311A;\n t['abreve'] = 0x0103;\n t['abreveacute'] = 0x1EAF;\n t['abrevecyrillic'] = 0x04D1;\n t['abrevedotbelow'] = 0x1EB7;\n t['abrevegrave'] = 0x1EB1;\n t['abrevehookabove'] = 0x1EB3;\n t['abrevetilde'] = 0x1EB5;\n t['acaron'] = 0x01CE;\n t['acircle'] = 0x24D0;\n t['acircumflex'] = 0x00E2;\n t['acircumflexacute'] = 0x1EA5;\n t['acircumflexdotbelow'] = 0x1EAD;\n t['acircumflexgrave'] = 0x1EA7;\n t['acircumflexhookabove'] = 0x1EA9;\n t['acircumflextilde'] = 0x1EAB;\n t['acute'] = 0x00B4;\n t['acutebelowcmb'] = 0x0317;\n t['acutecmb'] = 0x0301;\n t['acutecomb'] = 0x0301;\n t['acutedeva'] = 0x0954;\n t['acutelowmod'] = 0x02CF;\n t['acutetonecmb'] = 0x0341;\n t['acyrillic'] = 0x0430;\n t['adblgrave'] = 0x0201;\n t['addakgurmukhi'] = 0x0A71;\n t['adeva'] = 0x0905;\n t['adieresis'] = 0x00E4;\n t['adieresiscyrillic'] = 0x04D3;\n t['adieresismacron'] = 0x01DF;\n t['adotbelow'] = 0x1EA1;\n t['adotmacron'] = 0x01E1;\n t['ae'] = 0x00E6;\n t['aeacute'] = 0x01FD;\n t['aekorean'] = 0x3150;\n t['aemacron'] = 0x01E3;\n t['afii00208'] = 0x2015;\n t['afii08941'] = 0x20A4;\n t['afii10017'] = 0x0410;\n t['afii10018'] = 0x0411;\n t['afii10019'] = 0x0412;\n t['afii10020'] = 0x0413;\n t['afii10021'] = 0x0414;\n t['afii10022'] = 0x0415;\n t['afii10023'] = 0x0401;\n t['afii10024'] = 0x0416;\n t['afii10025'] = 0x0417;\n t['afii10026'] = 0x0418;\n t['afii10027'] = 0x0419;\n t['afii10028'] = 0x041A;\n t['afii10029'] = 0x041B;\n t['afii10030'] = 0x041C;\n t['afii10031'] = 0x041D;\n t['afii10032'] = 0x041E;\n t['afii10033'] = 0x041F;\n t['afii10034'] = 0x0420;\n t['afii10035'] = 0x0421;\n t['afii10036'] = 0x0422;\n t['afii10037'] = 0x0423;\n t['afii10038'] = 0x0424;\n t['afii10039'] = 0x0425;\n t['afii10040'] = 0x0426;\n t['afii10041'] = 0x0427;\n t['afii10042'] = 0x0428;\n t['afii10043'] = 0x0429;\n t['afii10044'] = 0x042A;\n t['afii10045'] = 0x042B;\n t['afii10046'] = 0x042C;\n t['afii10047'] = 0x042D;\n t['afii10048'] = 0x042E;\n t['afii10049'] = 0x042F;\n t['afii10050'] = 0x0490;\n t['afii10051'] = 0x0402;\n t['afii10052'] = 0x0403;\n t['afii10053'] = 0x0404;\n t['afii10054'] = 0x0405;\n t['afii10055'] = 0x0406;\n t['afii10056'] = 0x0407;\n t['afii10057'] = 0x0408;\n t['afii10058'] = 0x0409;\n t['afii10059'] = 0x040A;\n t['afii10060'] = 0x040B;\n t['afii10061'] = 0x040C;\n t['afii10062'] = 0x040E;\n t['afii10063'] = 0xF6C4;\n t['afii10064'] = 0xF6C5;\n t['afii10065'] = 0x0430;\n t['afii10066'] = 0x0431;\n t['afii10067'] = 0x0432;\n t['afii10068'] = 0x0433;\n t['afii10069'] = 0x0434;\n t['afii10070'] = 0x0435;\n t['afii10071'] = 0x0451;\n t['afii10072'] = 0x0436;\n t['afii10073'] = 0x0437;\n t['afii10074'] = 0x0438;\n t['afii10075'] = 0x0439;\n t['afii10076'] = 0x043A;\n t['afii10077'] = 0x043B;\n t['afii10078'] = 0x043C;\n t['afii10079'] = 0x043D;\n t['afii10080'] = 0x043E;\n t['afii10081'] = 0x043F;\n t['afii10082'] = 0x0440;\n t['afii10083'] = 0x0441;\n t['afii10084'] = 0x0442;\n t['afii10085'] = 0x0443;\n t['afii10086'] = 0x0444;\n t['afii10087'] = 0x0445;\n t['afii10088'] = 0x0446;\n t['afii10089'] = 0x0447;\n t['afii10090'] = 0x0448;\n t['afii10091'] = 0x0449;\n t['afii10092'] = 0x044A;\n t['afii10093'] = 0x044B;\n t['afii10094'] = 0x044C;\n t['afii10095'] = 0x044D;\n t['afii10096'] = 0x044E;\n t['afii10097'] = 0x044F;\n t['afii10098'] = 0x0491;\n t['afii10099'] = 0x0452;\n t['afii10100'] = 0x0453;\n t['afii10101'] = 0x0454;\n t['afii10102'] = 0x0455;\n t['afii10103'] = 0x0456;\n t['afii10104'] = 0x0457;\n t['afii10105'] = 0x0458;\n t['afii10106'] = 0x0459;\n t['afii10107'] = 0x045A;\n t['afii10108'] = 0x045B;\n t['afii10109'] = 0x045C;\n t['afii10110'] = 0x045E;\n t['afii10145'] = 0x040F;\n t['afii10146'] = 0x0462;\n t['afii10147'] = 0x0472;\n t['afii10148'] = 0x0474;\n t['afii10192'] = 0xF6C6;\n t['afii10193'] = 0x045F;\n t['afii10194'] = 0x0463;\n t['afii10195'] = 0x0473;\n t['afii10196'] = 0x0475;\n t['afii10831'] = 0xF6C7;\n t['afii10832'] = 0xF6C8;\n t['afii10846'] = 0x04D9;\n t['afii299'] = 0x200E;\n t['afii300'] = 0x200F;\n t['afii301'] = 0x200D;\n t['afii57381'] = 0x066A;\n t['afii57388'] = 0x060C;\n t['afii57392'] = 0x0660;\n t['afii57393'] = 0x0661;\n t['afii57394'] = 0x0662;\n t['afii57395'] = 0x0663;\n t['afii57396'] = 0x0664;\n t['afii57397'] = 0x0665;\n t['afii57398'] = 0x0666;\n t['afii57399'] = 0x0667;\n t['afii57400'] = 0x0668;\n t['afii57401'] = 0x0669;\n t['afii57403'] = 0x061B;\n t['afii57407'] = 0x061F;\n t['afii57409'] = 0x0621;\n t['afii57410'] = 0x0622;\n t['afii57411'] = 0x0623;\n t['afii57412'] = 0x0624;\n t['afii57413'] = 0x0625;\n t['afii57414'] = 0x0626;\n t['afii57415'] = 0x0627;\n t['afii57416'] = 0x0628;\n t['afii57417'] = 0x0629;\n t['afii57418'] = 0x062A;\n t['afii57419'] = 0x062B;\n t['afii57420'] = 0x062C;\n t['afii57421'] = 0x062D;\n t['afii57422'] = 0x062E;\n t['afii57423'] = 0x062F;\n t['afii57424'] = 0x0630;\n t['afii57425'] = 0x0631;\n t['afii57426'] = 0x0632;\n t['afii57427'] = 0x0633;\n t['afii57428'] = 0x0634;\n t['afii57429'] = 0x0635;\n t['afii57430'] = 0x0636;\n t['afii57431'] = 0x0637;\n t['afii57432'] = 0x0638;\n t['afii57433'] = 0x0639;\n t['afii57434'] = 0x063A;\n t['afii57440'] = 0x0640;\n t['afii57441'] = 0x0641;\n t['afii57442'] = 0x0642;\n t['afii57443'] = 0x0643;\n t['afii57444'] = 0x0644;\n t['afii57445'] = 0x0645;\n t['afii57446'] = 0x0646;\n t['afii57448'] = 0x0648;\n t['afii57449'] = 0x0649;\n t['afii57450'] = 0x064A;\n t['afii57451'] = 0x064B;\n t['afii57452'] = 0x064C;\n t['afii57453'] = 0x064D;\n t['afii57454'] = 0x064E;\n t['afii57455'] = 0x064F;\n t['afii57456'] = 0x0650;\n t['afii57457'] = 0x0651;\n t['afii57458'] = 0x0652;\n t['afii57470'] = 0x0647;\n t['afii57505'] = 0x06A4;\n t['afii57506'] = 0x067E;\n t['afii57507'] = 0x0686;\n t['afii57508'] = 0x0698;\n t['afii57509'] = 0x06AF;\n t['afii57511'] = 0x0679;\n t['afii57512'] = 0x0688;\n t['afii57513'] = 0x0691;\n t['afii57514'] = 0x06BA;\n t['afii57519'] = 0x06D2;\n t['afii57534'] = 0x06D5;\n t['afii57636'] = 0x20AA;\n t['afii57645'] = 0x05BE;\n t['afii57658'] = 0x05C3;\n t['afii57664'] = 0x05D0;\n t['afii57665'] = 0x05D1;\n t['afii57666'] = 0x05D2;\n t['afii57667'] = 0x05D3;\n t['afii57668'] = 0x05D4;\n t['afii57669'] = 0x05D5;\n t['afii57670'] = 0x05D6;\n t['afii57671'] = 0x05D7;\n t['afii57672'] = 0x05D8;\n t['afii57673'] = 0x05D9;\n t['afii57674'] = 0x05DA;\n t['afii57675'] = 0x05DB;\n t['afii57676'] = 0x05DC;\n t['afii57677'] = 0x05DD;\n t['afii57678'] = 0x05DE;\n t['afii57679'] = 0x05DF;\n t['afii57680'] = 0x05E0;\n t['afii57681'] = 0x05E1;\n t['afii57682'] = 0x05E2;\n t['afii57683'] = 0x05E3;\n t['afii57684'] = 0x05E4;\n t['afii57685'] = 0x05E5;\n t['afii57686'] = 0x05E6;\n t['afii57687'] = 0x05E7;\n t['afii57688'] = 0x05E8;\n t['afii57689'] = 0x05E9;\n t['afii57690'] = 0x05EA;\n t['afii57694'] = 0xFB2A;\n t['afii57695'] = 0xFB2B;\n t['afii57700'] = 0xFB4B;\n t['afii57705'] = 0xFB1F;\n t['afii57716'] = 0x05F0;\n t['afii57717'] = 0x05F1;\n t['afii57718'] = 0x05F2;\n t['afii57723'] = 0xFB35;\n t['afii57793'] = 0x05B4;\n t['afii57794'] = 0x05B5;\n t['afii57795'] = 0x05B6;\n t['afii57796'] = 0x05BB;\n t['afii57797'] = 0x05B8;\n t['afii57798'] = 0x05B7;\n t['afii57799'] = 0x05B0;\n t['afii57800'] = 0x05B2;\n t['afii57801'] = 0x05B1;\n t['afii57802'] = 0x05B3;\n t['afii57803'] = 0x05C2;\n t['afii57804'] = 0x05C1;\n t['afii57806'] = 0x05B9;\n t['afii57807'] = 0x05BC;\n t['afii57839'] = 0x05BD;\n t['afii57841'] = 0x05BF;\n t['afii57842'] = 0x05C0;\n t['afii57929'] = 0x02BC;\n t['afii61248'] = 0x2105;\n t['afii61289'] = 0x2113;\n t['afii61352'] = 0x2116;\n t['afii61573'] = 0x202C;\n t['afii61574'] = 0x202D;\n t['afii61575'] = 0x202E;\n t['afii61664'] = 0x200C;\n t['afii63167'] = 0x066D;\n t['afii64937'] = 0x02BD;\n t['agrave'] = 0x00E0;\n t['agujarati'] = 0x0A85;\n t['agurmukhi'] = 0x0A05;\n t['ahiragana'] = 0x3042;\n t['ahookabove'] = 0x1EA3;\n t['aibengali'] = 0x0990;\n t['aibopomofo'] = 0x311E;\n t['aideva'] = 0x0910;\n t['aiecyrillic'] = 0x04D5;\n t['aigujarati'] = 0x0A90;\n t['aigurmukhi'] = 0x0A10;\n t['aimatragurmukhi'] = 0x0A48;\n t['ainarabic'] = 0x0639;\n t['ainfinalarabic'] = 0xFECA;\n t['aininitialarabic'] = 0xFECB;\n t['ainmedialarabic'] = 0xFECC;\n t['ainvertedbreve'] = 0x0203;\n t['aivowelsignbengali'] = 0x09C8;\n t['aivowelsigndeva'] = 0x0948;\n t['aivowelsigngujarati'] = 0x0AC8;\n t['akatakana'] = 0x30A2;\n t['akatakanahalfwidth'] = 0xFF71;\n t['akorean'] = 0x314F;\n t['alef'] = 0x05D0;\n t['alefarabic'] = 0x0627;\n t['alefdageshhebrew'] = 0xFB30;\n t['aleffinalarabic'] = 0xFE8E;\n t['alefhamzaabovearabic'] = 0x0623;\n t['alefhamzaabovefinalarabic'] = 0xFE84;\n t['alefhamzabelowarabic'] = 0x0625;\n t['alefhamzabelowfinalarabic'] = 0xFE88;\n t['alefhebrew'] = 0x05D0;\n t['aleflamedhebrew'] = 0xFB4F;\n t['alefmaddaabovearabic'] = 0x0622;\n t['alefmaddaabovefinalarabic'] = 0xFE82;\n t['alefmaksuraarabic'] = 0x0649;\n t['alefmaksurafinalarabic'] = 0xFEF0;\n t['alefmaksurainitialarabic'] = 0xFEF3;\n t['alefmaksuramedialarabic'] = 0xFEF4;\n t['alefpatahhebrew'] = 0xFB2E;\n t['alefqamatshebrew'] = 0xFB2F;\n t['aleph'] = 0x2135;\n t['allequal'] = 0x224C;\n t['alpha'] = 0x03B1;\n t['alphatonos'] = 0x03AC;\n t['amacron'] = 0x0101;\n t['amonospace'] = 0xFF41;\n t['ampersand'] = 0x0026;\n t['ampersandmonospace'] = 0xFF06;\n t['ampersandsmall'] = 0xF726;\n t['amsquare'] = 0x33C2;\n t['anbopomofo'] = 0x3122;\n t['angbopomofo'] = 0x3124;\n t['angbracketleft'] = 0x3008;\n t['angbracketright'] = 0x3009;\n t['angkhankhuthai'] = 0x0E5A;\n t['angle'] = 0x2220;\n t['anglebracketleft'] = 0x3008;\n t['anglebracketleftvertical'] = 0xFE3F;\n t['anglebracketright'] = 0x3009;\n t['anglebracketrightvertical'] = 0xFE40;\n t['angleleft'] = 0x2329;\n t['angleright'] = 0x232A;\n t['angstrom'] = 0x212B;\n t['anoteleia'] = 0x0387;\n t['anudattadeva'] = 0x0952;\n t['anusvarabengali'] = 0x0982;\n t['anusvaradeva'] = 0x0902;\n t['anusvaragujarati'] = 0x0A82;\n t['aogonek'] = 0x0105;\n t['apaatosquare'] = 0x3300;\n t['aparen'] = 0x249C;\n t['apostrophearmenian'] = 0x055A;\n t['apostrophemod'] = 0x02BC;\n t['apple'] = 0xF8FF;\n t['approaches'] = 0x2250;\n t['approxequal'] = 0x2248;\n t['approxequalorimage'] = 0x2252;\n t['approximatelyequal'] = 0x2245;\n t['araeaekorean'] = 0x318E;\n t['araeakorean'] = 0x318D;\n t['arc'] = 0x2312;\n t['arighthalfring'] = 0x1E9A;\n t['aring'] = 0x00E5;\n t['aringacute'] = 0x01FB;\n t['aringbelow'] = 0x1E01;\n t['arrowboth'] = 0x2194;\n t['arrowdashdown'] = 0x21E3;\n t['arrowdashleft'] = 0x21E0;\n t['arrowdashright'] = 0x21E2;\n t['arrowdashup'] = 0x21E1;\n t['arrowdblboth'] = 0x21D4;\n t['arrowdbldown'] = 0x21D3;\n t['arrowdblleft'] = 0x21D0;\n t['arrowdblright'] = 0x21D2;\n t['arrowdblup'] = 0x21D1;\n t['arrowdown'] = 0x2193;\n t['arrowdownleft'] = 0x2199;\n t['arrowdownright'] = 0x2198;\n t['arrowdownwhite'] = 0x21E9;\n t['arrowheaddownmod'] = 0x02C5;\n t['arrowheadleftmod'] = 0x02C2;\n t['arrowheadrightmod'] = 0x02C3;\n t['arrowheadupmod'] = 0x02C4;\n t['arrowhorizex'] = 0xF8E7;\n t['arrowleft'] = 0x2190;\n t['arrowleftdbl'] = 0x21D0;\n t['arrowleftdblstroke'] = 0x21CD;\n t['arrowleftoverright'] = 0x21C6;\n t['arrowleftwhite'] = 0x21E6;\n t['arrowright'] = 0x2192;\n t['arrowrightdblstroke'] = 0x21CF;\n t['arrowrightheavy'] = 0x279E;\n t['arrowrightoverleft'] = 0x21C4;\n t['arrowrightwhite'] = 0x21E8;\n t['arrowtableft'] = 0x21E4;\n t['arrowtabright'] = 0x21E5;\n t['arrowup'] = 0x2191;\n t['arrowupdn'] = 0x2195;\n t['arrowupdnbse'] = 0x21A8;\n t['arrowupdownbase'] = 0x21A8;\n t['arrowupleft'] = 0x2196;\n t['arrowupleftofdown'] = 0x21C5;\n t['arrowupright'] = 0x2197;\n t['arrowupwhite'] = 0x21E7;\n t['arrowvertex'] = 0xF8E6;\n t['asciicircum'] = 0x005E;\n t['asciicircummonospace'] = 0xFF3E;\n t['asciitilde'] = 0x007E;\n t['asciitildemonospace'] = 0xFF5E;\n t['ascript'] = 0x0251;\n t['ascriptturned'] = 0x0252;\n t['asmallhiragana'] = 0x3041;\n t['asmallkatakana'] = 0x30A1;\n t['asmallkatakanahalfwidth'] = 0xFF67;\n t['asterisk'] = 0x002A;\n t['asteriskaltonearabic'] = 0x066D;\n t['asteriskarabic'] = 0x066D;\n t['asteriskmath'] = 0x2217;\n t['asteriskmonospace'] = 0xFF0A;\n t['asterisksmall'] = 0xFE61;\n t['asterism'] = 0x2042;\n t['asuperior'] = 0xF6E9;\n t['asymptoticallyequal'] = 0x2243;\n t['at'] = 0x0040;\n t['atilde'] = 0x00E3;\n t['atmonospace'] = 0xFF20;\n t['atsmall'] = 0xFE6B;\n t['aturned'] = 0x0250;\n t['aubengali'] = 0x0994;\n t['aubopomofo'] = 0x3120;\n t['audeva'] = 0x0914;\n t['augujarati'] = 0x0A94;\n t['augurmukhi'] = 0x0A14;\n t['aulengthmarkbengali'] = 0x09D7;\n t['aumatragurmukhi'] = 0x0A4C;\n t['auvowelsignbengali'] = 0x09CC;\n t['auvowelsigndeva'] = 0x094C;\n t['auvowelsigngujarati'] = 0x0ACC;\n t['avagrahadeva'] = 0x093D;\n t['aybarmenian'] = 0x0561;\n t['ayin'] = 0x05E2;\n t['ayinaltonehebrew'] = 0xFB20;\n t['ayinhebrew'] = 0x05E2;\n t['b'] = 0x0062;\n t['babengali'] = 0x09AC;\n t['backslash'] = 0x005C;\n t['backslashmonospace'] = 0xFF3C;\n t['badeva'] = 0x092C;\n t['bagujarati'] = 0x0AAC;\n t['bagurmukhi'] = 0x0A2C;\n t['bahiragana'] = 0x3070;\n t['bahtthai'] = 0x0E3F;\n t['bakatakana'] = 0x30D0;\n t['bar'] = 0x007C;\n t['barmonospace'] = 0xFF5C;\n t['bbopomofo'] = 0x3105;\n t['bcircle'] = 0x24D1;\n t['bdotaccent'] = 0x1E03;\n t['bdotbelow'] = 0x1E05;\n t['beamedsixteenthnotes'] = 0x266C;\n t['because'] = 0x2235;\n t['becyrillic'] = 0x0431;\n t['beharabic'] = 0x0628;\n t['behfinalarabic'] = 0xFE90;\n t['behinitialarabic'] = 0xFE91;\n t['behiragana'] = 0x3079;\n t['behmedialarabic'] = 0xFE92;\n t['behmeeminitialarabic'] = 0xFC9F;\n t['behmeemisolatedarabic'] = 0xFC08;\n t['behnoonfinalarabic'] = 0xFC6D;\n t['bekatakana'] = 0x30D9;\n t['benarmenian'] = 0x0562;\n t['bet'] = 0x05D1;\n t['beta'] = 0x03B2;\n t['betasymbolgreek'] = 0x03D0;\n t['betdagesh'] = 0xFB31;\n t['betdageshhebrew'] = 0xFB31;\n t['bethebrew'] = 0x05D1;\n t['betrafehebrew'] = 0xFB4C;\n t['bhabengali'] = 0x09AD;\n t['bhadeva'] = 0x092D;\n t['bhagujarati'] = 0x0AAD;\n t['bhagurmukhi'] = 0x0A2D;\n t['bhook'] = 0x0253;\n t['bihiragana'] = 0x3073;\n t['bikatakana'] = 0x30D3;\n t['bilabialclick'] = 0x0298;\n t['bindigurmukhi'] = 0x0A02;\n t['birusquare'] = 0x3331;\n t['blackcircle'] = 0x25CF;\n t['blackdiamond'] = 0x25C6;\n t['blackdownpointingtriangle'] = 0x25BC;\n t['blackleftpointingpointer'] = 0x25C4;\n t['blackleftpointingtriangle'] = 0x25C0;\n t['blacklenticularbracketleft'] = 0x3010;\n t['blacklenticularbracketleftvertical'] = 0xFE3B;\n t['blacklenticularbracketright'] = 0x3011;\n t['blacklenticularbracketrightvertical'] = 0xFE3C;\n t['blacklowerlefttriangle'] = 0x25E3;\n t['blacklowerrighttriangle'] = 0x25E2;\n t['blackrectangle'] = 0x25AC;\n t['blackrightpointingpointer'] = 0x25BA;\n t['blackrightpointingtriangle'] = 0x25B6;\n t['blacksmallsquare'] = 0x25AA;\n t['blacksmilingface'] = 0x263B;\n t['blacksquare'] = 0x25A0;\n t['blackstar'] = 0x2605;\n t['blackupperlefttriangle'] = 0x25E4;\n t['blackupperrighttriangle'] = 0x25E5;\n t['blackuppointingsmalltriangle'] = 0x25B4;\n t['blackuppointingtriangle'] = 0x25B2;\n t['blank'] = 0x2423;\n t['blinebelow'] = 0x1E07;\n t['block'] = 0x2588;\n t['bmonospace'] = 0xFF42;\n t['bobaimaithai'] = 0x0E1A;\n t['bohiragana'] = 0x307C;\n t['bokatakana'] = 0x30DC;\n t['bparen'] = 0x249D;\n t['bqsquare'] = 0x33C3;\n t['braceex'] = 0xF8F4;\n t['braceleft'] = 0x007B;\n t['braceleftbt'] = 0xF8F3;\n t['braceleftmid'] = 0xF8F2;\n t['braceleftmonospace'] = 0xFF5B;\n t['braceleftsmall'] = 0xFE5B;\n t['bracelefttp'] = 0xF8F1;\n t['braceleftvertical'] = 0xFE37;\n t['braceright'] = 0x007D;\n t['bracerightbt'] = 0xF8FE;\n t['bracerightmid'] = 0xF8FD;\n t['bracerightmonospace'] = 0xFF5D;\n t['bracerightsmall'] = 0xFE5C;\n t['bracerighttp'] = 0xF8FC;\n t['bracerightvertical'] = 0xFE38;\n t['bracketleft'] = 0x005B;\n t['bracketleftbt'] = 0xF8F0;\n t['bracketleftex'] = 0xF8EF;\n t['bracketleftmonospace'] = 0xFF3B;\n t['bracketlefttp'] = 0xF8EE;\n t['bracketright'] = 0x005D;\n t['bracketrightbt'] = 0xF8FB;\n t['bracketrightex'] = 0xF8FA;\n t['bracketrightmonospace'] = 0xFF3D;\n t['bracketrighttp'] = 0xF8F9;\n t['breve'] = 0x02D8;\n t['brevebelowcmb'] = 0x032E;\n t['brevecmb'] = 0x0306;\n t['breveinvertedbelowcmb'] = 0x032F;\n t['breveinvertedcmb'] = 0x0311;\n t['breveinverteddoublecmb'] = 0x0361;\n t['bridgebelowcmb'] = 0x032A;\n t['bridgeinvertedbelowcmb'] = 0x033A;\n t['brokenbar'] = 0x00A6;\n t['bstroke'] = 0x0180;\n t['bsuperior'] = 0xF6EA;\n t['btopbar'] = 0x0183;\n t['buhiragana'] = 0x3076;\n t['bukatakana'] = 0x30D6;\n t['bullet'] = 0x2022;\n t['bulletinverse'] = 0x25D8;\n t['bulletoperator'] = 0x2219;\n t['bullseye'] = 0x25CE;\n t['c'] = 0x0063;\n t['caarmenian'] = 0x056E;\n t['cabengali'] = 0x099A;\n t['cacute'] = 0x0107;\n t['cadeva'] = 0x091A;\n t['cagujarati'] = 0x0A9A;\n t['cagurmukhi'] = 0x0A1A;\n t['calsquare'] = 0x3388;\n t['candrabindubengali'] = 0x0981;\n t['candrabinducmb'] = 0x0310;\n t['candrabindudeva'] = 0x0901;\n t['candrabindugujarati'] = 0x0A81;\n t['capslock'] = 0x21EA;\n t['careof'] = 0x2105;\n t['caron'] = 0x02C7;\n t['caronbelowcmb'] = 0x032C;\n t['caroncmb'] = 0x030C;\n t['carriagereturn'] = 0x21B5;\n t['cbopomofo'] = 0x3118;\n t['ccaron'] = 0x010D;\n t['ccedilla'] = 0x00E7;\n t['ccedillaacute'] = 0x1E09;\n t['ccircle'] = 0x24D2;\n t['ccircumflex'] = 0x0109;\n t['ccurl'] = 0x0255;\n t['cdot'] = 0x010B;\n t['cdotaccent'] = 0x010B;\n t['cdsquare'] = 0x33C5;\n t['cedilla'] = 0x00B8;\n t['cedillacmb'] = 0x0327;\n t['cent'] = 0x00A2;\n t['centigrade'] = 0x2103;\n t['centinferior'] = 0xF6DF;\n t['centmonospace'] = 0xFFE0;\n t['centoldstyle'] = 0xF7A2;\n t['centsuperior'] = 0xF6E0;\n t['chaarmenian'] = 0x0579;\n t['chabengali'] = 0x099B;\n t['chadeva'] = 0x091B;\n t['chagujarati'] = 0x0A9B;\n t['chagurmukhi'] = 0x0A1B;\n t['chbopomofo'] = 0x3114;\n t['cheabkhasiancyrillic'] = 0x04BD;\n t['checkmark'] = 0x2713;\n t['checyrillic'] = 0x0447;\n t['chedescenderabkhasiancyrillic'] = 0x04BF;\n t['chedescendercyrillic'] = 0x04B7;\n t['chedieresiscyrillic'] = 0x04F5;\n t['cheharmenian'] = 0x0573;\n t['chekhakassiancyrillic'] = 0x04CC;\n t['cheverticalstrokecyrillic'] = 0x04B9;\n t['chi'] = 0x03C7;\n t['chieuchacirclekorean'] = 0x3277;\n t['chieuchaparenkorean'] = 0x3217;\n t['chieuchcirclekorean'] = 0x3269;\n t['chieuchkorean'] = 0x314A;\n t['chieuchparenkorean'] = 0x3209;\n t['chochangthai'] = 0x0E0A;\n t['chochanthai'] = 0x0E08;\n t['chochingthai'] = 0x0E09;\n t['chochoethai'] = 0x0E0C;\n t['chook'] = 0x0188;\n t['cieucacirclekorean'] = 0x3276;\n t['cieucaparenkorean'] = 0x3216;\n t['cieuccirclekorean'] = 0x3268;\n t['cieuckorean'] = 0x3148;\n t['cieucparenkorean'] = 0x3208;\n t['cieucuparenkorean'] = 0x321C;\n t['circle'] = 0x25CB;\n t['circlecopyrt'] = 0x00A9;\n t['circlemultiply'] = 0x2297;\n t['circleot'] = 0x2299;\n t['circleplus'] = 0x2295;\n t['circlepostalmark'] = 0x3036;\n t['circlewithlefthalfblack'] = 0x25D0;\n t['circlewithrighthalfblack'] = 0x25D1;\n t['circumflex'] = 0x02C6;\n t['circumflexbelowcmb'] = 0x032D;\n t['circumflexcmb'] = 0x0302;\n t['clear'] = 0x2327;\n t['clickalveolar'] = 0x01C2;\n t['clickdental'] = 0x01C0;\n t['clicklateral'] = 0x01C1;\n t['clickretroflex'] = 0x01C3;\n t['club'] = 0x2663;\n t['clubsuitblack'] = 0x2663;\n t['clubsuitwhite'] = 0x2667;\n t['cmcubedsquare'] = 0x33A4;\n t['cmonospace'] = 0xFF43;\n t['cmsquaredsquare'] = 0x33A0;\n t['coarmenian'] = 0x0581;\n t['colon'] = 0x003A;\n t['colonmonetary'] = 0x20A1;\n t['colonmonospace'] = 0xFF1A;\n t['colonsign'] = 0x20A1;\n t['colonsmall'] = 0xFE55;\n t['colontriangularhalfmod'] = 0x02D1;\n t['colontriangularmod'] = 0x02D0;\n t['comma'] = 0x002C;\n t['commaabovecmb'] = 0x0313;\n t['commaaboverightcmb'] = 0x0315;\n t['commaaccent'] = 0xF6C3;\n t['commaarabic'] = 0x060C;\n t['commaarmenian'] = 0x055D;\n t['commainferior'] = 0xF6E1;\n t['commamonospace'] = 0xFF0C;\n t['commareversedabovecmb'] = 0x0314;\n t['commareversedmod'] = 0x02BD;\n t['commasmall'] = 0xFE50;\n t['commasuperior'] = 0xF6E2;\n t['commaturnedabovecmb'] = 0x0312;\n t['commaturnedmod'] = 0x02BB;\n t['compass'] = 0x263C;\n t['congruent'] = 0x2245;\n t['contourintegral'] = 0x222E;\n t['control'] = 0x2303;\n t['controlACK'] = 0x0006;\n t['controlBEL'] = 0x0007;\n t['controlBS'] = 0x0008;\n t['controlCAN'] = 0x0018;\n t['controlCR'] = 0x000D;\n t['controlDC1'] = 0x0011;\n t['controlDC2'] = 0x0012;\n t['controlDC3'] = 0x0013;\n t['controlDC4'] = 0x0014;\n t['controlDEL'] = 0x007F;\n t['controlDLE'] = 0x0010;\n t['controlEM'] = 0x0019;\n t['controlENQ'] = 0x0005;\n t['controlEOT'] = 0x0004;\n t['controlESC'] = 0x001B;\n t['controlETB'] = 0x0017;\n t['controlETX'] = 0x0003;\n t['controlFF'] = 0x000C;\n t['controlFS'] = 0x001C;\n t['controlGS'] = 0x001D;\n t['controlHT'] = 0x0009;\n t['controlLF'] = 0x000A;\n t['controlNAK'] = 0x0015;\n t['controlNULL'] = 0x0000;\n t['controlRS'] = 0x001E;\n t['controlSI'] = 0x000F;\n t['controlSO'] = 0x000E;\n t['controlSOT'] = 0x0002;\n t['controlSTX'] = 0x0001;\n t['controlSUB'] = 0x001A;\n t['controlSYN'] = 0x0016;\n t['controlUS'] = 0x001F;\n t['controlVT'] = 0x000B;\n t['copyright'] = 0x00A9;\n t['copyrightsans'] = 0xF8E9;\n t['copyrightserif'] = 0xF6D9;\n t['cornerbracketleft'] = 0x300C;\n t['cornerbracketlefthalfwidth'] = 0xFF62;\n t['cornerbracketleftvertical'] = 0xFE41;\n t['cornerbracketright'] = 0x300D;\n t['cornerbracketrighthalfwidth'] = 0xFF63;\n t['cornerbracketrightvertical'] = 0xFE42;\n t['corporationsquare'] = 0x337F;\n t['cosquare'] = 0x33C7;\n t['coverkgsquare'] = 0x33C6;\n t['cparen'] = 0x249E;\n t['cruzeiro'] = 0x20A2;\n t['cstretched'] = 0x0297;\n t['curlyand'] = 0x22CF;\n t['curlyor'] = 0x22CE;\n t['currency'] = 0x00A4;\n t['cyrBreve'] = 0xF6D1;\n t['cyrFlex'] = 0xF6D2;\n t['cyrbreve'] = 0xF6D4;\n t['cyrflex'] = 0xF6D5;\n t['d'] = 0x0064;\n t['daarmenian'] = 0x0564;\n t['dabengali'] = 0x09A6;\n t['dadarabic'] = 0x0636;\n t['dadeva'] = 0x0926;\n t['dadfinalarabic'] = 0xFEBE;\n t['dadinitialarabic'] = 0xFEBF;\n t['dadmedialarabic'] = 0xFEC0;\n t['dagesh'] = 0x05BC;\n t['dageshhebrew'] = 0x05BC;\n t['dagger'] = 0x2020;\n t['daggerdbl'] = 0x2021;\n t['dagujarati'] = 0x0AA6;\n t['dagurmukhi'] = 0x0A26;\n t['dahiragana'] = 0x3060;\n t['dakatakana'] = 0x30C0;\n t['dalarabic'] = 0x062F;\n t['dalet'] = 0x05D3;\n t['daletdagesh'] = 0xFB33;\n t['daletdageshhebrew'] = 0xFB33;\n t['dalethebrew'] = 0x05D3;\n t['dalfinalarabic'] = 0xFEAA;\n t['dammaarabic'] = 0x064F;\n t['dammalowarabic'] = 0x064F;\n t['dammatanaltonearabic'] = 0x064C;\n t['dammatanarabic'] = 0x064C;\n t['danda'] = 0x0964;\n t['dargahebrew'] = 0x05A7;\n t['dargalefthebrew'] = 0x05A7;\n t['dasiapneumatacyrilliccmb'] = 0x0485;\n t['dblGrave'] = 0xF6D3;\n t['dblanglebracketleft'] = 0x300A;\n t['dblanglebracketleftvertical'] = 0xFE3D;\n t['dblanglebracketright'] = 0x300B;\n t['dblanglebracketrightvertical'] = 0xFE3E;\n t['dblarchinvertedbelowcmb'] = 0x032B;\n t['dblarrowleft'] = 0x21D4;\n t['dblarrowright'] = 0x21D2;\n t['dbldanda'] = 0x0965;\n t['dblgrave'] = 0xF6D6;\n t['dblgravecmb'] = 0x030F;\n t['dblintegral'] = 0x222C;\n t['dbllowline'] = 0x2017;\n t['dbllowlinecmb'] = 0x0333;\n t['dbloverlinecmb'] = 0x033F;\n t['dblprimemod'] = 0x02BA;\n t['dblverticalbar'] = 0x2016;\n t['dblverticallineabovecmb'] = 0x030E;\n t['dbopomofo'] = 0x3109;\n t['dbsquare'] = 0x33C8;\n t['dcaron'] = 0x010F;\n t['dcedilla'] = 0x1E11;\n t['dcircle'] = 0x24D3;\n t['dcircumflexbelow'] = 0x1E13;\n t['dcroat'] = 0x0111;\n t['ddabengali'] = 0x09A1;\n t['ddadeva'] = 0x0921;\n t['ddagujarati'] = 0x0AA1;\n t['ddagurmukhi'] = 0x0A21;\n t['ddalarabic'] = 0x0688;\n t['ddalfinalarabic'] = 0xFB89;\n t['dddhadeva'] = 0x095C;\n t['ddhabengali'] = 0x09A2;\n t['ddhadeva'] = 0x0922;\n t['ddhagujarati'] = 0x0AA2;\n t['ddhagurmukhi'] = 0x0A22;\n t['ddotaccent'] = 0x1E0B;\n t['ddotbelow'] = 0x1E0D;\n t['decimalseparatorarabic'] = 0x066B;\n t['decimalseparatorpersian'] = 0x066B;\n t['decyrillic'] = 0x0434;\n t['degree'] = 0x00B0;\n t['dehihebrew'] = 0x05AD;\n t['dehiragana'] = 0x3067;\n t['deicoptic'] = 0x03EF;\n t['dekatakana'] = 0x30C7;\n t['deleteleft'] = 0x232B;\n t['deleteright'] = 0x2326;\n t['delta'] = 0x03B4;\n t['deltaturned'] = 0x018D;\n t['denominatorminusonenumeratorbengali'] = 0x09F8;\n t['dezh'] = 0x02A4;\n t['dhabengali'] = 0x09A7;\n t['dhadeva'] = 0x0927;\n t['dhagujarati'] = 0x0AA7;\n t['dhagurmukhi'] = 0x0A27;\n t['dhook'] = 0x0257;\n t['dialytikatonos'] = 0x0385;\n t['dialytikatonoscmb'] = 0x0344;\n t['diamond'] = 0x2666;\n t['diamondsuitwhite'] = 0x2662;\n t['dieresis'] = 0x00A8;\n t['dieresisacute'] = 0xF6D7;\n t['dieresisbelowcmb'] = 0x0324;\n t['dieresiscmb'] = 0x0308;\n t['dieresisgrave'] = 0xF6D8;\n t['dieresistonos'] = 0x0385;\n t['dihiragana'] = 0x3062;\n t['dikatakana'] = 0x30C2;\n t['dittomark'] = 0x3003;\n t['divide'] = 0x00F7;\n t['divides'] = 0x2223;\n t['divisionslash'] = 0x2215;\n t['djecyrillic'] = 0x0452;\n t['dkshade'] = 0x2593;\n t['dlinebelow'] = 0x1E0F;\n t['dlsquare'] = 0x3397;\n t['dmacron'] = 0x0111;\n t['dmonospace'] = 0xFF44;\n t['dnblock'] = 0x2584;\n t['dochadathai'] = 0x0E0E;\n t['dodekthai'] = 0x0E14;\n t['dohiragana'] = 0x3069;\n t['dokatakana'] = 0x30C9;\n t['dollar'] = 0x0024;\n t['dollarinferior'] = 0xF6E3;\n t['dollarmonospace'] = 0xFF04;\n t['dollaroldstyle'] = 0xF724;\n t['dollarsmall'] = 0xFE69;\n t['dollarsuperior'] = 0xF6E4;\n t['dong'] = 0x20AB;\n t['dorusquare'] = 0x3326;\n t['dotaccent'] = 0x02D9;\n t['dotaccentcmb'] = 0x0307;\n t['dotbelowcmb'] = 0x0323;\n t['dotbelowcomb'] = 0x0323;\n t['dotkatakana'] = 0x30FB;\n t['dotlessi'] = 0x0131;\n t['dotlessj'] = 0xF6BE;\n t['dotlessjstrokehook'] = 0x0284;\n t['dotmath'] = 0x22C5;\n t['dottedcircle'] = 0x25CC;\n t['doubleyodpatah'] = 0xFB1F;\n t['doubleyodpatahhebrew'] = 0xFB1F;\n t['downtackbelowcmb'] = 0x031E;\n t['downtackmod'] = 0x02D5;\n t['dparen'] = 0x249F;\n t['dsuperior'] = 0xF6EB;\n t['dtail'] = 0x0256;\n t['dtopbar'] = 0x018C;\n t['duhiragana'] = 0x3065;\n t['dukatakana'] = 0x30C5;\n t['dz'] = 0x01F3;\n t['dzaltone'] = 0x02A3;\n t['dzcaron'] = 0x01C6;\n t['dzcurl'] = 0x02A5;\n t['dzeabkhasiancyrillic'] = 0x04E1;\n t['dzecyrillic'] = 0x0455;\n t['dzhecyrillic'] = 0x045F;\n t['e'] = 0x0065;\n t['eacute'] = 0x00E9;\n t['earth'] = 0x2641;\n t['ebengali'] = 0x098F;\n t['ebopomofo'] = 0x311C;\n t['ebreve'] = 0x0115;\n t['ecandradeva'] = 0x090D;\n t['ecandragujarati'] = 0x0A8D;\n t['ecandravowelsigndeva'] = 0x0945;\n t['ecandravowelsigngujarati'] = 0x0AC5;\n t['ecaron'] = 0x011B;\n t['ecedillabreve'] = 0x1E1D;\n t['echarmenian'] = 0x0565;\n t['echyiwnarmenian'] = 0x0587;\n t['ecircle'] = 0x24D4;\n t['ecircumflex'] = 0x00EA;\n t['ecircumflexacute'] = 0x1EBF;\n t['ecircumflexbelow'] = 0x1E19;\n t['ecircumflexdotbelow'] = 0x1EC7;\n t['ecircumflexgrave'] = 0x1EC1;\n t['ecircumflexhookabove'] = 0x1EC3;\n t['ecircumflextilde'] = 0x1EC5;\n t['ecyrillic'] = 0x0454;\n t['edblgrave'] = 0x0205;\n t['edeva'] = 0x090F;\n t['edieresis'] = 0x00EB;\n t['edot'] = 0x0117;\n t['edotaccent'] = 0x0117;\n t['edotbelow'] = 0x1EB9;\n t['eegurmukhi'] = 0x0A0F;\n t['eematragurmukhi'] = 0x0A47;\n t['efcyrillic'] = 0x0444;\n t['egrave'] = 0x00E8;\n t['egujarati'] = 0x0A8F;\n t['eharmenian'] = 0x0567;\n t['ehbopomofo'] = 0x311D;\n t['ehiragana'] = 0x3048;\n t['ehookabove'] = 0x1EBB;\n t['eibopomofo'] = 0x311F;\n t['eight'] = 0x0038;\n t['eightarabic'] = 0x0668;\n t['eightbengali'] = 0x09EE;\n t['eightcircle'] = 0x2467;\n t['eightcircleinversesansserif'] = 0x2791;\n t['eightdeva'] = 0x096E;\n t['eighteencircle'] = 0x2471;\n t['eighteenparen'] = 0x2485;\n t['eighteenperiod'] = 0x2499;\n t['eightgujarati'] = 0x0AEE;\n t['eightgurmukhi'] = 0x0A6E;\n t['eighthackarabic'] = 0x0668;\n t['eighthangzhou'] = 0x3028;\n t['eighthnotebeamed'] = 0x266B;\n t['eightideographicparen'] = 0x3227;\n t['eightinferior'] = 0x2088;\n t['eightmonospace'] = 0xFF18;\n t['eightoldstyle'] = 0xF738;\n t['eightparen'] = 0x247B;\n t['eightperiod'] = 0x248F;\n t['eightpersian'] = 0x06F8;\n t['eightroman'] = 0x2177;\n t['eightsuperior'] = 0x2078;\n t['eightthai'] = 0x0E58;\n t['einvertedbreve'] = 0x0207;\n t['eiotifiedcyrillic'] = 0x0465;\n t['ekatakana'] = 0x30A8;\n t['ekatakanahalfwidth'] = 0xFF74;\n t['ekonkargurmukhi'] = 0x0A74;\n t['ekorean'] = 0x3154;\n t['elcyrillic'] = 0x043B;\n t['element'] = 0x2208;\n t['elevencircle'] = 0x246A;\n t['elevenparen'] = 0x247E;\n t['elevenperiod'] = 0x2492;\n t['elevenroman'] = 0x217A;\n t['ellipsis'] = 0x2026;\n t['ellipsisvertical'] = 0x22EE;\n t['emacron'] = 0x0113;\n t['emacronacute'] = 0x1E17;\n t['emacrongrave'] = 0x1E15;\n t['emcyrillic'] = 0x043C;\n t['emdash'] = 0x2014;\n t['emdashvertical'] = 0xFE31;\n t['emonospace'] = 0xFF45;\n t['emphasismarkarmenian'] = 0x055B;\n t['emptyset'] = 0x2205;\n t['enbopomofo'] = 0x3123;\n t['encyrillic'] = 0x043D;\n t['endash'] = 0x2013;\n t['endashvertical'] = 0xFE32;\n t['endescendercyrillic'] = 0x04A3;\n t['eng'] = 0x014B;\n t['engbopomofo'] = 0x3125;\n t['enghecyrillic'] = 0x04A5;\n t['enhookcyrillic'] = 0x04C8;\n t['enspace'] = 0x2002;\n t['eogonek'] = 0x0119;\n t['eokorean'] = 0x3153;\n t['eopen'] = 0x025B;\n t['eopenclosed'] = 0x029A;\n t['eopenreversed'] = 0x025C;\n t['eopenreversedclosed'] = 0x025E;\n t['eopenreversedhook'] = 0x025D;\n t['eparen'] = 0x24A0;\n t['epsilon'] = 0x03B5;\n t['epsilontonos'] = 0x03AD;\n t['equal'] = 0x003D;\n t['equalmonospace'] = 0xFF1D;\n t['equalsmall'] = 0xFE66;\n t['equalsuperior'] = 0x207C;\n t['equivalence'] = 0x2261;\n t['erbopomofo'] = 0x3126;\n t['ercyrillic'] = 0x0440;\n t['ereversed'] = 0x0258;\n t['ereversedcyrillic'] = 0x044D;\n t['escyrillic'] = 0x0441;\n t['esdescendercyrillic'] = 0x04AB;\n t['esh'] = 0x0283;\n t['eshcurl'] = 0x0286;\n t['eshortdeva'] = 0x090E;\n t['eshortvowelsigndeva'] = 0x0946;\n t['eshreversedloop'] = 0x01AA;\n t['eshsquatreversed'] = 0x0285;\n t['esmallhiragana'] = 0x3047;\n t['esmallkatakana'] = 0x30A7;\n t['esmallkatakanahalfwidth'] = 0xFF6A;\n t['estimated'] = 0x212E;\n t['esuperior'] = 0xF6EC;\n t['eta'] = 0x03B7;\n t['etarmenian'] = 0x0568;\n t['etatonos'] = 0x03AE;\n t['eth'] = 0x00F0;\n t['etilde'] = 0x1EBD;\n t['etildebelow'] = 0x1E1B;\n t['etnahtafoukhhebrew'] = 0x0591;\n t['etnahtafoukhlefthebrew'] = 0x0591;\n t['etnahtahebrew'] = 0x0591;\n t['etnahtalefthebrew'] = 0x0591;\n t['eturned'] = 0x01DD;\n t['eukorean'] = 0x3161;\n t['euro'] = 0x20AC;\n t['evowelsignbengali'] = 0x09C7;\n t['evowelsigndeva'] = 0x0947;\n t['evowelsigngujarati'] = 0x0AC7;\n t['exclam'] = 0x0021;\n t['exclamarmenian'] = 0x055C;\n t['exclamdbl'] = 0x203C;\n t['exclamdown'] = 0x00A1;\n t['exclamdownsmall'] = 0xF7A1;\n t['exclammonospace'] = 0xFF01;\n t['exclamsmall'] = 0xF721;\n t['existential'] = 0x2203;\n t['ezh'] = 0x0292;\n t['ezhcaron'] = 0x01EF;\n t['ezhcurl'] = 0x0293;\n t['ezhreversed'] = 0x01B9;\n t['ezhtail'] = 0x01BA;\n t['f'] = 0x0066;\n t['fadeva'] = 0x095E;\n t['fagurmukhi'] = 0x0A5E;\n t['fahrenheit'] = 0x2109;\n t['fathaarabic'] = 0x064E;\n t['fathalowarabic'] = 0x064E;\n t['fathatanarabic'] = 0x064B;\n t['fbopomofo'] = 0x3108;\n t['fcircle'] = 0x24D5;\n t['fdotaccent'] = 0x1E1F;\n t['feharabic'] = 0x0641;\n t['feharmenian'] = 0x0586;\n t['fehfinalarabic'] = 0xFED2;\n t['fehinitialarabic'] = 0xFED3;\n t['fehmedialarabic'] = 0xFED4;\n t['feicoptic'] = 0x03E5;\n t['female'] = 0x2640;\n t['ff'] = 0xFB00;\n t['ffi'] = 0xFB03;\n t['ffl'] = 0xFB04;\n t['fi'] = 0xFB01;\n t['fifteencircle'] = 0x246E;\n t['fifteenparen'] = 0x2482;\n t['fifteenperiod'] = 0x2496;\n t['figuredash'] = 0x2012;\n t['filledbox'] = 0x25A0;\n t['filledrect'] = 0x25AC;\n t['finalkaf'] = 0x05DA;\n t['finalkafdagesh'] = 0xFB3A;\n t['finalkafdageshhebrew'] = 0xFB3A;\n t['finalkafhebrew'] = 0x05DA;\n t['finalmem'] = 0x05DD;\n t['finalmemhebrew'] = 0x05DD;\n t['finalnun'] = 0x05DF;\n t['finalnunhebrew'] = 0x05DF;\n t['finalpe'] = 0x05E3;\n t['finalpehebrew'] = 0x05E3;\n t['finaltsadi'] = 0x05E5;\n t['finaltsadihebrew'] = 0x05E5;\n t['firsttonechinese'] = 0x02C9;\n t['fisheye'] = 0x25C9;\n t['fitacyrillic'] = 0x0473;\n t['five'] = 0x0035;\n t['fivearabic'] = 0x0665;\n t['fivebengali'] = 0x09EB;\n t['fivecircle'] = 0x2464;\n t['fivecircleinversesansserif'] = 0x278E;\n t['fivedeva'] = 0x096B;\n t['fiveeighths'] = 0x215D;\n t['fivegujarati'] = 0x0AEB;\n t['fivegurmukhi'] = 0x0A6B;\n t['fivehackarabic'] = 0x0665;\n t['fivehangzhou'] = 0x3025;\n t['fiveideographicparen'] = 0x3224;\n t['fiveinferior'] = 0x2085;\n t['fivemonospace'] = 0xFF15;\n t['fiveoldstyle'] = 0xF735;\n t['fiveparen'] = 0x2478;\n t['fiveperiod'] = 0x248C;\n t['fivepersian'] = 0x06F5;\n t['fiveroman'] = 0x2174;\n t['fivesuperior'] = 0x2075;\n t['fivethai'] = 0x0E55;\n t['fl'] = 0xFB02;\n t['florin'] = 0x0192;\n t['fmonospace'] = 0xFF46;\n t['fmsquare'] = 0x3399;\n t['fofanthai'] = 0x0E1F;\n t['fofathai'] = 0x0E1D;\n t['fongmanthai'] = 0x0E4F;\n t['forall'] = 0x2200;\n t['four'] = 0x0034;\n t['fourarabic'] = 0x0664;\n t['fourbengali'] = 0x09EA;\n t['fourcircle'] = 0x2463;\n t['fourcircleinversesansserif'] = 0x278D;\n t['fourdeva'] = 0x096A;\n t['fourgujarati'] = 0x0AEA;\n t['fourgurmukhi'] = 0x0A6A;\n t['fourhackarabic'] = 0x0664;\n t['fourhangzhou'] = 0x3024;\n t['fourideographicparen'] = 0x3223;\n t['fourinferior'] = 0x2084;\n t['fourmonospace'] = 0xFF14;\n t['fournumeratorbengali'] = 0x09F7;\n t['fouroldstyle'] = 0xF734;\n t['fourparen'] = 0x2477;\n t['fourperiod'] = 0x248B;\n t['fourpersian'] = 0x06F4;\n t['fourroman'] = 0x2173;\n t['foursuperior'] = 0x2074;\n t['fourteencircle'] = 0x246D;\n t['fourteenparen'] = 0x2481;\n t['fourteenperiod'] = 0x2495;\n t['fourthai'] = 0x0E54;\n t['fourthtonechinese'] = 0x02CB;\n t['fparen'] = 0x24A1;\n t['fraction'] = 0x2044;\n t['franc'] = 0x20A3;\n t['g'] = 0x0067;\n t['gabengali'] = 0x0997;\n t['gacute'] = 0x01F5;\n t['gadeva'] = 0x0917;\n t['gafarabic'] = 0x06AF;\n t['gaffinalarabic'] = 0xFB93;\n t['gafinitialarabic'] = 0xFB94;\n t['gafmedialarabic'] = 0xFB95;\n t['gagujarati'] = 0x0A97;\n t['gagurmukhi'] = 0x0A17;\n t['gahiragana'] = 0x304C;\n t['gakatakana'] = 0x30AC;\n t['gamma'] = 0x03B3;\n t['gammalatinsmall'] = 0x0263;\n t['gammasuperior'] = 0x02E0;\n t['gangiacoptic'] = 0x03EB;\n t['gbopomofo'] = 0x310D;\n t['gbreve'] = 0x011F;\n t['gcaron'] = 0x01E7;\n t['gcedilla'] = 0x0123;\n t['gcircle'] = 0x24D6;\n t['gcircumflex'] = 0x011D;\n t['gcommaaccent'] = 0x0123;\n t['gdot'] = 0x0121;\n t['gdotaccent'] = 0x0121;\n t['gecyrillic'] = 0x0433;\n t['gehiragana'] = 0x3052;\n t['gekatakana'] = 0x30B2;\n t['geometricallyequal'] = 0x2251;\n t['gereshaccenthebrew'] = 0x059C;\n t['gereshhebrew'] = 0x05F3;\n t['gereshmuqdamhebrew'] = 0x059D;\n t['germandbls'] = 0x00DF;\n t['gershayimaccenthebrew'] = 0x059E;\n t['gershayimhebrew'] = 0x05F4;\n t['getamark'] = 0x3013;\n t['ghabengali'] = 0x0998;\n t['ghadarmenian'] = 0x0572;\n t['ghadeva'] = 0x0918;\n t['ghagujarati'] = 0x0A98;\n t['ghagurmukhi'] = 0x0A18;\n t['ghainarabic'] = 0x063A;\n t['ghainfinalarabic'] = 0xFECE;\n t['ghaininitialarabic'] = 0xFECF;\n t['ghainmedialarabic'] = 0xFED0;\n t['ghemiddlehookcyrillic'] = 0x0495;\n t['ghestrokecyrillic'] = 0x0493;\n t['gheupturncyrillic'] = 0x0491;\n t['ghhadeva'] = 0x095A;\n t['ghhagurmukhi'] = 0x0A5A;\n t['ghook'] = 0x0260;\n t['ghzsquare'] = 0x3393;\n t['gihiragana'] = 0x304E;\n t['gikatakana'] = 0x30AE;\n t['gimarmenian'] = 0x0563;\n t['gimel'] = 0x05D2;\n t['gimeldagesh'] = 0xFB32;\n t['gimeldageshhebrew'] = 0xFB32;\n t['gimelhebrew'] = 0x05D2;\n t['gjecyrillic'] = 0x0453;\n t['glottalinvertedstroke'] = 0x01BE;\n t['glottalstop'] = 0x0294;\n t['glottalstopinverted'] = 0x0296;\n t['glottalstopmod'] = 0x02C0;\n t['glottalstopreversed'] = 0x0295;\n t['glottalstopreversedmod'] = 0x02C1;\n t['glottalstopreversedsuperior'] = 0x02E4;\n t['glottalstopstroke'] = 0x02A1;\n t['glottalstopstrokereversed'] = 0x02A2;\n t['gmacron'] = 0x1E21;\n t['gmonospace'] = 0xFF47;\n t['gohiragana'] = 0x3054;\n t['gokatakana'] = 0x30B4;\n t['gparen'] = 0x24A2;\n t['gpasquare'] = 0x33AC;\n t['gradient'] = 0x2207;\n t['grave'] = 0x0060;\n t['gravebelowcmb'] = 0x0316;\n t['gravecmb'] = 0x0300;\n t['gravecomb'] = 0x0300;\n t['gravedeva'] = 0x0953;\n t['gravelowmod'] = 0x02CE;\n t['gravemonospace'] = 0xFF40;\n t['gravetonecmb'] = 0x0340;\n t['greater'] = 0x003E;\n t['greaterequal'] = 0x2265;\n t['greaterequalorless'] = 0x22DB;\n t['greatermonospace'] = 0xFF1E;\n t['greaterorequivalent'] = 0x2273;\n t['greaterorless'] = 0x2277;\n t['greateroverequal'] = 0x2267;\n t['greatersmall'] = 0xFE65;\n t['gscript'] = 0x0261;\n t['gstroke'] = 0x01E5;\n t['guhiragana'] = 0x3050;\n t['guillemotleft'] = 0x00AB;\n t['guillemotright'] = 0x00BB;\n t['guilsinglleft'] = 0x2039;\n t['guilsinglright'] = 0x203A;\n t['gukatakana'] = 0x30B0;\n t['guramusquare'] = 0x3318;\n t['gysquare'] = 0x33C9;\n t['h'] = 0x0068;\n t['haabkhasiancyrillic'] = 0x04A9;\n t['haaltonearabic'] = 0x06C1;\n t['habengali'] = 0x09B9;\n t['hadescendercyrillic'] = 0x04B3;\n t['hadeva'] = 0x0939;\n t['hagujarati'] = 0x0AB9;\n t['hagurmukhi'] = 0x0A39;\n t['haharabic'] = 0x062D;\n t['hahfinalarabic'] = 0xFEA2;\n t['hahinitialarabic'] = 0xFEA3;\n t['hahiragana'] = 0x306F;\n t['hahmedialarabic'] = 0xFEA4;\n t['haitusquare'] = 0x332A;\n t['hakatakana'] = 0x30CF;\n t['hakatakanahalfwidth'] = 0xFF8A;\n t['halantgurmukhi'] = 0x0A4D;\n t['hamzaarabic'] = 0x0621;\n t['hamzalowarabic'] = 0x0621;\n t['hangulfiller'] = 0x3164;\n t['hardsigncyrillic'] = 0x044A;\n t['harpoonleftbarbup'] = 0x21BC;\n t['harpoonrightbarbup'] = 0x21C0;\n t['hasquare'] = 0x33CA;\n t['hatafpatah'] = 0x05B2;\n t['hatafpatah16'] = 0x05B2;\n t['hatafpatah23'] = 0x05B2;\n t['hatafpatah2f'] = 0x05B2;\n t['hatafpatahhebrew'] = 0x05B2;\n t['hatafpatahnarrowhebrew'] = 0x05B2;\n t['hatafpatahquarterhebrew'] = 0x05B2;\n t['hatafpatahwidehebrew'] = 0x05B2;\n t['hatafqamats'] = 0x05B3;\n t['hatafqamats1b'] = 0x05B3;\n t['hatafqamats28'] = 0x05B3;\n t['hatafqamats34'] = 0x05B3;\n t['hatafqamatshebrew'] = 0x05B3;\n t['hatafqamatsnarrowhebrew'] = 0x05B3;\n t['hatafqamatsquarterhebrew'] = 0x05B3;\n t['hatafqamatswidehebrew'] = 0x05B3;\n t['hatafsegol'] = 0x05B1;\n t['hatafsegol17'] = 0x05B1;\n t['hatafsegol24'] = 0x05B1;\n t['hatafsegol30'] = 0x05B1;\n t['hatafsegolhebrew'] = 0x05B1;\n t['hatafsegolnarrowhebrew'] = 0x05B1;\n t['hatafsegolquarterhebrew'] = 0x05B1;\n t['hatafsegolwidehebrew'] = 0x05B1;\n t['hbar'] = 0x0127;\n t['hbopomofo'] = 0x310F;\n t['hbrevebelow'] = 0x1E2B;\n t['hcedilla'] = 0x1E29;\n t['hcircle'] = 0x24D7;\n t['hcircumflex'] = 0x0125;\n t['hdieresis'] = 0x1E27;\n t['hdotaccent'] = 0x1E23;\n t['hdotbelow'] = 0x1E25;\n t['he'] = 0x05D4;\n t['heart'] = 0x2665;\n t['heartsuitblack'] = 0x2665;\n t['heartsuitwhite'] = 0x2661;\n t['hedagesh'] = 0xFB34;\n t['hedageshhebrew'] = 0xFB34;\n t['hehaltonearabic'] = 0x06C1;\n t['heharabic'] = 0x0647;\n t['hehebrew'] = 0x05D4;\n t['hehfinalaltonearabic'] = 0xFBA7;\n t['hehfinalalttwoarabic'] = 0xFEEA;\n t['hehfinalarabic'] = 0xFEEA;\n t['hehhamzaabovefinalarabic'] = 0xFBA5;\n t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n t['hehinitialaltonearabic'] = 0xFBA8;\n t['hehinitialarabic'] = 0xFEEB;\n t['hehiragana'] = 0x3078;\n t['hehmedialaltonearabic'] = 0xFBA9;\n t['hehmedialarabic'] = 0xFEEC;\n t['heiseierasquare'] = 0x337B;\n t['hekatakana'] = 0x30D8;\n t['hekatakanahalfwidth'] = 0xFF8D;\n t['hekutaarusquare'] = 0x3336;\n t['henghook'] = 0x0267;\n t['herutusquare'] = 0x3339;\n t['het'] = 0x05D7;\n t['hethebrew'] = 0x05D7;\n t['hhook'] = 0x0266;\n t['hhooksuperior'] = 0x02B1;\n t['hieuhacirclekorean'] = 0x327B;\n t['hieuhaparenkorean'] = 0x321B;\n t['hieuhcirclekorean'] = 0x326D;\n t['hieuhkorean'] = 0x314E;\n t['hieuhparenkorean'] = 0x320D;\n t['hihiragana'] = 0x3072;\n t['hikatakana'] = 0x30D2;\n t['hikatakanahalfwidth'] = 0xFF8B;\n t['hiriq'] = 0x05B4;\n t['hiriq14'] = 0x05B4;\n t['hiriq21'] = 0x05B4;\n t['hiriq2d'] = 0x05B4;\n t['hiriqhebrew'] = 0x05B4;\n t['hiriqnarrowhebrew'] = 0x05B4;\n t['hiriqquarterhebrew'] = 0x05B4;\n t['hiriqwidehebrew'] = 0x05B4;\n t['hlinebelow'] = 0x1E96;\n t['hmonospace'] = 0xFF48;\n t['hoarmenian'] = 0x0570;\n t['hohipthai'] = 0x0E2B;\n t['hohiragana'] = 0x307B;\n t['hokatakana'] = 0x30DB;\n t['hokatakanahalfwidth'] = 0xFF8E;\n t['holam'] = 0x05B9;\n t['holam19'] = 0x05B9;\n t['holam26'] = 0x05B9;\n t['holam32'] = 0x05B9;\n t['holamhebrew'] = 0x05B9;\n t['holamnarrowhebrew'] = 0x05B9;\n t['holamquarterhebrew'] = 0x05B9;\n t['holamwidehebrew'] = 0x05B9;\n t['honokhukthai'] = 0x0E2E;\n t['hookabovecomb'] = 0x0309;\n t['hookcmb'] = 0x0309;\n t['hookpalatalizedbelowcmb'] = 0x0321;\n t['hookretroflexbelowcmb'] = 0x0322;\n t['hoonsquare'] = 0x3342;\n t['horicoptic'] = 0x03E9;\n t['horizontalbar'] = 0x2015;\n t['horncmb'] = 0x031B;\n t['hotsprings'] = 0x2668;\n t['house'] = 0x2302;\n t['hparen'] = 0x24A3;\n t['hsuperior'] = 0x02B0;\n t['hturned'] = 0x0265;\n t['huhiragana'] = 0x3075;\n t['huiitosquare'] = 0x3333;\n t['hukatakana'] = 0x30D5;\n t['hukatakanahalfwidth'] = 0xFF8C;\n t['hungarumlaut'] = 0x02DD;\n t['hungarumlautcmb'] = 0x030B;\n t['hv'] = 0x0195;\n t['hyphen'] = 0x002D;\n t['hypheninferior'] = 0xF6E5;\n t['hyphenmonospace'] = 0xFF0D;\n t['hyphensmall'] = 0xFE63;\n t['hyphensuperior'] = 0xF6E6;\n t['hyphentwo'] = 0x2010;\n t['i'] = 0x0069;\n t['iacute'] = 0x00ED;\n t['iacyrillic'] = 0x044F;\n t['ibengali'] = 0x0987;\n t['ibopomofo'] = 0x3127;\n t['ibreve'] = 0x012D;\n t['icaron'] = 0x01D0;\n t['icircle'] = 0x24D8;\n t['icircumflex'] = 0x00EE;\n t['icyrillic'] = 0x0456;\n t['idblgrave'] = 0x0209;\n t['ideographearthcircle'] = 0x328F;\n t['ideographfirecircle'] = 0x328B;\n t['ideographicallianceparen'] = 0x323F;\n t['ideographiccallparen'] = 0x323A;\n t['ideographiccentrecircle'] = 0x32A5;\n t['ideographicclose'] = 0x3006;\n t['ideographiccomma'] = 0x3001;\n t['ideographiccommaleft'] = 0xFF64;\n t['ideographiccongratulationparen'] = 0x3237;\n t['ideographiccorrectcircle'] = 0x32A3;\n t['ideographicearthparen'] = 0x322F;\n t['ideographicenterpriseparen'] = 0x323D;\n t['ideographicexcellentcircle'] = 0x329D;\n t['ideographicfestivalparen'] = 0x3240;\n t['ideographicfinancialcircle'] = 0x3296;\n t['ideographicfinancialparen'] = 0x3236;\n t['ideographicfireparen'] = 0x322B;\n t['ideographichaveparen'] = 0x3232;\n t['ideographichighcircle'] = 0x32A4;\n t['ideographiciterationmark'] = 0x3005;\n t['ideographiclaborcircle'] = 0x3298;\n t['ideographiclaborparen'] = 0x3238;\n t['ideographicleftcircle'] = 0x32A7;\n t['ideographiclowcircle'] = 0x32A6;\n t['ideographicmedicinecircle'] = 0x32A9;\n t['ideographicmetalparen'] = 0x322E;\n t['ideographicmoonparen'] = 0x322A;\n t['ideographicnameparen'] = 0x3234;\n t['ideographicperiod'] = 0x3002;\n t['ideographicprintcircle'] = 0x329E;\n t['ideographicreachparen'] = 0x3243;\n t['ideographicrepresentparen'] = 0x3239;\n t['ideographicresourceparen'] = 0x323E;\n t['ideographicrightcircle'] = 0x32A8;\n t['ideographicsecretcircle'] = 0x3299;\n t['ideographicselfparen'] = 0x3242;\n t['ideographicsocietyparen'] = 0x3233;\n t['ideographicspace'] = 0x3000;\n t['ideographicspecialparen'] = 0x3235;\n t['ideographicstockparen'] = 0x3231;\n t['ideographicstudyparen'] = 0x323B;\n t['ideographicsunparen'] = 0x3230;\n t['ideographicsuperviseparen'] = 0x323C;\n t['ideographicwaterparen'] = 0x322C;\n t['ideographicwoodparen'] = 0x322D;\n t['ideographiczero'] = 0x3007;\n t['ideographmetalcircle'] = 0x328E;\n t['ideographmooncircle'] = 0x328A;\n t['ideographnamecircle'] = 0x3294;\n t['ideographsuncircle'] = 0x3290;\n t['ideographwatercircle'] = 0x328C;\n t['ideographwoodcircle'] = 0x328D;\n t['ideva'] = 0x0907;\n t['idieresis'] = 0x00EF;\n t['idieresisacute'] = 0x1E2F;\n t['idieresiscyrillic'] = 0x04E5;\n t['idotbelow'] = 0x1ECB;\n t['iebrevecyrillic'] = 0x04D7;\n t['iecyrillic'] = 0x0435;\n t['ieungacirclekorean'] = 0x3275;\n t['ieungaparenkorean'] = 0x3215;\n t['ieungcirclekorean'] = 0x3267;\n t['ieungkorean'] = 0x3147;\n t['ieungparenkorean'] = 0x3207;\n t['igrave'] = 0x00EC;\n t['igujarati'] = 0x0A87;\n t['igurmukhi'] = 0x0A07;\n t['ihiragana'] = 0x3044;\n t['ihookabove'] = 0x1EC9;\n t['iibengali'] = 0x0988;\n t['iicyrillic'] = 0x0438;\n t['iideva'] = 0x0908;\n t['iigujarati'] = 0x0A88;\n t['iigurmukhi'] = 0x0A08;\n t['iimatragurmukhi'] = 0x0A40;\n t['iinvertedbreve'] = 0x020B;\n t['iishortcyrillic'] = 0x0439;\n t['iivowelsignbengali'] = 0x09C0;\n t['iivowelsigndeva'] = 0x0940;\n t['iivowelsigngujarati'] = 0x0AC0;\n t['ij'] = 0x0133;\n t['ikatakana'] = 0x30A4;\n t['ikatakanahalfwidth'] = 0xFF72;\n t['ikorean'] = 0x3163;\n t['ilde'] = 0x02DC;\n t['iluyhebrew'] = 0x05AC;\n t['imacron'] = 0x012B;\n t['imacroncyrillic'] = 0x04E3;\n t['imageorapproximatelyequal'] = 0x2253;\n t['imatragurmukhi'] = 0x0A3F;\n t['imonospace'] = 0xFF49;\n t['increment'] = 0x2206;\n t['infinity'] = 0x221E;\n t['iniarmenian'] = 0x056B;\n t['integral'] = 0x222B;\n t['integralbottom'] = 0x2321;\n t['integralbt'] = 0x2321;\n t['integralex'] = 0xF8F5;\n t['integraltop'] = 0x2320;\n t['integraltp'] = 0x2320;\n t['intersection'] = 0x2229;\n t['intisquare'] = 0x3305;\n t['invbullet'] = 0x25D8;\n t['invcircle'] = 0x25D9;\n t['invsmileface'] = 0x263B;\n t['iocyrillic'] = 0x0451;\n t['iogonek'] = 0x012F;\n t['iota'] = 0x03B9;\n t['iotadieresis'] = 0x03CA;\n t['iotadieresistonos'] = 0x0390;\n t['iotalatin'] = 0x0269;\n t['iotatonos'] = 0x03AF;\n t['iparen'] = 0x24A4;\n t['irigurmukhi'] = 0x0A72;\n t['ismallhiragana'] = 0x3043;\n t['ismallkatakana'] = 0x30A3;\n t['ismallkatakanahalfwidth'] = 0xFF68;\n t['issharbengali'] = 0x09FA;\n t['istroke'] = 0x0268;\n t['isuperior'] = 0xF6ED;\n t['iterationhiragana'] = 0x309D;\n t['iterationkatakana'] = 0x30FD;\n t['itilde'] = 0x0129;\n t['itildebelow'] = 0x1E2D;\n t['iubopomofo'] = 0x3129;\n t['iucyrillic'] = 0x044E;\n t['ivowelsignbengali'] = 0x09BF;\n t['ivowelsigndeva'] = 0x093F;\n t['ivowelsigngujarati'] = 0x0ABF;\n t['izhitsacyrillic'] = 0x0475;\n t['izhitsadblgravecyrillic'] = 0x0477;\n t['j'] = 0x006A;\n t['jaarmenian'] = 0x0571;\n t['jabengali'] = 0x099C;\n t['jadeva'] = 0x091C;\n t['jagujarati'] = 0x0A9C;\n t['jagurmukhi'] = 0x0A1C;\n t['jbopomofo'] = 0x3110;\n t['jcaron'] = 0x01F0;\n t['jcircle'] = 0x24D9;\n t['jcircumflex'] = 0x0135;\n t['jcrossedtail'] = 0x029D;\n t['jdotlessstroke'] = 0x025F;\n t['jecyrillic'] = 0x0458;\n t['jeemarabic'] = 0x062C;\n t['jeemfinalarabic'] = 0xFE9E;\n t['jeeminitialarabic'] = 0xFE9F;\n t['jeemmedialarabic'] = 0xFEA0;\n t['jeharabic'] = 0x0698;\n t['jehfinalarabic'] = 0xFB8B;\n t['jhabengali'] = 0x099D;\n t['jhadeva'] = 0x091D;\n t['jhagujarati'] = 0x0A9D;\n t['jhagurmukhi'] = 0x0A1D;\n t['jheharmenian'] = 0x057B;\n t['jis'] = 0x3004;\n t['jmonospace'] = 0xFF4A;\n t['jparen'] = 0x24A5;\n t['jsuperior'] = 0x02B2;\n t['k'] = 0x006B;\n t['kabashkircyrillic'] = 0x04A1;\n t['kabengali'] = 0x0995;\n t['kacute'] = 0x1E31;\n t['kacyrillic'] = 0x043A;\n t['kadescendercyrillic'] = 0x049B;\n t['kadeva'] = 0x0915;\n t['kaf'] = 0x05DB;\n t['kafarabic'] = 0x0643;\n t['kafdagesh'] = 0xFB3B;\n t['kafdageshhebrew'] = 0xFB3B;\n t['kaffinalarabic'] = 0xFEDA;\n t['kafhebrew'] = 0x05DB;\n t['kafinitialarabic'] = 0xFEDB;\n t['kafmedialarabic'] = 0xFEDC;\n t['kafrafehebrew'] = 0xFB4D;\n t['kagujarati'] = 0x0A95;\n t['kagurmukhi'] = 0x0A15;\n t['kahiragana'] = 0x304B;\n t['kahookcyrillic'] = 0x04C4;\n t['kakatakana'] = 0x30AB;\n t['kakatakanahalfwidth'] = 0xFF76;\n t['kappa'] = 0x03BA;\n t['kappasymbolgreek'] = 0x03F0;\n t['kapyeounmieumkorean'] = 0x3171;\n t['kapyeounphieuphkorean'] = 0x3184;\n t['kapyeounpieupkorean'] = 0x3178;\n t['kapyeounssangpieupkorean'] = 0x3179;\n t['karoriisquare'] = 0x330D;\n t['kashidaautoarabic'] = 0x0640;\n t['kashidaautonosidebearingarabic'] = 0x0640;\n t['kasmallkatakana'] = 0x30F5;\n t['kasquare'] = 0x3384;\n t['kasraarabic'] = 0x0650;\n t['kasratanarabic'] = 0x064D;\n t['kastrokecyrillic'] = 0x049F;\n t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n t['kaverticalstrokecyrillic'] = 0x049D;\n t['kbopomofo'] = 0x310E;\n t['kcalsquare'] = 0x3389;\n t['kcaron'] = 0x01E9;\n t['kcedilla'] = 0x0137;\n t['kcircle'] = 0x24DA;\n t['kcommaaccent'] = 0x0137;\n t['kdotbelow'] = 0x1E33;\n t['keharmenian'] = 0x0584;\n t['kehiragana'] = 0x3051;\n t['kekatakana'] = 0x30B1;\n t['kekatakanahalfwidth'] = 0xFF79;\n t['kenarmenian'] = 0x056F;\n t['kesmallkatakana'] = 0x30F6;\n t['kgreenlandic'] = 0x0138;\n t['khabengali'] = 0x0996;\n t['khacyrillic'] = 0x0445;\n t['khadeva'] = 0x0916;\n t['khagujarati'] = 0x0A96;\n t['khagurmukhi'] = 0x0A16;\n t['khaharabic'] = 0x062E;\n t['khahfinalarabic'] = 0xFEA6;\n t['khahinitialarabic'] = 0xFEA7;\n t['khahmedialarabic'] = 0xFEA8;\n t['kheicoptic'] = 0x03E7;\n t['khhadeva'] = 0x0959;\n t['khhagurmukhi'] = 0x0A59;\n t['khieukhacirclekorean'] = 0x3278;\n t['khieukhaparenkorean'] = 0x3218;\n t['khieukhcirclekorean'] = 0x326A;\n t['khieukhkorean'] = 0x314B;\n t['khieukhparenkorean'] = 0x320A;\n t['khokhaithai'] = 0x0E02;\n t['khokhonthai'] = 0x0E05;\n t['khokhuatthai'] = 0x0E03;\n t['khokhwaithai'] = 0x0E04;\n t['khomutthai'] = 0x0E5B;\n t['khook'] = 0x0199;\n t['khorakhangthai'] = 0x0E06;\n t['khzsquare'] = 0x3391;\n t['kihiragana'] = 0x304D;\n t['kikatakana'] = 0x30AD;\n t['kikatakanahalfwidth'] = 0xFF77;\n t['kiroguramusquare'] = 0x3315;\n t['kiromeetorusquare'] = 0x3316;\n t['kirosquare'] = 0x3314;\n t['kiyeokacirclekorean'] = 0x326E;\n t['kiyeokaparenkorean'] = 0x320E;\n t['kiyeokcirclekorean'] = 0x3260;\n t['kiyeokkorean'] = 0x3131;\n t['kiyeokparenkorean'] = 0x3200;\n t['kiyeoksioskorean'] = 0x3133;\n t['kjecyrillic'] = 0x045C;\n t['klinebelow'] = 0x1E35;\n t['klsquare'] = 0x3398;\n t['kmcubedsquare'] = 0x33A6;\n t['kmonospace'] = 0xFF4B;\n t['kmsquaredsquare'] = 0x33A2;\n t['kohiragana'] = 0x3053;\n t['kohmsquare'] = 0x33C0;\n t['kokaithai'] = 0x0E01;\n t['kokatakana'] = 0x30B3;\n t['kokatakanahalfwidth'] = 0xFF7A;\n t['kooposquare'] = 0x331E;\n t['koppacyrillic'] = 0x0481;\n t['koreanstandardsymbol'] = 0x327F;\n t['koroniscmb'] = 0x0343;\n t['kparen'] = 0x24A6;\n t['kpasquare'] = 0x33AA;\n t['ksicyrillic'] = 0x046F;\n t['ktsquare'] = 0x33CF;\n t['kturned'] = 0x029E;\n t['kuhiragana'] = 0x304F;\n t['kukatakana'] = 0x30AF;\n t['kukatakanahalfwidth'] = 0xFF78;\n t['kvsquare'] = 0x33B8;\n t['kwsquare'] = 0x33BE;\n t['l'] = 0x006C;\n t['labengali'] = 0x09B2;\n t['lacute'] = 0x013A;\n t['ladeva'] = 0x0932;\n t['lagujarati'] = 0x0AB2;\n t['lagurmukhi'] = 0x0A32;\n t['lakkhangyaothai'] = 0x0E45;\n t['lamaleffinalarabic'] = 0xFEFC;\n t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n t['lamalefisolatedarabic'] = 0xFEFB;\n t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n t['lamarabic'] = 0x0644;\n t['lambda'] = 0x03BB;\n t['lambdastroke'] = 0x019B;\n t['lamed'] = 0x05DC;\n t['lameddagesh'] = 0xFB3C;\n t['lameddageshhebrew'] = 0xFB3C;\n t['lamedhebrew'] = 0x05DC;\n t['lamfinalarabic'] = 0xFEDE;\n t['lamhahinitialarabic'] = 0xFCCA;\n t['laminitialarabic'] = 0xFEDF;\n t['lamjeeminitialarabic'] = 0xFCC9;\n t['lamkhahinitialarabic'] = 0xFCCB;\n t['lamlamhehisolatedarabic'] = 0xFDF2;\n t['lammedialarabic'] = 0xFEE0;\n t['lammeemhahinitialarabic'] = 0xFD88;\n t['lammeeminitialarabic'] = 0xFCCC;\n t['largecircle'] = 0x25EF;\n t['lbar'] = 0x019A;\n t['lbelt'] = 0x026C;\n t['lbopomofo'] = 0x310C;\n t['lcaron'] = 0x013E;\n t['lcedilla'] = 0x013C;\n t['lcircle'] = 0x24DB;\n t['lcircumflexbelow'] = 0x1E3D;\n t['lcommaaccent'] = 0x013C;\n t['ldot'] = 0x0140;\n t['ldotaccent'] = 0x0140;\n t['ldotbelow'] = 0x1E37;\n t['ldotbelowmacron'] = 0x1E39;\n t['leftangleabovecmb'] = 0x031A;\n t['lefttackbelowcmb'] = 0x0318;\n t['less'] = 0x003C;\n t['lessequal'] = 0x2264;\n t['lessequalorgreater'] = 0x22DA;\n t['lessmonospace'] = 0xFF1C;\n t['lessorequivalent'] = 0x2272;\n t['lessorgreater'] = 0x2276;\n t['lessoverequal'] = 0x2266;\n t['lesssmall'] = 0xFE64;\n t['lezh'] = 0x026E;\n t['lfblock'] = 0x258C;\n t['lhookretroflex'] = 0x026D;\n t['lira'] = 0x20A4;\n t['liwnarmenian'] = 0x056C;\n t['lj'] = 0x01C9;\n t['ljecyrillic'] = 0x0459;\n t['ll'] = 0xF6C0;\n t['lladeva'] = 0x0933;\n t['llagujarati'] = 0x0AB3;\n t['llinebelow'] = 0x1E3B;\n t['llladeva'] = 0x0934;\n t['llvocalicbengali'] = 0x09E1;\n t['llvocalicdeva'] = 0x0961;\n t['llvocalicvowelsignbengali'] = 0x09E3;\n t['llvocalicvowelsigndeva'] = 0x0963;\n t['lmiddletilde'] = 0x026B;\n t['lmonospace'] = 0xFF4C;\n t['lmsquare'] = 0x33D0;\n t['lochulathai'] = 0x0E2C;\n t['logicaland'] = 0x2227;\n t['logicalnot'] = 0x00AC;\n t['logicalnotreversed'] = 0x2310;\n t['logicalor'] = 0x2228;\n t['lolingthai'] = 0x0E25;\n t['longs'] = 0x017F;\n t['lowlinecenterline'] = 0xFE4E;\n t['lowlinecmb'] = 0x0332;\n t['lowlinedashed'] = 0xFE4D;\n t['lozenge'] = 0x25CA;\n t['lparen'] = 0x24A7;\n t['lslash'] = 0x0142;\n t['lsquare'] = 0x2113;\n t['lsuperior'] = 0xF6EE;\n t['ltshade'] = 0x2591;\n t['luthai'] = 0x0E26;\n t['lvocalicbengali'] = 0x098C;\n t['lvocalicdeva'] = 0x090C;\n t['lvocalicvowelsignbengali'] = 0x09E2;\n t['lvocalicvowelsigndeva'] = 0x0962;\n t['lxsquare'] = 0x33D3;\n t['m'] = 0x006D;\n t['mabengali'] = 0x09AE;\n t['macron'] = 0x00AF;\n t['macronbelowcmb'] = 0x0331;\n t['macroncmb'] = 0x0304;\n t['macronlowmod'] = 0x02CD;\n t['macronmonospace'] = 0xFFE3;\n t['macute'] = 0x1E3F;\n t['madeva'] = 0x092E;\n t['magujarati'] = 0x0AAE;\n t['magurmukhi'] = 0x0A2E;\n t['mahapakhhebrew'] = 0x05A4;\n t['mahapakhlefthebrew'] = 0x05A4;\n t['mahiragana'] = 0x307E;\n t['maichattawalowleftthai'] = 0xF895;\n t['maichattawalowrightthai'] = 0xF894;\n t['maichattawathai'] = 0x0E4B;\n t['maichattawaupperleftthai'] = 0xF893;\n t['maieklowleftthai'] = 0xF88C;\n t['maieklowrightthai'] = 0xF88B;\n t['maiekthai'] = 0x0E48;\n t['maiekupperleftthai'] = 0xF88A;\n t['maihanakatleftthai'] = 0xF884;\n t['maihanakatthai'] = 0x0E31;\n t['maitaikhuleftthai'] = 0xF889;\n t['maitaikhuthai'] = 0x0E47;\n t['maitholowleftthai'] = 0xF88F;\n t['maitholowrightthai'] = 0xF88E;\n t['maithothai'] = 0x0E49;\n t['maithoupperleftthai'] = 0xF88D;\n t['maitrilowleftthai'] = 0xF892;\n t['maitrilowrightthai'] = 0xF891;\n t['maitrithai'] = 0x0E4A;\n t['maitriupperleftthai'] = 0xF890;\n t['maiyamokthai'] = 0x0E46;\n t['makatakana'] = 0x30DE;\n t['makatakanahalfwidth'] = 0xFF8F;\n t['male'] = 0x2642;\n t['mansyonsquare'] = 0x3347;\n t['maqafhebrew'] = 0x05BE;\n t['mars'] = 0x2642;\n t['masoracirclehebrew'] = 0x05AF;\n t['masquare'] = 0x3383;\n t['mbopomofo'] = 0x3107;\n t['mbsquare'] = 0x33D4;\n t['mcircle'] = 0x24DC;\n t['mcubedsquare'] = 0x33A5;\n t['mdotaccent'] = 0x1E41;\n t['mdotbelow'] = 0x1E43;\n t['meemarabic'] = 0x0645;\n t['meemfinalarabic'] = 0xFEE2;\n t['meeminitialarabic'] = 0xFEE3;\n t['meemmedialarabic'] = 0xFEE4;\n t['meemmeeminitialarabic'] = 0xFCD1;\n t['meemmeemisolatedarabic'] = 0xFC48;\n t['meetorusquare'] = 0x334D;\n t['mehiragana'] = 0x3081;\n t['meizierasquare'] = 0x337E;\n t['mekatakana'] = 0x30E1;\n t['mekatakanahalfwidth'] = 0xFF92;\n t['mem'] = 0x05DE;\n t['memdagesh'] = 0xFB3E;\n t['memdageshhebrew'] = 0xFB3E;\n t['memhebrew'] = 0x05DE;\n t['menarmenian'] = 0x0574;\n t['merkhahebrew'] = 0x05A5;\n t['merkhakefulahebrew'] = 0x05A6;\n t['merkhakefulalefthebrew'] = 0x05A6;\n t['merkhalefthebrew'] = 0x05A5;\n t['mhook'] = 0x0271;\n t['mhzsquare'] = 0x3392;\n t['middledotkatakanahalfwidth'] = 0xFF65;\n t['middot'] = 0x00B7;\n t['mieumacirclekorean'] = 0x3272;\n t['mieumaparenkorean'] = 0x3212;\n t['mieumcirclekorean'] = 0x3264;\n t['mieumkorean'] = 0x3141;\n t['mieumpansioskorean'] = 0x3170;\n t['mieumparenkorean'] = 0x3204;\n t['mieumpieupkorean'] = 0x316E;\n t['mieumsioskorean'] = 0x316F;\n t['mihiragana'] = 0x307F;\n t['mikatakana'] = 0x30DF;\n t['mikatakanahalfwidth'] = 0xFF90;\n t['minus'] = 0x2212;\n t['minusbelowcmb'] = 0x0320;\n t['minuscircle'] = 0x2296;\n t['minusmod'] = 0x02D7;\n t['minusplus'] = 0x2213;\n t['minute'] = 0x2032;\n t['miribaarusquare'] = 0x334A;\n t['mirisquare'] = 0x3349;\n t['mlonglegturned'] = 0x0270;\n t['mlsquare'] = 0x3396;\n t['mmcubedsquare'] = 0x33A3;\n t['mmonospace'] = 0xFF4D;\n t['mmsquaredsquare'] = 0x339F;\n t['mohiragana'] = 0x3082;\n t['mohmsquare'] = 0x33C1;\n t['mokatakana'] = 0x30E2;\n t['mokatakanahalfwidth'] = 0xFF93;\n t['molsquare'] = 0x33D6;\n t['momathai'] = 0x0E21;\n t['moverssquare'] = 0x33A7;\n t['moverssquaredsquare'] = 0x33A8;\n t['mparen'] = 0x24A8;\n t['mpasquare'] = 0x33AB;\n t['mssquare'] = 0x33B3;\n t['msuperior'] = 0xF6EF;\n t['mturned'] = 0x026F;\n t['mu'] = 0x00B5;\n t['mu1'] = 0x00B5;\n t['muasquare'] = 0x3382;\n t['muchgreater'] = 0x226B;\n t['muchless'] = 0x226A;\n t['mufsquare'] = 0x338C;\n t['mugreek'] = 0x03BC;\n t['mugsquare'] = 0x338D;\n t['muhiragana'] = 0x3080;\n t['mukatakana'] = 0x30E0;\n t['mukatakanahalfwidth'] = 0xFF91;\n t['mulsquare'] = 0x3395;\n t['multiply'] = 0x00D7;\n t['mumsquare'] = 0x339B;\n t['munahhebrew'] = 0x05A3;\n t['munahlefthebrew'] = 0x05A3;\n t['musicalnote'] = 0x266A;\n t['musicalnotedbl'] = 0x266B;\n t['musicflatsign'] = 0x266D;\n t['musicsharpsign'] = 0x266F;\n t['mussquare'] = 0x33B2;\n t['muvsquare'] = 0x33B6;\n t['muwsquare'] = 0x33BC;\n t['mvmegasquare'] = 0x33B9;\n t['mvsquare'] = 0x33B7;\n t['mwmegasquare'] = 0x33BF;\n t['mwsquare'] = 0x33BD;\n t['n'] = 0x006E;\n t['nabengali'] = 0x09A8;\n t['nabla'] = 0x2207;\n t['nacute'] = 0x0144;\n t['nadeva'] = 0x0928;\n t['nagujarati'] = 0x0AA8;\n t['nagurmukhi'] = 0x0A28;\n t['nahiragana'] = 0x306A;\n t['nakatakana'] = 0x30CA;\n t['nakatakanahalfwidth'] = 0xFF85;\n t['napostrophe'] = 0x0149;\n t['nasquare'] = 0x3381;\n t['nbopomofo'] = 0x310B;\n t['nbspace'] = 0x00A0;\n t['ncaron'] = 0x0148;\n t['ncedilla'] = 0x0146;\n t['ncircle'] = 0x24DD;\n t['ncircumflexbelow'] = 0x1E4B;\n t['ncommaaccent'] = 0x0146;\n t['ndotaccent'] = 0x1E45;\n t['ndotbelow'] = 0x1E47;\n t['nehiragana'] = 0x306D;\n t['nekatakana'] = 0x30CD;\n t['nekatakanahalfwidth'] = 0xFF88;\n t['newsheqelsign'] = 0x20AA;\n t['nfsquare'] = 0x338B;\n t['ngabengali'] = 0x0999;\n t['ngadeva'] = 0x0919;\n t['ngagujarati'] = 0x0A99;\n t['ngagurmukhi'] = 0x0A19;\n t['ngonguthai'] = 0x0E07;\n t['nhiragana'] = 0x3093;\n t['nhookleft'] = 0x0272;\n t['nhookretroflex'] = 0x0273;\n t['nieunacirclekorean'] = 0x326F;\n t['nieunaparenkorean'] = 0x320F;\n t['nieuncieuckorean'] = 0x3135;\n t['nieuncirclekorean'] = 0x3261;\n t['nieunhieuhkorean'] = 0x3136;\n t['nieunkorean'] = 0x3134;\n t['nieunpansioskorean'] = 0x3168;\n t['nieunparenkorean'] = 0x3201;\n t['nieunsioskorean'] = 0x3167;\n t['nieuntikeutkorean'] = 0x3166;\n t['nihiragana'] = 0x306B;\n t['nikatakana'] = 0x30CB;\n t['nikatakanahalfwidth'] = 0xFF86;\n t['nikhahitleftthai'] = 0xF899;\n t['nikhahitthai'] = 0x0E4D;\n t['nine'] = 0x0039;\n t['ninearabic'] = 0x0669;\n t['ninebengali'] = 0x09EF;\n t['ninecircle'] = 0x2468;\n t['ninecircleinversesansserif'] = 0x2792;\n t['ninedeva'] = 0x096F;\n t['ninegujarati'] = 0x0AEF;\n t['ninegurmukhi'] = 0x0A6F;\n t['ninehackarabic'] = 0x0669;\n t['ninehangzhou'] = 0x3029;\n t['nineideographicparen'] = 0x3228;\n t['nineinferior'] = 0x2089;\n t['ninemonospace'] = 0xFF19;\n t['nineoldstyle'] = 0xF739;\n t['nineparen'] = 0x247C;\n t['nineperiod'] = 0x2490;\n t['ninepersian'] = 0x06F9;\n t['nineroman'] = 0x2178;\n t['ninesuperior'] = 0x2079;\n t['nineteencircle'] = 0x2472;\n t['nineteenparen'] = 0x2486;\n t['nineteenperiod'] = 0x249A;\n t['ninethai'] = 0x0E59;\n t['nj'] = 0x01CC;\n t['njecyrillic'] = 0x045A;\n t['nkatakana'] = 0x30F3;\n t['nkatakanahalfwidth'] = 0xFF9D;\n t['nlegrightlong'] = 0x019E;\n t['nlinebelow'] = 0x1E49;\n t['nmonospace'] = 0xFF4E;\n t['nmsquare'] = 0x339A;\n t['nnabengali'] = 0x09A3;\n t['nnadeva'] = 0x0923;\n t['nnagujarati'] = 0x0AA3;\n t['nnagurmukhi'] = 0x0A23;\n t['nnnadeva'] = 0x0929;\n t['nohiragana'] = 0x306E;\n t['nokatakana'] = 0x30CE;\n t['nokatakanahalfwidth'] = 0xFF89;\n t['nonbreakingspace'] = 0x00A0;\n t['nonenthai'] = 0x0E13;\n t['nonuthai'] = 0x0E19;\n t['noonarabic'] = 0x0646;\n t['noonfinalarabic'] = 0xFEE6;\n t['noonghunnaarabic'] = 0x06BA;\n t['noonghunnafinalarabic'] = 0xFB9F;\n t['nooninitialarabic'] = 0xFEE7;\n t['noonjeeminitialarabic'] = 0xFCD2;\n t['noonjeemisolatedarabic'] = 0xFC4B;\n t['noonmedialarabic'] = 0xFEE8;\n t['noonmeeminitialarabic'] = 0xFCD5;\n t['noonmeemisolatedarabic'] = 0xFC4E;\n t['noonnoonfinalarabic'] = 0xFC8D;\n t['notcontains'] = 0x220C;\n t['notelement'] = 0x2209;\n t['notelementof'] = 0x2209;\n t['notequal'] = 0x2260;\n t['notgreater'] = 0x226F;\n t['notgreaternorequal'] = 0x2271;\n t['notgreaternorless'] = 0x2279;\n t['notidentical'] = 0x2262;\n t['notless'] = 0x226E;\n t['notlessnorequal'] = 0x2270;\n t['notparallel'] = 0x2226;\n t['notprecedes'] = 0x2280;\n t['notsubset'] = 0x2284;\n t['notsucceeds'] = 0x2281;\n t['notsuperset'] = 0x2285;\n t['nowarmenian'] = 0x0576;\n t['nparen'] = 0x24A9;\n t['nssquare'] = 0x33B1;\n t['nsuperior'] = 0x207F;\n t['ntilde'] = 0x00F1;\n t['nu'] = 0x03BD;\n t['nuhiragana'] = 0x306C;\n t['nukatakana'] = 0x30CC;\n t['nukatakanahalfwidth'] = 0xFF87;\n t['nuktabengali'] = 0x09BC;\n t['nuktadeva'] = 0x093C;\n t['nuktagujarati'] = 0x0ABC;\n t['nuktagurmukhi'] = 0x0A3C;\n t['numbersign'] = 0x0023;\n t['numbersignmonospace'] = 0xFF03;\n t['numbersignsmall'] = 0xFE5F;\n t['numeralsigngreek'] = 0x0374;\n t['numeralsignlowergreek'] = 0x0375;\n t['numero'] = 0x2116;\n t['nun'] = 0x05E0;\n t['nundagesh'] = 0xFB40;\n t['nundageshhebrew'] = 0xFB40;\n t['nunhebrew'] = 0x05E0;\n t['nvsquare'] = 0x33B5;\n t['nwsquare'] = 0x33BB;\n t['nyabengali'] = 0x099E;\n t['nyadeva'] = 0x091E;\n t['nyagujarati'] = 0x0A9E;\n t['nyagurmukhi'] = 0x0A1E;\n t['o'] = 0x006F;\n t['oacute'] = 0x00F3;\n t['oangthai'] = 0x0E2D;\n t['obarred'] = 0x0275;\n t['obarredcyrillic'] = 0x04E9;\n t['obarreddieresiscyrillic'] = 0x04EB;\n t['obengali'] = 0x0993;\n t['obopomofo'] = 0x311B;\n t['obreve'] = 0x014F;\n t['ocandradeva'] = 0x0911;\n t['ocandragujarati'] = 0x0A91;\n t['ocandravowelsigndeva'] = 0x0949;\n t['ocandravowelsigngujarati'] = 0x0AC9;\n t['ocaron'] = 0x01D2;\n t['ocircle'] = 0x24DE;\n t['ocircumflex'] = 0x00F4;\n t['ocircumflexacute'] = 0x1ED1;\n t['ocircumflexdotbelow'] = 0x1ED9;\n t['ocircumflexgrave'] = 0x1ED3;\n t['ocircumflexhookabove'] = 0x1ED5;\n t['ocircumflextilde'] = 0x1ED7;\n t['ocyrillic'] = 0x043E;\n t['odblacute'] = 0x0151;\n t['odblgrave'] = 0x020D;\n t['odeva'] = 0x0913;\n t['odieresis'] = 0x00F6;\n t['odieresiscyrillic'] = 0x04E7;\n t['odotbelow'] = 0x1ECD;\n t['oe'] = 0x0153;\n t['oekorean'] = 0x315A;\n t['ogonek'] = 0x02DB;\n t['ogonekcmb'] = 0x0328;\n t['ograve'] = 0x00F2;\n t['ogujarati'] = 0x0A93;\n t['oharmenian'] = 0x0585;\n t['ohiragana'] = 0x304A;\n t['ohookabove'] = 0x1ECF;\n t['ohorn'] = 0x01A1;\n t['ohornacute'] = 0x1EDB;\n t['ohorndotbelow'] = 0x1EE3;\n t['ohorngrave'] = 0x1EDD;\n t['ohornhookabove'] = 0x1EDF;\n t['ohorntilde'] = 0x1EE1;\n t['ohungarumlaut'] = 0x0151;\n t['oi'] = 0x01A3;\n t['oinvertedbreve'] = 0x020F;\n t['okatakana'] = 0x30AA;\n t['okatakanahalfwidth'] = 0xFF75;\n t['okorean'] = 0x3157;\n t['olehebrew'] = 0x05AB;\n t['omacron'] = 0x014D;\n t['omacronacute'] = 0x1E53;\n t['omacrongrave'] = 0x1E51;\n t['omdeva'] = 0x0950;\n t['omega'] = 0x03C9;\n t['omega1'] = 0x03D6;\n t['omegacyrillic'] = 0x0461;\n t['omegalatinclosed'] = 0x0277;\n t['omegaroundcyrillic'] = 0x047B;\n t['omegatitlocyrillic'] = 0x047D;\n t['omegatonos'] = 0x03CE;\n t['omgujarati'] = 0x0AD0;\n t['omicron'] = 0x03BF;\n t['omicrontonos'] = 0x03CC;\n t['omonospace'] = 0xFF4F;\n t['one'] = 0x0031;\n t['onearabic'] = 0x0661;\n t['onebengali'] = 0x09E7;\n t['onecircle'] = 0x2460;\n t['onecircleinversesansserif'] = 0x278A;\n t['onedeva'] = 0x0967;\n t['onedotenleader'] = 0x2024;\n t['oneeighth'] = 0x215B;\n t['onefitted'] = 0xF6DC;\n t['onegujarati'] = 0x0AE7;\n t['onegurmukhi'] = 0x0A67;\n t['onehackarabic'] = 0x0661;\n t['onehalf'] = 0x00BD;\n t['onehangzhou'] = 0x3021;\n t['oneideographicparen'] = 0x3220;\n t['oneinferior'] = 0x2081;\n t['onemonospace'] = 0xFF11;\n t['onenumeratorbengali'] = 0x09F4;\n t['oneoldstyle'] = 0xF731;\n t['oneparen'] = 0x2474;\n t['oneperiod'] = 0x2488;\n t['onepersian'] = 0x06F1;\n t['onequarter'] = 0x00BC;\n t['oneroman'] = 0x2170;\n t['onesuperior'] = 0x00B9;\n t['onethai'] = 0x0E51;\n t['onethird'] = 0x2153;\n t['oogonek'] = 0x01EB;\n t['oogonekmacron'] = 0x01ED;\n t['oogurmukhi'] = 0x0A13;\n t['oomatragurmukhi'] = 0x0A4B;\n t['oopen'] = 0x0254;\n t['oparen'] = 0x24AA;\n t['openbullet'] = 0x25E6;\n t['option'] = 0x2325;\n t['ordfeminine'] = 0x00AA;\n t['ordmasculine'] = 0x00BA;\n t['orthogonal'] = 0x221F;\n t['oshortdeva'] = 0x0912;\n t['oshortvowelsigndeva'] = 0x094A;\n t['oslash'] = 0x00F8;\n t['oslashacute'] = 0x01FF;\n t['osmallhiragana'] = 0x3049;\n t['osmallkatakana'] = 0x30A9;\n t['osmallkatakanahalfwidth'] = 0xFF6B;\n t['ostrokeacute'] = 0x01FF;\n t['osuperior'] = 0xF6F0;\n t['otcyrillic'] = 0x047F;\n t['otilde'] = 0x00F5;\n t['otildeacute'] = 0x1E4D;\n t['otildedieresis'] = 0x1E4F;\n t['oubopomofo'] = 0x3121;\n t['overline'] = 0x203E;\n t['overlinecenterline'] = 0xFE4A;\n t['overlinecmb'] = 0x0305;\n t['overlinedashed'] = 0xFE49;\n t['overlinedblwavy'] = 0xFE4C;\n t['overlinewavy'] = 0xFE4B;\n t['overscore'] = 0x00AF;\n t['ovowelsignbengali'] = 0x09CB;\n t['ovowelsigndeva'] = 0x094B;\n t['ovowelsigngujarati'] = 0x0ACB;\n t['p'] = 0x0070;\n t['paampssquare'] = 0x3380;\n t['paasentosquare'] = 0x332B;\n t['pabengali'] = 0x09AA;\n t['pacute'] = 0x1E55;\n t['padeva'] = 0x092A;\n t['pagedown'] = 0x21DF;\n t['pageup'] = 0x21DE;\n t['pagujarati'] = 0x0AAA;\n t['pagurmukhi'] = 0x0A2A;\n t['pahiragana'] = 0x3071;\n t['paiyannoithai'] = 0x0E2F;\n t['pakatakana'] = 0x30D1;\n t['palatalizationcyrilliccmb'] = 0x0484;\n t['palochkacyrillic'] = 0x04C0;\n t['pansioskorean'] = 0x317F;\n t['paragraph'] = 0x00B6;\n t['parallel'] = 0x2225;\n t['parenleft'] = 0x0028;\n t['parenleftaltonearabic'] = 0xFD3E;\n t['parenleftbt'] = 0xF8ED;\n t['parenleftex'] = 0xF8EC;\n t['parenleftinferior'] = 0x208D;\n t['parenleftmonospace'] = 0xFF08;\n t['parenleftsmall'] = 0xFE59;\n t['parenleftsuperior'] = 0x207D;\n t['parenlefttp'] = 0xF8EB;\n t['parenleftvertical'] = 0xFE35;\n t['parenright'] = 0x0029;\n t['parenrightaltonearabic'] = 0xFD3F;\n t['parenrightbt'] = 0xF8F8;\n t['parenrightex'] = 0xF8F7;\n t['parenrightinferior'] = 0x208E;\n t['parenrightmonospace'] = 0xFF09;\n t['parenrightsmall'] = 0xFE5A;\n t['parenrightsuperior'] = 0x207E;\n t['parenrighttp'] = 0xF8F6;\n t['parenrightvertical'] = 0xFE36;\n t['partialdiff'] = 0x2202;\n t['paseqhebrew'] = 0x05C0;\n t['pashtahebrew'] = 0x0599;\n t['pasquare'] = 0x33A9;\n t['patah'] = 0x05B7;\n t['patah11'] = 0x05B7;\n t['patah1d'] = 0x05B7;\n t['patah2a'] = 0x05B7;\n t['patahhebrew'] = 0x05B7;\n t['patahnarrowhebrew'] = 0x05B7;\n t['patahquarterhebrew'] = 0x05B7;\n t['patahwidehebrew'] = 0x05B7;\n t['pazerhebrew'] = 0x05A1;\n t['pbopomofo'] = 0x3106;\n t['pcircle'] = 0x24DF;\n t['pdotaccent'] = 0x1E57;\n t['pe'] = 0x05E4;\n t['pecyrillic'] = 0x043F;\n t['pedagesh'] = 0xFB44;\n t['pedageshhebrew'] = 0xFB44;\n t['peezisquare'] = 0x333B;\n t['pefinaldageshhebrew'] = 0xFB43;\n t['peharabic'] = 0x067E;\n t['peharmenian'] = 0x057A;\n t['pehebrew'] = 0x05E4;\n t['pehfinalarabic'] = 0xFB57;\n t['pehinitialarabic'] = 0xFB58;\n t['pehiragana'] = 0x307A;\n t['pehmedialarabic'] = 0xFB59;\n t['pekatakana'] = 0x30DA;\n t['pemiddlehookcyrillic'] = 0x04A7;\n t['perafehebrew'] = 0xFB4E;\n t['percent'] = 0x0025;\n t['percentarabic'] = 0x066A;\n t['percentmonospace'] = 0xFF05;\n t['percentsmall'] = 0xFE6A;\n t['period'] = 0x002E;\n t['periodarmenian'] = 0x0589;\n t['periodcentered'] = 0x00B7;\n t['periodhalfwidth'] = 0xFF61;\n t['periodinferior'] = 0xF6E7;\n t['periodmonospace'] = 0xFF0E;\n t['periodsmall'] = 0xFE52;\n t['periodsuperior'] = 0xF6E8;\n t['perispomenigreekcmb'] = 0x0342;\n t['perpendicular'] = 0x22A5;\n t['perthousand'] = 0x2030;\n t['peseta'] = 0x20A7;\n t['pfsquare'] = 0x338A;\n t['phabengali'] = 0x09AB;\n t['phadeva'] = 0x092B;\n t['phagujarati'] = 0x0AAB;\n t['phagurmukhi'] = 0x0A2B;\n t['phi'] = 0x03C6;\n t['phi1'] = 0x03D5;\n t['phieuphacirclekorean'] = 0x327A;\n t['phieuphaparenkorean'] = 0x321A;\n t['phieuphcirclekorean'] = 0x326C;\n t['phieuphkorean'] = 0x314D;\n t['phieuphparenkorean'] = 0x320C;\n t['philatin'] = 0x0278;\n t['phinthuthai'] = 0x0E3A;\n t['phisymbolgreek'] = 0x03D5;\n t['phook'] = 0x01A5;\n t['phophanthai'] = 0x0E1E;\n t['phophungthai'] = 0x0E1C;\n t['phosamphaothai'] = 0x0E20;\n t['pi'] = 0x03C0;\n t['pieupacirclekorean'] = 0x3273;\n t['pieupaparenkorean'] = 0x3213;\n t['pieupcieuckorean'] = 0x3176;\n t['pieupcirclekorean'] = 0x3265;\n t['pieupkiyeokkorean'] = 0x3172;\n t['pieupkorean'] = 0x3142;\n t['pieupparenkorean'] = 0x3205;\n t['pieupsioskiyeokkorean'] = 0x3174;\n t['pieupsioskorean'] = 0x3144;\n t['pieupsiostikeutkorean'] = 0x3175;\n t['pieupthieuthkorean'] = 0x3177;\n t['pieuptikeutkorean'] = 0x3173;\n t['pihiragana'] = 0x3074;\n t['pikatakana'] = 0x30D4;\n t['pisymbolgreek'] = 0x03D6;\n t['piwrarmenian'] = 0x0583;\n t['plus'] = 0x002B;\n t['plusbelowcmb'] = 0x031F;\n t['pluscircle'] = 0x2295;\n t['plusminus'] = 0x00B1;\n t['plusmod'] = 0x02D6;\n t['plusmonospace'] = 0xFF0B;\n t['plussmall'] = 0xFE62;\n t['plussuperior'] = 0x207A;\n t['pmonospace'] = 0xFF50;\n t['pmsquare'] = 0x33D8;\n t['pohiragana'] = 0x307D;\n t['pointingindexdownwhite'] = 0x261F;\n t['pointingindexleftwhite'] = 0x261C;\n t['pointingindexrightwhite'] = 0x261E;\n t['pointingindexupwhite'] = 0x261D;\n t['pokatakana'] = 0x30DD;\n t['poplathai'] = 0x0E1B;\n t['postalmark'] = 0x3012;\n t['postalmarkface'] = 0x3020;\n t['pparen'] = 0x24AB;\n t['precedes'] = 0x227A;\n t['prescription'] = 0x211E;\n t['primemod'] = 0x02B9;\n t['primereversed'] = 0x2035;\n t['product'] = 0x220F;\n t['projective'] = 0x2305;\n t['prolongedkana'] = 0x30FC;\n t['propellor'] = 0x2318;\n t['propersubset'] = 0x2282;\n t['propersuperset'] = 0x2283;\n t['proportion'] = 0x2237;\n t['proportional'] = 0x221D;\n t['psi'] = 0x03C8;\n t['psicyrillic'] = 0x0471;\n t['psilipneumatacyrilliccmb'] = 0x0486;\n t['pssquare'] = 0x33B0;\n t['puhiragana'] = 0x3077;\n t['pukatakana'] = 0x30D7;\n t['pvsquare'] = 0x33B4;\n t['pwsquare'] = 0x33BA;\n t['q'] = 0x0071;\n t['qadeva'] = 0x0958;\n t['qadmahebrew'] = 0x05A8;\n t['qafarabic'] = 0x0642;\n t['qaffinalarabic'] = 0xFED6;\n t['qafinitialarabic'] = 0xFED7;\n t['qafmedialarabic'] = 0xFED8;\n t['qamats'] = 0x05B8;\n t['qamats10'] = 0x05B8;\n t['qamats1a'] = 0x05B8;\n t['qamats1c'] = 0x05B8;\n t['qamats27'] = 0x05B8;\n t['qamats29'] = 0x05B8;\n t['qamats33'] = 0x05B8;\n t['qamatsde'] = 0x05B8;\n t['qamatshebrew'] = 0x05B8;\n t['qamatsnarrowhebrew'] = 0x05B8;\n t['qamatsqatanhebrew'] = 0x05B8;\n t['qamatsqatannarrowhebrew'] = 0x05B8;\n t['qamatsqatanquarterhebrew'] = 0x05B8;\n t['qamatsqatanwidehebrew'] = 0x05B8;\n t['qamatsquarterhebrew'] = 0x05B8;\n t['qamatswidehebrew'] = 0x05B8;\n t['qarneyparahebrew'] = 0x059F;\n t['qbopomofo'] = 0x3111;\n t['qcircle'] = 0x24E0;\n t['qhook'] = 0x02A0;\n t['qmonospace'] = 0xFF51;\n t['qof'] = 0x05E7;\n t['qofdagesh'] = 0xFB47;\n t['qofdageshhebrew'] = 0xFB47;\n t['qofhebrew'] = 0x05E7;\n t['qparen'] = 0x24AC;\n t['quarternote'] = 0x2669;\n t['qubuts'] = 0x05BB;\n t['qubuts18'] = 0x05BB;\n t['qubuts25'] = 0x05BB;\n t['qubuts31'] = 0x05BB;\n t['qubutshebrew'] = 0x05BB;\n t['qubutsnarrowhebrew'] = 0x05BB;\n t['qubutsquarterhebrew'] = 0x05BB;\n t['qubutswidehebrew'] = 0x05BB;\n t['question'] = 0x003F;\n t['questionarabic'] = 0x061F;\n t['questionarmenian'] = 0x055E;\n t['questiondown'] = 0x00BF;\n t['questiondownsmall'] = 0xF7BF;\n t['questiongreek'] = 0x037E;\n t['questionmonospace'] = 0xFF1F;\n t['questionsmall'] = 0xF73F;\n t['quotedbl'] = 0x0022;\n t['quotedblbase'] = 0x201E;\n t['quotedblleft'] = 0x201C;\n t['quotedblmonospace'] = 0xFF02;\n t['quotedblprime'] = 0x301E;\n t['quotedblprimereversed'] = 0x301D;\n t['quotedblright'] = 0x201D;\n t['quoteleft'] = 0x2018;\n t['quoteleftreversed'] = 0x201B;\n t['quotereversed'] = 0x201B;\n t['quoteright'] = 0x2019;\n t['quoterightn'] = 0x0149;\n t['quotesinglbase'] = 0x201A;\n t['quotesingle'] = 0x0027;\n t['quotesinglemonospace'] = 0xFF07;\n t['r'] = 0x0072;\n t['raarmenian'] = 0x057C;\n t['rabengali'] = 0x09B0;\n t['racute'] = 0x0155;\n t['radeva'] = 0x0930;\n t['radical'] = 0x221A;\n t['radicalex'] = 0xF8E5;\n t['radoverssquare'] = 0x33AE;\n t['radoverssquaredsquare'] = 0x33AF;\n t['radsquare'] = 0x33AD;\n t['rafe'] = 0x05BF;\n t['rafehebrew'] = 0x05BF;\n t['ragujarati'] = 0x0AB0;\n t['ragurmukhi'] = 0x0A30;\n t['rahiragana'] = 0x3089;\n t['rakatakana'] = 0x30E9;\n t['rakatakanahalfwidth'] = 0xFF97;\n t['ralowerdiagonalbengali'] = 0x09F1;\n t['ramiddlediagonalbengali'] = 0x09F0;\n t['ramshorn'] = 0x0264;\n t['ratio'] = 0x2236;\n t['rbopomofo'] = 0x3116;\n t['rcaron'] = 0x0159;\n t['rcedilla'] = 0x0157;\n t['rcircle'] = 0x24E1;\n t['rcommaaccent'] = 0x0157;\n t['rdblgrave'] = 0x0211;\n t['rdotaccent'] = 0x1E59;\n t['rdotbelow'] = 0x1E5B;\n t['rdotbelowmacron'] = 0x1E5D;\n t['referencemark'] = 0x203B;\n t['reflexsubset'] = 0x2286;\n t['reflexsuperset'] = 0x2287;\n t['registered'] = 0x00AE;\n t['registersans'] = 0xF8E8;\n t['registerserif'] = 0xF6DA;\n t['reharabic'] = 0x0631;\n t['reharmenian'] = 0x0580;\n t['rehfinalarabic'] = 0xFEAE;\n t['rehiragana'] = 0x308C;\n t['rekatakana'] = 0x30EC;\n t['rekatakanahalfwidth'] = 0xFF9A;\n t['resh'] = 0x05E8;\n t['reshdageshhebrew'] = 0xFB48;\n t['reshhebrew'] = 0x05E8;\n t['reversedtilde'] = 0x223D;\n t['reviahebrew'] = 0x0597;\n t['reviamugrashhebrew'] = 0x0597;\n t['revlogicalnot'] = 0x2310;\n t['rfishhook'] = 0x027E;\n t['rfishhookreversed'] = 0x027F;\n t['rhabengali'] = 0x09DD;\n t['rhadeva'] = 0x095D;\n t['rho'] = 0x03C1;\n t['rhook'] = 0x027D;\n t['rhookturned'] = 0x027B;\n t['rhookturnedsuperior'] = 0x02B5;\n t['rhosymbolgreek'] = 0x03F1;\n t['rhotichookmod'] = 0x02DE;\n t['rieulacirclekorean'] = 0x3271;\n t['rieulaparenkorean'] = 0x3211;\n t['rieulcirclekorean'] = 0x3263;\n t['rieulhieuhkorean'] = 0x3140;\n t['rieulkiyeokkorean'] = 0x313A;\n t['rieulkiyeoksioskorean'] = 0x3169;\n t['rieulkorean'] = 0x3139;\n t['rieulmieumkorean'] = 0x313B;\n t['rieulpansioskorean'] = 0x316C;\n t['rieulparenkorean'] = 0x3203;\n t['rieulphieuphkorean'] = 0x313F;\n t['rieulpieupkorean'] = 0x313C;\n t['rieulpieupsioskorean'] = 0x316B;\n t['rieulsioskorean'] = 0x313D;\n t['rieulthieuthkorean'] = 0x313E;\n t['rieultikeutkorean'] = 0x316A;\n t['rieulyeorinhieuhkorean'] = 0x316D;\n t['rightangle'] = 0x221F;\n t['righttackbelowcmb'] = 0x0319;\n t['righttriangle'] = 0x22BF;\n t['rihiragana'] = 0x308A;\n t['rikatakana'] = 0x30EA;\n t['rikatakanahalfwidth'] = 0xFF98;\n t['ring'] = 0x02DA;\n t['ringbelowcmb'] = 0x0325;\n t['ringcmb'] = 0x030A;\n t['ringhalfleft'] = 0x02BF;\n t['ringhalfleftarmenian'] = 0x0559;\n t['ringhalfleftbelowcmb'] = 0x031C;\n t['ringhalfleftcentered'] = 0x02D3;\n t['ringhalfright'] = 0x02BE;\n t['ringhalfrightbelowcmb'] = 0x0339;\n t['ringhalfrightcentered'] = 0x02D2;\n t['rinvertedbreve'] = 0x0213;\n t['rittorusquare'] = 0x3351;\n t['rlinebelow'] = 0x1E5F;\n t['rlongleg'] = 0x027C;\n t['rlonglegturned'] = 0x027A;\n t['rmonospace'] = 0xFF52;\n t['rohiragana'] = 0x308D;\n t['rokatakana'] = 0x30ED;\n t['rokatakanahalfwidth'] = 0xFF9B;\n t['roruathai'] = 0x0E23;\n t['rparen'] = 0x24AD;\n t['rrabengali'] = 0x09DC;\n t['rradeva'] = 0x0931;\n t['rragurmukhi'] = 0x0A5C;\n t['rreharabic'] = 0x0691;\n t['rrehfinalarabic'] = 0xFB8D;\n t['rrvocalicbengali'] = 0x09E0;\n t['rrvocalicdeva'] = 0x0960;\n t['rrvocalicgujarati'] = 0x0AE0;\n t['rrvocalicvowelsignbengali'] = 0x09C4;\n t['rrvocalicvowelsigndeva'] = 0x0944;\n t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n t['rsuperior'] = 0xF6F1;\n t['rtblock'] = 0x2590;\n t['rturned'] = 0x0279;\n t['rturnedsuperior'] = 0x02B4;\n t['ruhiragana'] = 0x308B;\n t['rukatakana'] = 0x30EB;\n t['rukatakanahalfwidth'] = 0xFF99;\n t['rupeemarkbengali'] = 0x09F2;\n t['rupeesignbengali'] = 0x09F3;\n t['rupiah'] = 0xF6DD;\n t['ruthai'] = 0x0E24;\n t['rvocalicbengali'] = 0x098B;\n t['rvocalicdeva'] = 0x090B;\n t['rvocalicgujarati'] = 0x0A8B;\n t['rvocalicvowelsignbengali'] = 0x09C3;\n t['rvocalicvowelsigndeva'] = 0x0943;\n t['rvocalicvowelsigngujarati'] = 0x0AC3;\n t['s'] = 0x0073;\n t['sabengali'] = 0x09B8;\n t['sacute'] = 0x015B;\n t['sacutedotaccent'] = 0x1E65;\n t['sadarabic'] = 0x0635;\n t['sadeva'] = 0x0938;\n t['sadfinalarabic'] = 0xFEBA;\n t['sadinitialarabic'] = 0xFEBB;\n t['sadmedialarabic'] = 0xFEBC;\n t['sagujarati'] = 0x0AB8;\n t['sagurmukhi'] = 0x0A38;\n t['sahiragana'] = 0x3055;\n t['sakatakana'] = 0x30B5;\n t['sakatakanahalfwidth'] = 0xFF7B;\n t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n t['samekh'] = 0x05E1;\n t['samekhdagesh'] = 0xFB41;\n t['samekhdageshhebrew'] = 0xFB41;\n t['samekhhebrew'] = 0x05E1;\n t['saraaathai'] = 0x0E32;\n t['saraaethai'] = 0x0E41;\n t['saraaimaimalaithai'] = 0x0E44;\n t['saraaimaimuanthai'] = 0x0E43;\n t['saraamthai'] = 0x0E33;\n t['saraathai'] = 0x0E30;\n t['saraethai'] = 0x0E40;\n t['saraiileftthai'] = 0xF886;\n t['saraiithai'] = 0x0E35;\n t['saraileftthai'] = 0xF885;\n t['saraithai'] = 0x0E34;\n t['saraothai'] = 0x0E42;\n t['saraueeleftthai'] = 0xF888;\n t['saraueethai'] = 0x0E37;\n t['saraueleftthai'] = 0xF887;\n t['sarauethai'] = 0x0E36;\n t['sarauthai'] = 0x0E38;\n t['sarauuthai'] = 0x0E39;\n t['sbopomofo'] = 0x3119;\n t['scaron'] = 0x0161;\n t['scarondotaccent'] = 0x1E67;\n t['scedilla'] = 0x015F;\n t['schwa'] = 0x0259;\n t['schwacyrillic'] = 0x04D9;\n t['schwadieresiscyrillic'] = 0x04DB;\n t['schwahook'] = 0x025A;\n t['scircle'] = 0x24E2;\n t['scircumflex'] = 0x015D;\n t['scommaaccent'] = 0x0219;\n t['sdotaccent'] = 0x1E61;\n t['sdotbelow'] = 0x1E63;\n t['sdotbelowdotaccent'] = 0x1E69;\n t['seagullbelowcmb'] = 0x033C;\n t['second'] = 0x2033;\n t['secondtonechinese'] = 0x02CA;\n t['section'] = 0x00A7;\n t['seenarabic'] = 0x0633;\n t['seenfinalarabic'] = 0xFEB2;\n t['seeninitialarabic'] = 0xFEB3;\n t['seenmedialarabic'] = 0xFEB4;\n t['segol'] = 0x05B6;\n t['segol13'] = 0x05B6;\n t['segol1f'] = 0x05B6;\n t['segol2c'] = 0x05B6;\n t['segolhebrew'] = 0x05B6;\n t['segolnarrowhebrew'] = 0x05B6;\n t['segolquarterhebrew'] = 0x05B6;\n t['segoltahebrew'] = 0x0592;\n t['segolwidehebrew'] = 0x05B6;\n t['seharmenian'] = 0x057D;\n t['sehiragana'] = 0x305B;\n t['sekatakana'] = 0x30BB;\n t['sekatakanahalfwidth'] = 0xFF7E;\n t['semicolon'] = 0x003B;\n t['semicolonarabic'] = 0x061B;\n t['semicolonmonospace'] = 0xFF1B;\n t['semicolonsmall'] = 0xFE54;\n t['semivoicedmarkkana'] = 0x309C;\n t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n t['sentisquare'] = 0x3322;\n t['sentosquare'] = 0x3323;\n t['seven'] = 0x0037;\n t['sevenarabic'] = 0x0667;\n t['sevenbengali'] = 0x09ED;\n t['sevencircle'] = 0x2466;\n t['sevencircleinversesansserif'] = 0x2790;\n t['sevendeva'] = 0x096D;\n t['seveneighths'] = 0x215E;\n t['sevengujarati'] = 0x0AED;\n t['sevengurmukhi'] = 0x0A6D;\n t['sevenhackarabic'] = 0x0667;\n t['sevenhangzhou'] = 0x3027;\n t['sevenideographicparen'] = 0x3226;\n t['seveninferior'] = 0x2087;\n t['sevenmonospace'] = 0xFF17;\n t['sevenoldstyle'] = 0xF737;\n t['sevenparen'] = 0x247A;\n t['sevenperiod'] = 0x248E;\n t['sevenpersian'] = 0x06F7;\n t['sevenroman'] = 0x2176;\n t['sevensuperior'] = 0x2077;\n t['seventeencircle'] = 0x2470;\n t['seventeenparen'] = 0x2484;\n t['seventeenperiod'] = 0x2498;\n t['seventhai'] = 0x0E57;\n t['sfthyphen'] = 0x00AD;\n t['shaarmenian'] = 0x0577;\n t['shabengali'] = 0x09B6;\n t['shacyrillic'] = 0x0448;\n t['shaddaarabic'] = 0x0651;\n t['shaddadammaarabic'] = 0xFC61;\n t['shaddadammatanarabic'] = 0xFC5E;\n t['shaddafathaarabic'] = 0xFC60;\n t['shaddakasraarabic'] = 0xFC62;\n t['shaddakasratanarabic'] = 0xFC5F;\n t['shade'] = 0x2592;\n t['shadedark'] = 0x2593;\n t['shadelight'] = 0x2591;\n t['shademedium'] = 0x2592;\n t['shadeva'] = 0x0936;\n t['shagujarati'] = 0x0AB6;\n t['shagurmukhi'] = 0x0A36;\n t['shalshelethebrew'] = 0x0593;\n t['shbopomofo'] = 0x3115;\n t['shchacyrillic'] = 0x0449;\n t['sheenarabic'] = 0x0634;\n t['sheenfinalarabic'] = 0xFEB6;\n t['sheeninitialarabic'] = 0xFEB7;\n t['sheenmedialarabic'] = 0xFEB8;\n t['sheicoptic'] = 0x03E3;\n t['sheqel'] = 0x20AA;\n t['sheqelhebrew'] = 0x20AA;\n t['sheva'] = 0x05B0;\n t['sheva115'] = 0x05B0;\n t['sheva15'] = 0x05B0;\n t['sheva22'] = 0x05B0;\n t['sheva2e'] = 0x05B0;\n t['shevahebrew'] = 0x05B0;\n t['shevanarrowhebrew'] = 0x05B0;\n t['shevaquarterhebrew'] = 0x05B0;\n t['shevawidehebrew'] = 0x05B0;\n t['shhacyrillic'] = 0x04BB;\n t['shimacoptic'] = 0x03ED;\n t['shin'] = 0x05E9;\n t['shindagesh'] = 0xFB49;\n t['shindageshhebrew'] = 0xFB49;\n t['shindageshshindot'] = 0xFB2C;\n t['shindageshshindothebrew'] = 0xFB2C;\n t['shindageshsindot'] = 0xFB2D;\n t['shindageshsindothebrew'] = 0xFB2D;\n t['shindothebrew'] = 0x05C1;\n t['shinhebrew'] = 0x05E9;\n t['shinshindot'] = 0xFB2A;\n t['shinshindothebrew'] = 0xFB2A;\n t['shinsindot'] = 0xFB2B;\n t['shinsindothebrew'] = 0xFB2B;\n t['shook'] = 0x0282;\n t['sigma'] = 0x03C3;\n t['sigma1'] = 0x03C2;\n t['sigmafinal'] = 0x03C2;\n t['sigmalunatesymbolgreek'] = 0x03F2;\n t['sihiragana'] = 0x3057;\n t['sikatakana'] = 0x30B7;\n t['sikatakanahalfwidth'] = 0xFF7C;\n t['siluqhebrew'] = 0x05BD;\n t['siluqlefthebrew'] = 0x05BD;\n t['similar'] = 0x223C;\n t['sindothebrew'] = 0x05C2;\n t['siosacirclekorean'] = 0x3274;\n t['siosaparenkorean'] = 0x3214;\n t['sioscieuckorean'] = 0x317E;\n t['sioscirclekorean'] = 0x3266;\n t['sioskiyeokkorean'] = 0x317A;\n t['sioskorean'] = 0x3145;\n t['siosnieunkorean'] = 0x317B;\n t['siosparenkorean'] = 0x3206;\n t['siospieupkorean'] = 0x317D;\n t['siostikeutkorean'] = 0x317C;\n t['six'] = 0x0036;\n t['sixarabic'] = 0x0666;\n t['sixbengali'] = 0x09EC;\n t['sixcircle'] = 0x2465;\n t['sixcircleinversesansserif'] = 0x278F;\n t['sixdeva'] = 0x096C;\n t['sixgujarati'] = 0x0AEC;\n t['sixgurmukhi'] = 0x0A6C;\n t['sixhackarabic'] = 0x0666;\n t['sixhangzhou'] = 0x3026;\n t['sixideographicparen'] = 0x3225;\n t['sixinferior'] = 0x2086;\n t['sixmonospace'] = 0xFF16;\n t['sixoldstyle'] = 0xF736;\n t['sixparen'] = 0x2479;\n t['sixperiod'] = 0x248D;\n t['sixpersian'] = 0x06F6;\n t['sixroman'] = 0x2175;\n t['sixsuperior'] = 0x2076;\n t['sixteencircle'] = 0x246F;\n t['sixteencurrencydenominatorbengali'] = 0x09F9;\n t['sixteenparen'] = 0x2483;\n t['sixteenperiod'] = 0x2497;\n t['sixthai'] = 0x0E56;\n t['slash'] = 0x002F;\n t['slashmonospace'] = 0xFF0F;\n t['slong'] = 0x017F;\n t['slongdotaccent'] = 0x1E9B;\n t['smileface'] = 0x263A;\n t['smonospace'] = 0xFF53;\n t['sofpasuqhebrew'] = 0x05C3;\n t['softhyphen'] = 0x00AD;\n t['softsigncyrillic'] = 0x044C;\n t['sohiragana'] = 0x305D;\n t['sokatakana'] = 0x30BD;\n t['sokatakanahalfwidth'] = 0xFF7F;\n t['soliduslongoverlaycmb'] = 0x0338;\n t['solidusshortoverlaycmb'] = 0x0337;\n t['sorusithai'] = 0x0E29;\n t['sosalathai'] = 0x0E28;\n t['sosothai'] = 0x0E0B;\n t['sosuathai'] = 0x0E2A;\n t['space'] = 0x0020;\n t['spacehackarabic'] = 0x0020;\n t['spade'] = 0x2660;\n t['spadesuitblack'] = 0x2660;\n t['spadesuitwhite'] = 0x2664;\n t['sparen'] = 0x24AE;\n t['squarebelowcmb'] = 0x033B;\n t['squarecc'] = 0x33C4;\n t['squarecm'] = 0x339D;\n t['squarediagonalcrosshatchfill'] = 0x25A9;\n t['squarehorizontalfill'] = 0x25A4;\n t['squarekg'] = 0x338F;\n t['squarekm'] = 0x339E;\n t['squarekmcapital'] = 0x33CE;\n t['squareln'] = 0x33D1;\n t['squarelog'] = 0x33D2;\n t['squaremg'] = 0x338E;\n t['squaremil'] = 0x33D5;\n t['squaremm'] = 0x339C;\n t['squaremsquared'] = 0x33A1;\n t['squareorthogonalcrosshatchfill'] = 0x25A6;\n t['squareupperlefttolowerrightfill'] = 0x25A7;\n t['squareupperrighttolowerleftfill'] = 0x25A8;\n t['squareverticalfill'] = 0x25A5;\n t['squarewhitewithsmallblack'] = 0x25A3;\n t['srsquare'] = 0x33DB;\n t['ssabengali'] = 0x09B7;\n t['ssadeva'] = 0x0937;\n t['ssagujarati'] = 0x0AB7;\n t['ssangcieuckorean'] = 0x3149;\n t['ssanghieuhkorean'] = 0x3185;\n t['ssangieungkorean'] = 0x3180;\n t['ssangkiyeokkorean'] = 0x3132;\n t['ssangnieunkorean'] = 0x3165;\n t['ssangpieupkorean'] = 0x3143;\n t['ssangsioskorean'] = 0x3146;\n t['ssangtikeutkorean'] = 0x3138;\n t['ssuperior'] = 0xF6F2;\n t['sterling'] = 0x00A3;\n t['sterlingmonospace'] = 0xFFE1;\n t['strokelongoverlaycmb'] = 0x0336;\n t['strokeshortoverlaycmb'] = 0x0335;\n t['subset'] = 0x2282;\n t['subsetnotequal'] = 0x228A;\n t['subsetorequal'] = 0x2286;\n t['succeeds'] = 0x227B;\n t['suchthat'] = 0x220B;\n t['suhiragana'] = 0x3059;\n t['sukatakana'] = 0x30B9;\n t['sukatakanahalfwidth'] = 0xFF7D;\n t['sukunarabic'] = 0x0652;\n t['summation'] = 0x2211;\n t['sun'] = 0x263C;\n t['superset'] = 0x2283;\n t['supersetnotequal'] = 0x228B;\n t['supersetorequal'] = 0x2287;\n t['svsquare'] = 0x33DC;\n t['syouwaerasquare'] = 0x337C;\n t['t'] = 0x0074;\n t['tabengali'] = 0x09A4;\n t['tackdown'] = 0x22A4;\n t['tackleft'] = 0x22A3;\n t['tadeva'] = 0x0924;\n t['tagujarati'] = 0x0AA4;\n t['tagurmukhi'] = 0x0A24;\n t['taharabic'] = 0x0637;\n t['tahfinalarabic'] = 0xFEC2;\n t['tahinitialarabic'] = 0xFEC3;\n t['tahiragana'] = 0x305F;\n t['tahmedialarabic'] = 0xFEC4;\n t['taisyouerasquare'] = 0x337D;\n t['takatakana'] = 0x30BF;\n t['takatakanahalfwidth'] = 0xFF80;\n t['tatweelarabic'] = 0x0640;\n t['tau'] = 0x03C4;\n t['tav'] = 0x05EA;\n t['tavdages'] = 0xFB4A;\n t['tavdagesh'] = 0xFB4A;\n t['tavdageshhebrew'] = 0xFB4A;\n t['tavhebrew'] = 0x05EA;\n t['tbar'] = 0x0167;\n t['tbopomofo'] = 0x310A;\n t['tcaron'] = 0x0165;\n t['tccurl'] = 0x02A8;\n t['tcedilla'] = 0x0163;\n t['tcheharabic'] = 0x0686;\n t['tchehfinalarabic'] = 0xFB7B;\n t['tchehinitialarabic'] = 0xFB7C;\n t['tchehmedialarabic'] = 0xFB7D;\n t['tcircle'] = 0x24E3;\n t['tcircumflexbelow'] = 0x1E71;\n t['tcommaaccent'] = 0x0163;\n t['tdieresis'] = 0x1E97;\n t['tdotaccent'] = 0x1E6B;\n t['tdotbelow'] = 0x1E6D;\n t['tecyrillic'] = 0x0442;\n t['tedescendercyrillic'] = 0x04AD;\n t['teharabic'] = 0x062A;\n t['tehfinalarabic'] = 0xFE96;\n t['tehhahinitialarabic'] = 0xFCA2;\n t['tehhahisolatedarabic'] = 0xFC0C;\n t['tehinitialarabic'] = 0xFE97;\n t['tehiragana'] = 0x3066;\n t['tehjeeminitialarabic'] = 0xFCA1;\n t['tehjeemisolatedarabic'] = 0xFC0B;\n t['tehmarbutaarabic'] = 0x0629;\n t['tehmarbutafinalarabic'] = 0xFE94;\n t['tehmedialarabic'] = 0xFE98;\n t['tehmeeminitialarabic'] = 0xFCA4;\n t['tehmeemisolatedarabic'] = 0xFC0E;\n t['tehnoonfinalarabic'] = 0xFC73;\n t['tekatakana'] = 0x30C6;\n t['tekatakanahalfwidth'] = 0xFF83;\n t['telephone'] = 0x2121;\n t['telephoneblack'] = 0x260E;\n t['telishagedolahebrew'] = 0x05A0;\n t['telishaqetanahebrew'] = 0x05A9;\n t['tencircle'] = 0x2469;\n t['tenideographicparen'] = 0x3229;\n t['tenparen'] = 0x247D;\n t['tenperiod'] = 0x2491;\n t['tenroman'] = 0x2179;\n t['tesh'] = 0x02A7;\n t['tet'] = 0x05D8;\n t['tetdagesh'] = 0xFB38;\n t['tetdageshhebrew'] = 0xFB38;\n t['tethebrew'] = 0x05D8;\n t['tetsecyrillic'] = 0x04B5;\n t['tevirhebrew'] = 0x059B;\n t['tevirlefthebrew'] = 0x059B;\n t['thabengali'] = 0x09A5;\n t['thadeva'] = 0x0925;\n t['thagujarati'] = 0x0AA5;\n t['thagurmukhi'] = 0x0A25;\n t['thalarabic'] = 0x0630;\n t['thalfinalarabic'] = 0xFEAC;\n t['thanthakhatlowleftthai'] = 0xF898;\n t['thanthakhatlowrightthai'] = 0xF897;\n t['thanthakhatthai'] = 0x0E4C;\n t['thanthakhatupperleftthai'] = 0xF896;\n t['theharabic'] = 0x062B;\n t['thehfinalarabic'] = 0xFE9A;\n t['thehinitialarabic'] = 0xFE9B;\n t['thehmedialarabic'] = 0xFE9C;\n t['thereexists'] = 0x2203;\n t['therefore'] = 0x2234;\n t['theta'] = 0x03B8;\n t['theta1'] = 0x03D1;\n t['thetasymbolgreek'] = 0x03D1;\n t['thieuthacirclekorean'] = 0x3279;\n t['thieuthaparenkorean'] = 0x3219;\n t['thieuthcirclekorean'] = 0x326B;\n t['thieuthkorean'] = 0x314C;\n t['thieuthparenkorean'] = 0x320B;\n t['thirteencircle'] = 0x246C;\n t['thirteenparen'] = 0x2480;\n t['thirteenperiod'] = 0x2494;\n t['thonangmonthothai'] = 0x0E11;\n t['thook'] = 0x01AD;\n t['thophuthaothai'] = 0x0E12;\n t['thorn'] = 0x00FE;\n t['thothahanthai'] = 0x0E17;\n t['thothanthai'] = 0x0E10;\n t['thothongthai'] = 0x0E18;\n t['thothungthai'] = 0x0E16;\n t['thousandcyrillic'] = 0x0482;\n t['thousandsseparatorarabic'] = 0x066C;\n t['thousandsseparatorpersian'] = 0x066C;\n t['three'] = 0x0033;\n t['threearabic'] = 0x0663;\n t['threebengali'] = 0x09E9;\n t['threecircle'] = 0x2462;\n t['threecircleinversesansserif'] = 0x278C;\n t['threedeva'] = 0x0969;\n t['threeeighths'] = 0x215C;\n t['threegujarati'] = 0x0AE9;\n t['threegurmukhi'] = 0x0A69;\n t['threehackarabic'] = 0x0663;\n t['threehangzhou'] = 0x3023;\n t['threeideographicparen'] = 0x3222;\n t['threeinferior'] = 0x2083;\n t['threemonospace'] = 0xFF13;\n t['threenumeratorbengali'] = 0x09F6;\n t['threeoldstyle'] = 0xF733;\n t['threeparen'] = 0x2476;\n t['threeperiod'] = 0x248A;\n t['threepersian'] = 0x06F3;\n t['threequarters'] = 0x00BE;\n t['threequartersemdash'] = 0xF6DE;\n t['threeroman'] = 0x2172;\n t['threesuperior'] = 0x00B3;\n t['threethai'] = 0x0E53;\n t['thzsquare'] = 0x3394;\n t['tihiragana'] = 0x3061;\n t['tikatakana'] = 0x30C1;\n t['tikatakanahalfwidth'] = 0xFF81;\n t['tikeutacirclekorean'] = 0x3270;\n t['tikeutaparenkorean'] = 0x3210;\n t['tikeutcirclekorean'] = 0x3262;\n t['tikeutkorean'] = 0x3137;\n t['tikeutparenkorean'] = 0x3202;\n t['tilde'] = 0x02DC;\n t['tildebelowcmb'] = 0x0330;\n t['tildecmb'] = 0x0303;\n t['tildecomb'] = 0x0303;\n t['tildedoublecmb'] = 0x0360;\n t['tildeoperator'] = 0x223C;\n t['tildeoverlaycmb'] = 0x0334;\n t['tildeverticalcmb'] = 0x033E;\n t['timescircle'] = 0x2297;\n t['tipehahebrew'] = 0x0596;\n t['tipehalefthebrew'] = 0x0596;\n t['tippigurmukhi'] = 0x0A70;\n t['titlocyrilliccmb'] = 0x0483;\n t['tiwnarmenian'] = 0x057F;\n t['tlinebelow'] = 0x1E6F;\n t['tmonospace'] = 0xFF54;\n t['toarmenian'] = 0x0569;\n t['tohiragana'] = 0x3068;\n t['tokatakana'] = 0x30C8;\n t['tokatakanahalfwidth'] = 0xFF84;\n t['tonebarextrahighmod'] = 0x02E5;\n t['tonebarextralowmod'] = 0x02E9;\n t['tonebarhighmod'] = 0x02E6;\n t['tonebarlowmod'] = 0x02E8;\n t['tonebarmidmod'] = 0x02E7;\n t['tonefive'] = 0x01BD;\n t['tonesix'] = 0x0185;\n t['tonetwo'] = 0x01A8;\n t['tonos'] = 0x0384;\n t['tonsquare'] = 0x3327;\n t['topatakthai'] = 0x0E0F;\n t['tortoiseshellbracketleft'] = 0x3014;\n t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n t['tortoiseshellbracketleftvertical'] = 0xFE39;\n t['tortoiseshellbracketright'] = 0x3015;\n t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n t['totaothai'] = 0x0E15;\n t['tpalatalhook'] = 0x01AB;\n t['tparen'] = 0x24AF;\n t['trademark'] = 0x2122;\n t['trademarksans'] = 0xF8EA;\n t['trademarkserif'] = 0xF6DB;\n t['tretroflexhook'] = 0x0288;\n t['triagdn'] = 0x25BC;\n t['triaglf'] = 0x25C4;\n t['triagrt'] = 0x25BA;\n t['triagup'] = 0x25B2;\n t['ts'] = 0x02A6;\n t['tsadi'] = 0x05E6;\n t['tsadidagesh'] = 0xFB46;\n t['tsadidageshhebrew'] = 0xFB46;\n t['tsadihebrew'] = 0x05E6;\n t['tsecyrillic'] = 0x0446;\n t['tsere'] = 0x05B5;\n t['tsere12'] = 0x05B5;\n t['tsere1e'] = 0x05B5;\n t['tsere2b'] = 0x05B5;\n t['tserehebrew'] = 0x05B5;\n t['tserenarrowhebrew'] = 0x05B5;\n t['tserequarterhebrew'] = 0x05B5;\n t['tserewidehebrew'] = 0x05B5;\n t['tshecyrillic'] = 0x045B;\n t['tsuperior'] = 0xF6F3;\n t['ttabengali'] = 0x099F;\n t['ttadeva'] = 0x091F;\n t['ttagujarati'] = 0x0A9F;\n t['ttagurmukhi'] = 0x0A1F;\n t['tteharabic'] = 0x0679;\n t['ttehfinalarabic'] = 0xFB67;\n t['ttehinitialarabic'] = 0xFB68;\n t['ttehmedialarabic'] = 0xFB69;\n t['tthabengali'] = 0x09A0;\n t['tthadeva'] = 0x0920;\n t['tthagujarati'] = 0x0AA0;\n t['tthagurmukhi'] = 0x0A20;\n t['tturned'] = 0x0287;\n t['tuhiragana'] = 0x3064;\n t['tukatakana'] = 0x30C4;\n t['tukatakanahalfwidth'] = 0xFF82;\n t['tusmallhiragana'] = 0x3063;\n t['tusmallkatakana'] = 0x30C3;\n t['tusmallkatakanahalfwidth'] = 0xFF6F;\n t['twelvecircle'] = 0x246B;\n t['twelveparen'] = 0x247F;\n t['twelveperiod'] = 0x2493;\n t['twelveroman'] = 0x217B;\n t['twentycircle'] = 0x2473;\n t['twentyhangzhou'] = 0x5344;\n t['twentyparen'] = 0x2487;\n t['twentyperiod'] = 0x249B;\n t['two'] = 0x0032;\n t['twoarabic'] = 0x0662;\n t['twobengali'] = 0x09E8;\n t['twocircle'] = 0x2461;\n t['twocircleinversesansserif'] = 0x278B;\n t['twodeva'] = 0x0968;\n t['twodotenleader'] = 0x2025;\n t['twodotleader'] = 0x2025;\n t['twodotleadervertical'] = 0xFE30;\n t['twogujarati'] = 0x0AE8;\n t['twogurmukhi'] = 0x0A68;\n t['twohackarabic'] = 0x0662;\n t['twohangzhou'] = 0x3022;\n t['twoideographicparen'] = 0x3221;\n t['twoinferior'] = 0x2082;\n t['twomonospace'] = 0xFF12;\n t['twonumeratorbengali'] = 0x09F5;\n t['twooldstyle'] = 0xF732;\n t['twoparen'] = 0x2475;\n t['twoperiod'] = 0x2489;\n t['twopersian'] = 0x06F2;\n t['tworoman'] = 0x2171;\n t['twostroke'] = 0x01BB;\n t['twosuperior'] = 0x00B2;\n t['twothai'] = 0x0E52;\n t['twothirds'] = 0x2154;\n t['u'] = 0x0075;\n t['uacute'] = 0x00FA;\n t['ubar'] = 0x0289;\n t['ubengali'] = 0x0989;\n t['ubopomofo'] = 0x3128;\n t['ubreve'] = 0x016D;\n t['ucaron'] = 0x01D4;\n t['ucircle'] = 0x24E4;\n t['ucircumflex'] = 0x00FB;\n t['ucircumflexbelow'] = 0x1E77;\n t['ucyrillic'] = 0x0443;\n t['udattadeva'] = 0x0951;\n t['udblacute'] = 0x0171;\n t['udblgrave'] = 0x0215;\n t['udeva'] = 0x0909;\n t['udieresis'] = 0x00FC;\n t['udieresisacute'] = 0x01D8;\n t['udieresisbelow'] = 0x1E73;\n t['udieresiscaron'] = 0x01DA;\n t['udieresiscyrillic'] = 0x04F1;\n t['udieresisgrave'] = 0x01DC;\n t['udieresismacron'] = 0x01D6;\n t['udotbelow'] = 0x1EE5;\n t['ugrave'] = 0x00F9;\n t['ugujarati'] = 0x0A89;\n t['ugurmukhi'] = 0x0A09;\n t['uhiragana'] = 0x3046;\n t['uhookabove'] = 0x1EE7;\n t['uhorn'] = 0x01B0;\n t['uhornacute'] = 0x1EE9;\n t['uhorndotbelow'] = 0x1EF1;\n t['uhorngrave'] = 0x1EEB;\n t['uhornhookabove'] = 0x1EED;\n t['uhorntilde'] = 0x1EEF;\n t['uhungarumlaut'] = 0x0171;\n t['uhungarumlautcyrillic'] = 0x04F3;\n t['uinvertedbreve'] = 0x0217;\n t['ukatakana'] = 0x30A6;\n t['ukatakanahalfwidth'] = 0xFF73;\n t['ukcyrillic'] = 0x0479;\n t['ukorean'] = 0x315C;\n t['umacron'] = 0x016B;\n t['umacroncyrillic'] = 0x04EF;\n t['umacrondieresis'] = 0x1E7B;\n t['umatragurmukhi'] = 0x0A41;\n t['umonospace'] = 0xFF55;\n t['underscore'] = 0x005F;\n t['underscoredbl'] = 0x2017;\n t['underscoremonospace'] = 0xFF3F;\n t['underscorevertical'] = 0xFE33;\n t['underscorewavy'] = 0xFE4F;\n t['union'] = 0x222A;\n t['universal'] = 0x2200;\n t['uogonek'] = 0x0173;\n t['uparen'] = 0x24B0;\n t['upblock'] = 0x2580;\n t['upperdothebrew'] = 0x05C4;\n t['upsilon'] = 0x03C5;\n t['upsilondieresis'] = 0x03CB;\n t['upsilondieresistonos'] = 0x03B0;\n t['upsilonlatin'] = 0x028A;\n t['upsilontonos'] = 0x03CD;\n t['uptackbelowcmb'] = 0x031D;\n t['uptackmod'] = 0x02D4;\n t['uragurmukhi'] = 0x0A73;\n t['uring'] = 0x016F;\n t['ushortcyrillic'] = 0x045E;\n t['usmallhiragana'] = 0x3045;\n t['usmallkatakana'] = 0x30A5;\n t['usmallkatakanahalfwidth'] = 0xFF69;\n t['ustraightcyrillic'] = 0x04AF;\n t['ustraightstrokecyrillic'] = 0x04B1;\n t['utilde'] = 0x0169;\n t['utildeacute'] = 0x1E79;\n t['utildebelow'] = 0x1E75;\n t['uubengali'] = 0x098A;\n t['uudeva'] = 0x090A;\n t['uugujarati'] = 0x0A8A;\n t['uugurmukhi'] = 0x0A0A;\n t['uumatragurmukhi'] = 0x0A42;\n t['uuvowelsignbengali'] = 0x09C2;\n t['uuvowelsigndeva'] = 0x0942;\n t['uuvowelsigngujarati'] = 0x0AC2;\n t['uvowelsignbengali'] = 0x09C1;\n t['uvowelsigndeva'] = 0x0941;\n t['uvowelsigngujarati'] = 0x0AC1;\n t['v'] = 0x0076;\n t['vadeva'] = 0x0935;\n t['vagujarati'] = 0x0AB5;\n t['vagurmukhi'] = 0x0A35;\n t['vakatakana'] = 0x30F7;\n t['vav'] = 0x05D5;\n t['vavdagesh'] = 0xFB35;\n t['vavdagesh65'] = 0xFB35;\n t['vavdageshhebrew'] = 0xFB35;\n t['vavhebrew'] = 0x05D5;\n t['vavholam'] = 0xFB4B;\n t['vavholamhebrew'] = 0xFB4B;\n t['vavvavhebrew'] = 0x05F0;\n t['vavyodhebrew'] = 0x05F1;\n t['vcircle'] = 0x24E5;\n t['vdotbelow'] = 0x1E7F;\n t['vecyrillic'] = 0x0432;\n t['veharabic'] = 0x06A4;\n t['vehfinalarabic'] = 0xFB6B;\n t['vehinitialarabic'] = 0xFB6C;\n t['vehmedialarabic'] = 0xFB6D;\n t['vekatakana'] = 0x30F9;\n t['venus'] = 0x2640;\n t['verticalbar'] = 0x007C;\n t['verticallineabovecmb'] = 0x030D;\n t['verticallinebelowcmb'] = 0x0329;\n t['verticallinelowmod'] = 0x02CC;\n t['verticallinemod'] = 0x02C8;\n t['vewarmenian'] = 0x057E;\n t['vhook'] = 0x028B;\n t['vikatakana'] = 0x30F8;\n t['viramabengali'] = 0x09CD;\n t['viramadeva'] = 0x094D;\n t['viramagujarati'] = 0x0ACD;\n t['visargabengali'] = 0x0983;\n t['visargadeva'] = 0x0903;\n t['visargagujarati'] = 0x0A83;\n t['vmonospace'] = 0xFF56;\n t['voarmenian'] = 0x0578;\n t['voicediterationhiragana'] = 0x309E;\n t['voicediterationkatakana'] = 0x30FE;\n t['voicedmarkkana'] = 0x309B;\n t['voicedmarkkanahalfwidth'] = 0xFF9E;\n t['vokatakana'] = 0x30FA;\n t['vparen'] = 0x24B1;\n t['vtilde'] = 0x1E7D;\n t['vturned'] = 0x028C;\n t['vuhiragana'] = 0x3094;\n t['vukatakana'] = 0x30F4;\n t['w'] = 0x0077;\n t['wacute'] = 0x1E83;\n t['waekorean'] = 0x3159;\n t['wahiragana'] = 0x308F;\n t['wakatakana'] = 0x30EF;\n t['wakatakanahalfwidth'] = 0xFF9C;\n t['wakorean'] = 0x3158;\n t['wasmallhiragana'] = 0x308E;\n t['wasmallkatakana'] = 0x30EE;\n t['wattosquare'] = 0x3357;\n t['wavedash'] = 0x301C;\n t['wavyunderscorevertical'] = 0xFE34;\n t['wawarabic'] = 0x0648;\n t['wawfinalarabic'] = 0xFEEE;\n t['wawhamzaabovearabic'] = 0x0624;\n t['wawhamzaabovefinalarabic'] = 0xFE86;\n t['wbsquare'] = 0x33DD;\n t['wcircle'] = 0x24E6;\n t['wcircumflex'] = 0x0175;\n t['wdieresis'] = 0x1E85;\n t['wdotaccent'] = 0x1E87;\n t['wdotbelow'] = 0x1E89;\n t['wehiragana'] = 0x3091;\n t['weierstrass'] = 0x2118;\n t['wekatakana'] = 0x30F1;\n t['wekorean'] = 0x315E;\n t['weokorean'] = 0x315D;\n t['wgrave'] = 0x1E81;\n t['whitebullet'] = 0x25E6;\n t['whitecircle'] = 0x25CB;\n t['whitecircleinverse'] = 0x25D9;\n t['whitecornerbracketleft'] = 0x300E;\n t['whitecornerbracketleftvertical'] = 0xFE43;\n t['whitecornerbracketright'] = 0x300F;\n t['whitecornerbracketrightvertical'] = 0xFE44;\n t['whitediamond'] = 0x25C7;\n t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n t['whitedownpointingsmalltriangle'] = 0x25BF;\n t['whitedownpointingtriangle'] = 0x25BD;\n t['whiteleftpointingsmalltriangle'] = 0x25C3;\n t['whiteleftpointingtriangle'] = 0x25C1;\n t['whitelenticularbracketleft'] = 0x3016;\n t['whitelenticularbracketright'] = 0x3017;\n t['whiterightpointingsmalltriangle'] = 0x25B9;\n t['whiterightpointingtriangle'] = 0x25B7;\n t['whitesmallsquare'] = 0x25AB;\n t['whitesmilingface'] = 0x263A;\n t['whitesquare'] = 0x25A1;\n t['whitestar'] = 0x2606;\n t['whitetelephone'] = 0x260F;\n t['whitetortoiseshellbracketleft'] = 0x3018;\n t['whitetortoiseshellbracketright'] = 0x3019;\n t['whiteuppointingsmalltriangle'] = 0x25B5;\n t['whiteuppointingtriangle'] = 0x25B3;\n t['wihiragana'] = 0x3090;\n t['wikatakana'] = 0x30F0;\n t['wikorean'] = 0x315F;\n t['wmonospace'] = 0xFF57;\n t['wohiragana'] = 0x3092;\n t['wokatakana'] = 0x30F2;\n t['wokatakanahalfwidth'] = 0xFF66;\n t['won'] = 0x20A9;\n t['wonmonospace'] = 0xFFE6;\n t['wowaenthai'] = 0x0E27;\n t['wparen'] = 0x24B2;\n t['wring'] = 0x1E98;\n t['wsuperior'] = 0x02B7;\n t['wturned'] = 0x028D;\n t['wynn'] = 0x01BF;\n t['x'] = 0x0078;\n t['xabovecmb'] = 0x033D;\n t['xbopomofo'] = 0x3112;\n t['xcircle'] = 0x24E7;\n t['xdieresis'] = 0x1E8D;\n t['xdotaccent'] = 0x1E8B;\n t['xeharmenian'] = 0x056D;\n t['xi'] = 0x03BE;\n t['xmonospace'] = 0xFF58;\n t['xparen'] = 0x24B3;\n t['xsuperior'] = 0x02E3;\n t['y'] = 0x0079;\n t['yaadosquare'] = 0x334E;\n t['yabengali'] = 0x09AF;\n t['yacute'] = 0x00FD;\n t['yadeva'] = 0x092F;\n t['yaekorean'] = 0x3152;\n t['yagujarati'] = 0x0AAF;\n t['yagurmukhi'] = 0x0A2F;\n t['yahiragana'] = 0x3084;\n t['yakatakana'] = 0x30E4;\n t['yakatakanahalfwidth'] = 0xFF94;\n t['yakorean'] = 0x3151;\n t['yamakkanthai'] = 0x0E4E;\n t['yasmallhiragana'] = 0x3083;\n t['yasmallkatakana'] = 0x30E3;\n t['yasmallkatakanahalfwidth'] = 0xFF6C;\n t['yatcyrillic'] = 0x0463;\n t['ycircle'] = 0x24E8;\n t['ycircumflex'] = 0x0177;\n t['ydieresis'] = 0x00FF;\n t['ydotaccent'] = 0x1E8F;\n t['ydotbelow'] = 0x1EF5;\n t['yeharabic'] = 0x064A;\n t['yehbarreearabic'] = 0x06D2;\n t['yehbarreefinalarabic'] = 0xFBAF;\n t['yehfinalarabic'] = 0xFEF2;\n t['yehhamzaabovearabic'] = 0x0626;\n t['yehhamzaabovefinalarabic'] = 0xFE8A;\n t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n t['yehhamzaabovemedialarabic'] = 0xFE8C;\n t['yehinitialarabic'] = 0xFEF3;\n t['yehmedialarabic'] = 0xFEF4;\n t['yehmeeminitialarabic'] = 0xFCDD;\n t['yehmeemisolatedarabic'] = 0xFC58;\n t['yehnoonfinalarabic'] = 0xFC94;\n t['yehthreedotsbelowarabic'] = 0x06D1;\n t['yekorean'] = 0x3156;\n t['yen'] = 0x00A5;\n t['yenmonospace'] = 0xFFE5;\n t['yeokorean'] = 0x3155;\n t['yeorinhieuhkorean'] = 0x3186;\n t['yerahbenyomohebrew'] = 0x05AA;\n t['yerahbenyomolefthebrew'] = 0x05AA;\n t['yericyrillic'] = 0x044B;\n t['yerudieresiscyrillic'] = 0x04F9;\n t['yesieungkorean'] = 0x3181;\n t['yesieungpansioskorean'] = 0x3183;\n t['yesieungsioskorean'] = 0x3182;\n t['yetivhebrew'] = 0x059A;\n t['ygrave'] = 0x1EF3;\n t['yhook'] = 0x01B4;\n t['yhookabove'] = 0x1EF7;\n t['yiarmenian'] = 0x0575;\n t['yicyrillic'] = 0x0457;\n t['yikorean'] = 0x3162;\n t['yinyang'] = 0x262F;\n t['yiwnarmenian'] = 0x0582;\n t['ymonospace'] = 0xFF59;\n t['yod'] = 0x05D9;\n t['yoddagesh'] = 0xFB39;\n t['yoddageshhebrew'] = 0xFB39;\n t['yodhebrew'] = 0x05D9;\n t['yodyodhebrew'] = 0x05F2;\n t['yodyodpatahhebrew'] = 0xFB1F;\n t['yohiragana'] = 0x3088;\n t['yoikorean'] = 0x3189;\n t['yokatakana'] = 0x30E8;\n t['yokatakanahalfwidth'] = 0xFF96;\n t['yokorean'] = 0x315B;\n t['yosmallhiragana'] = 0x3087;\n t['yosmallkatakana'] = 0x30E7;\n t['yosmallkatakanahalfwidth'] = 0xFF6E;\n t['yotgreek'] = 0x03F3;\n t['yoyaekorean'] = 0x3188;\n t['yoyakorean'] = 0x3187;\n t['yoyakthai'] = 0x0E22;\n t['yoyingthai'] = 0x0E0D;\n t['yparen'] = 0x24B4;\n t['ypogegrammeni'] = 0x037A;\n t['ypogegrammenigreekcmb'] = 0x0345;\n t['yr'] = 0x01A6;\n t['yring'] = 0x1E99;\n t['ysuperior'] = 0x02B8;\n t['ytilde'] = 0x1EF9;\n t['yturned'] = 0x028E;\n t['yuhiragana'] = 0x3086;\n t['yuikorean'] = 0x318C;\n t['yukatakana'] = 0x30E6;\n t['yukatakanahalfwidth'] = 0xFF95;\n t['yukorean'] = 0x3160;\n t['yusbigcyrillic'] = 0x046B;\n t['yusbigiotifiedcyrillic'] = 0x046D;\n t['yuslittlecyrillic'] = 0x0467;\n t['yuslittleiotifiedcyrillic'] = 0x0469;\n t['yusmallhiragana'] = 0x3085;\n t['yusmallkatakana'] = 0x30E5;\n t['yusmallkatakanahalfwidth'] = 0xFF6D;\n t['yuyekorean'] = 0x318B;\n t['yuyeokorean'] = 0x318A;\n t['yyabengali'] = 0x09DF;\n t['yyadeva'] = 0x095F;\n t['z'] = 0x007A;\n t['zaarmenian'] = 0x0566;\n t['zacute'] = 0x017A;\n t['zadeva'] = 0x095B;\n t['zagurmukhi'] = 0x0A5B;\n t['zaharabic'] = 0x0638;\n t['zahfinalarabic'] = 0xFEC6;\n t['zahinitialarabic'] = 0xFEC7;\n t['zahiragana'] = 0x3056;\n t['zahmedialarabic'] = 0xFEC8;\n t['zainarabic'] = 0x0632;\n t['zainfinalarabic'] = 0xFEB0;\n t['zakatakana'] = 0x30B6;\n t['zaqefgadolhebrew'] = 0x0595;\n t['zaqefqatanhebrew'] = 0x0594;\n t['zarqahebrew'] = 0x0598;\n t['zayin'] = 0x05D6;\n t['zayindagesh'] = 0xFB36;\n t['zayindageshhebrew'] = 0xFB36;\n t['zayinhebrew'] = 0x05D6;\n t['zbopomofo'] = 0x3117;\n t['zcaron'] = 0x017E;\n t['zcircle'] = 0x24E9;\n t['zcircumflex'] = 0x1E91;\n t['zcurl'] = 0x0291;\n t['zdot'] = 0x017C;\n t['zdotaccent'] = 0x017C;\n t['zdotbelow'] = 0x1E93;\n t['zecyrillic'] = 0x0437;\n t['zedescendercyrillic'] = 0x0499;\n t['zedieresiscyrillic'] = 0x04DF;\n t['zehiragana'] = 0x305C;\n t['zekatakana'] = 0x30BC;\n t['zero'] = 0x0030;\n t['zeroarabic'] = 0x0660;\n t['zerobengali'] = 0x09E6;\n t['zerodeva'] = 0x0966;\n t['zerogujarati'] = 0x0AE6;\n t['zerogurmukhi'] = 0x0A66;\n t['zerohackarabic'] = 0x0660;\n t['zeroinferior'] = 0x2080;\n t['zeromonospace'] = 0xFF10;\n t['zerooldstyle'] = 0xF730;\n t['zeropersian'] = 0x06F0;\n t['zerosuperior'] = 0x2070;\n t['zerothai'] = 0x0E50;\n t['zerowidthjoiner'] = 0xFEFF;\n t['zerowidthnonjoiner'] = 0x200C;\n t['zerowidthspace'] = 0x200B;\n t['zeta'] = 0x03B6;\n t['zhbopomofo'] = 0x3113;\n t['zhearmenian'] = 0x056A;\n t['zhebrevecyrillic'] = 0x04C2;\n t['zhecyrillic'] = 0x0436;\n t['zhedescendercyrillic'] = 0x0497;\n t['zhedieresiscyrillic'] = 0x04DD;\n t['zihiragana'] = 0x3058;\n t['zikatakana'] = 0x30B8;\n t['zinorhebrew'] = 0x05AE;\n t['zlinebelow'] = 0x1E95;\n t['zmonospace'] = 0xFF5A;\n t['zohiragana'] = 0x305E;\n t['zokatakana'] = 0x30BE;\n t['zparen'] = 0x24B5;\n t['zretroflexhook'] = 0x0290;\n t['zstroke'] = 0x01B6;\n t['zuhiragana'] = 0x305A;\n t['zukatakana'] = 0x30BA;\n t['.notdef'] = 0x0000;\n t['angbracketleftbig'] = 0x2329;\n t['angbracketleftBig'] = 0x2329;\n t['angbracketleftbigg'] = 0x2329;\n t['angbracketleftBigg'] = 0x2329;\n t['angbracketrightBig'] = 0x232A;\n t['angbracketrightbig'] = 0x232A;\n t['angbracketrightBigg'] = 0x232A;\n t['angbracketrightbigg'] = 0x232A;\n t['arrowhookleft'] = 0x21AA;\n t['arrowhookright'] = 0x21A9;\n t['arrowlefttophalf'] = 0x21BC;\n t['arrowleftbothalf'] = 0x21BD;\n t['arrownortheast'] = 0x2197;\n t['arrownorthwest'] = 0x2196;\n t['arrowrighttophalf'] = 0x21C0;\n t['arrowrightbothalf'] = 0x21C1;\n t['arrowsoutheast'] = 0x2198;\n t['arrowsouthwest'] = 0x2199;\n t['backslashbig'] = 0x2216;\n t['backslashBig'] = 0x2216;\n t['backslashBigg'] = 0x2216;\n t['backslashbigg'] = 0x2216;\n t['bardbl'] = 0x2016;\n t['bracehtipdownleft'] = 0xFE37;\n t['bracehtipdownright'] = 0xFE37;\n t['bracehtipupleft'] = 0xFE38;\n t['bracehtipupright'] = 0xFE38;\n t['braceleftBig'] = 0x007B;\n t['braceleftbig'] = 0x007B;\n t['braceleftbigg'] = 0x007B;\n t['braceleftBigg'] = 0x007B;\n t['bracerightBig'] = 0x007D;\n t['bracerightbig'] = 0x007D;\n t['bracerightbigg'] = 0x007D;\n t['bracerightBigg'] = 0x007D;\n t['bracketleftbig'] = 0x005B;\n t['bracketleftBig'] = 0x005B;\n t['bracketleftbigg'] = 0x005B;\n t['bracketleftBigg'] = 0x005B;\n t['bracketrightBig'] = 0x005D;\n t['bracketrightbig'] = 0x005D;\n t['bracketrightbigg'] = 0x005D;\n t['bracketrightBigg'] = 0x005D;\n t['ceilingleftbig'] = 0x2308;\n t['ceilingleftBig'] = 0x2308;\n t['ceilingleftBigg'] = 0x2308;\n t['ceilingleftbigg'] = 0x2308;\n t['ceilingrightbig'] = 0x2309;\n t['ceilingrightBig'] = 0x2309;\n t['ceilingrightbigg'] = 0x2309;\n t['ceilingrightBigg'] = 0x2309;\n t['circledotdisplay'] = 0x2299;\n t['circledottext'] = 0x2299;\n t['circlemultiplydisplay'] = 0x2297;\n t['circlemultiplytext'] = 0x2297;\n t['circleplusdisplay'] = 0x2295;\n t['circleplustext'] = 0x2295;\n t['contintegraldisplay'] = 0x222E;\n t['contintegraltext'] = 0x222E;\n t['coproductdisplay'] = 0x2210;\n t['coproducttext'] = 0x2210;\n t['floorleftBig'] = 0x230A;\n t['floorleftbig'] = 0x230A;\n t['floorleftbigg'] = 0x230A;\n t['floorleftBigg'] = 0x230A;\n t['floorrightbig'] = 0x230B;\n t['floorrightBig'] = 0x230B;\n t['floorrightBigg'] = 0x230B;\n t['floorrightbigg'] = 0x230B;\n t['hatwide'] = 0x0302;\n t['hatwider'] = 0x0302;\n t['hatwidest'] = 0x0302;\n t['intercal'] = 0x1D40;\n t['integraldisplay'] = 0x222B;\n t['integraltext'] = 0x222B;\n t['intersectiondisplay'] = 0x22C2;\n t['intersectiontext'] = 0x22C2;\n t['logicalanddisplay'] = 0x2227;\n t['logicalandtext'] = 0x2227;\n t['logicalordisplay'] = 0x2228;\n t['logicalortext'] = 0x2228;\n t['parenleftBig'] = 0x0028;\n t['parenleftbig'] = 0x0028;\n t['parenleftBigg'] = 0x0028;\n t['parenleftbigg'] = 0x0028;\n t['parenrightBig'] = 0x0029;\n t['parenrightbig'] = 0x0029;\n t['parenrightBigg'] = 0x0029;\n t['parenrightbigg'] = 0x0029;\n t['prime'] = 0x2032;\n t['productdisplay'] = 0x220F;\n t['producttext'] = 0x220F;\n t['radicalbig'] = 0x221A;\n t['radicalBig'] = 0x221A;\n t['radicalBigg'] = 0x221A;\n t['radicalbigg'] = 0x221A;\n t['radicalbt'] = 0x221A;\n t['radicaltp'] = 0x221A;\n t['radicalvertex'] = 0x221A;\n t['slashbig'] = 0x002F;\n t['slashBig'] = 0x002F;\n t['slashBigg'] = 0x002F;\n t['slashbigg'] = 0x002F;\n t['summationdisplay'] = 0x2211;\n t['summationtext'] = 0x2211;\n t['tildewide'] = 0x02DC;\n t['tildewider'] = 0x02DC;\n t['tildewidest'] = 0x02DC;\n t['uniondisplay'] = 0x22C3;\n t['unionmultidisplay'] = 0x228E;\n t['unionmultitext'] = 0x228E;\n t['unionsqdisplay'] = 0x2294;\n t['unionsqtext'] = 0x2294;\n t['uniontext'] = 0x22C3;\n t['vextenddouble'] = 0x2225;\n t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n t['space'] = 0x0020;\n t['a1'] = 0x2701;\n t['a2'] = 0x2702;\n t['a202'] = 0x2703;\n t['a3'] = 0x2704;\n t['a4'] = 0x260E;\n t['a5'] = 0x2706;\n t['a119'] = 0x2707;\n t['a118'] = 0x2708;\n t['a117'] = 0x2709;\n t['a11'] = 0x261B;\n t['a12'] = 0x261E;\n t['a13'] = 0x270C;\n t['a14'] = 0x270D;\n t['a15'] = 0x270E;\n t['a16'] = 0x270F;\n t['a105'] = 0x2710;\n t['a17'] = 0x2711;\n t['a18'] = 0x2712;\n t['a19'] = 0x2713;\n t['a20'] = 0x2714;\n t['a21'] = 0x2715;\n t['a22'] = 0x2716;\n t['a23'] = 0x2717;\n t['a24'] = 0x2718;\n t['a25'] = 0x2719;\n t['a26'] = 0x271A;\n t['a27'] = 0x271B;\n t['a28'] = 0x271C;\n t['a6'] = 0x271D;\n t['a7'] = 0x271E;\n t['a8'] = 0x271F;\n t['a9'] = 0x2720;\n t['a10'] = 0x2721;\n t['a29'] = 0x2722;\n t['a30'] = 0x2723;\n t['a31'] = 0x2724;\n t['a32'] = 0x2725;\n t['a33'] = 0x2726;\n t['a34'] = 0x2727;\n t['a35'] = 0x2605;\n t['a36'] = 0x2729;\n t['a37'] = 0x272A;\n t['a38'] = 0x272B;\n t['a39'] = 0x272C;\n t['a40'] = 0x272D;\n t['a41'] = 0x272E;\n t['a42'] = 0x272F;\n t['a43'] = 0x2730;\n t['a44'] = 0x2731;\n t['a45'] = 0x2732;\n t['a46'] = 0x2733;\n t['a47'] = 0x2734;\n t['a48'] = 0x2735;\n t['a49'] = 0x2736;\n t['a50'] = 0x2737;\n t['a51'] = 0x2738;\n t['a52'] = 0x2739;\n t['a53'] = 0x273A;\n t['a54'] = 0x273B;\n t['a55'] = 0x273C;\n t['a56'] = 0x273D;\n t['a57'] = 0x273E;\n t['a58'] = 0x273F;\n t['a59'] = 0x2740;\n t['a60'] = 0x2741;\n t['a61'] = 0x2742;\n t['a62'] = 0x2743;\n t['a63'] = 0x2744;\n t['a64'] = 0x2745;\n t['a65'] = 0x2746;\n t['a66'] = 0x2747;\n t['a67'] = 0x2748;\n t['a68'] = 0x2749;\n t['a69'] = 0x274A;\n t['a70'] = 0x274B;\n t['a71'] = 0x25CF;\n t['a72'] = 0x274D;\n t['a73'] = 0x25A0;\n t['a74'] = 0x274F;\n t['a203'] = 0x2750;\n t['a75'] = 0x2751;\n t['a204'] = 0x2752;\n t['a76'] = 0x25B2;\n t['a77'] = 0x25BC;\n t['a78'] = 0x25C6;\n t['a79'] = 0x2756;\n t['a81'] = 0x25D7;\n t['a82'] = 0x2758;\n t['a83'] = 0x2759;\n t['a84'] = 0x275A;\n t['a97'] = 0x275B;\n t['a98'] = 0x275C;\n t['a99'] = 0x275D;\n t['a100'] = 0x275E;\n t['a101'] = 0x2761;\n t['a102'] = 0x2762;\n t['a103'] = 0x2763;\n t['a104'] = 0x2764;\n t['a106'] = 0x2765;\n t['a107'] = 0x2766;\n t['a108'] = 0x2767;\n t['a112'] = 0x2663;\n t['a111'] = 0x2666;\n t['a110'] = 0x2665;\n t['a109'] = 0x2660;\n t['a120'] = 0x2460;\n t['a121'] = 0x2461;\n t['a122'] = 0x2462;\n t['a123'] = 0x2463;\n t['a124'] = 0x2464;\n t['a125'] = 0x2465;\n t['a126'] = 0x2466;\n t['a127'] = 0x2467;\n t['a128'] = 0x2468;\n t['a129'] = 0x2469;\n t['a130'] = 0x2776;\n t['a131'] = 0x2777;\n t['a132'] = 0x2778;\n t['a133'] = 0x2779;\n t['a134'] = 0x277A;\n t['a135'] = 0x277B;\n t['a136'] = 0x277C;\n t['a137'] = 0x277D;\n t['a138'] = 0x277E;\n t['a139'] = 0x277F;\n t['a140'] = 0x2780;\n t['a141'] = 0x2781;\n t['a142'] = 0x2782;\n t['a143'] = 0x2783;\n t['a144'] = 0x2784;\n t['a145'] = 0x2785;\n t['a146'] = 0x2786;\n t['a147'] = 0x2787;\n t['a148'] = 0x2788;\n t['a149'] = 0x2789;\n t['a150'] = 0x278A;\n t['a151'] = 0x278B;\n t['a152'] = 0x278C;\n t['a153'] = 0x278D;\n t['a154'] = 0x278E;\n t['a155'] = 0x278F;\n t['a156'] = 0x2790;\n t['a157'] = 0x2791;\n t['a158'] = 0x2792;\n t['a159'] = 0x2793;\n t['a160'] = 0x2794;\n t['a161'] = 0x2192;\n t['a163'] = 0x2194;\n t['a164'] = 0x2195;\n t['a196'] = 0x2798;\n t['a165'] = 0x2799;\n t['a192'] = 0x279A;\n t['a166'] = 0x279B;\n t['a167'] = 0x279C;\n t['a168'] = 0x279D;\n t['a169'] = 0x279E;\n t['a170'] = 0x279F;\n t['a171'] = 0x27A0;\n t['a172'] = 0x27A1;\n t['a173'] = 0x27A2;\n t['a162'] = 0x27A3;\n t['a174'] = 0x27A4;\n t['a175'] = 0x27A5;\n t['a176'] = 0x27A6;\n t['a177'] = 0x27A7;\n t['a178'] = 0x27A8;\n t['a179'] = 0x27A9;\n t['a193'] = 0x27AA;\n t['a180'] = 0x27AB;\n t['a199'] = 0x27AC;\n t['a181'] = 0x27AD;\n t['a200'] = 0x27AE;\n t['a182'] = 0x27AF;\n t['a201'] = 0x27B1;\n t['a183'] = 0x27B2;\n t['a184'] = 0x27B3;\n t['a197'] = 0x27B4;\n t['a185'] = 0x27B5;\n t['a194'] = 0x27B6;\n t['a198'] = 0x27B7;\n t['a186'] = 0x27B8;\n t['a195'] = 0x27B9;\n t['a187'] = 0x27BA;\n t['a188'] = 0x27BB;\n t['a189'] = 0x27BC;\n t['a190'] = 0x27BD;\n t['a191'] = 0x27BE;\n t['a89'] = 0x2768;\n t['a90'] = 0x2769;\n t['a93'] = 0x276A;\n t['a94'] = 0x276B;\n t['a91'] = 0x276C;\n t['a92'] = 0x276D;\n t['a205'] = 0x276E;\n t['a85'] = 0x276F;\n t['a206'] = 0x2770;\n t['a86'] = 0x2771;\n t['a87'] = 0x2772;\n t['a88'] = 0x2773;\n t['a95'] = 0x2774;\n t['a96'] = 0x2775;\n t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\nvar getLookupTableFactory = __w_pdfjs_require__(2).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n t[63721] = 0x00A9;\n t[63193] = 0x00A9;\n t[63720] = 0x00AE;\n t[63194] = 0x00AE;\n t[63722] = 0x2122;\n t[63195] = 0x2122;\n t[63729] = 0x23A7;\n t[63730] = 0x23A8;\n t[63731] = 0x23A9;\n t[63740] = 0x23AB;\n t[63741] = 0x23AC;\n t[63742] = 0x23AD;\n t[63726] = 0x23A1;\n t[63727] = 0x23A2;\n t[63728] = 0x23A3;\n t[63737] = 0x23A4;\n t[63738] = 0x23A5;\n t[63739] = 0x23A6;\n t[63723] = 0x239B;\n t[63724] = 0x239C;\n t[63725] = 0x239D;\n t[63734] = 0x239E;\n t[63735] = 0x239F;\n t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n if (code >= 0xFFF0 && code <= 0xFFFF) {\n  return 0;\n } else if (code >= 0xF600 && code <= 0xF8FF) {\n  return getSpecialPUASymbols()[code] || code;\n } else if (code === 0x00AD) {\n  return 0x002D;\n }\n return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n var unicode = glyphsUnicodeMap[name];\n if (unicode !== undefined) {\n  return unicode;\n }\n if (!name) {\n  return -1;\n }\n if (name[0] === 'u') {\n  var nameLen = name.length, hexStr;\n  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n   hexStr = name.substr(3);\n  } else if (nameLen >= 5 && nameLen <= 7) {\n   hexStr = name.substr(1);\n  } else {\n   return -1;\n  }\n  if (hexStr === hexStr.toUpperCase()) {\n   unicode = parseInt(hexStr, 16);\n   if (unicode >= 0) {\n    return unicode;\n   }\n  }\n }\n return -1;\n}\nvar UnicodeRanges = [\n {\n  'begin': 0x0000,\n  'end': 0x007F\n },\n {\n  'begin': 0x0080,\n  'end': 0x00FF\n },\n {\n  'begin': 0x0100,\n  'end': 0x017F\n },\n {\n  'begin': 0x0180,\n  'end': 0x024F\n },\n {\n  'begin': 0x0250,\n  'end': 0x02AF\n },\n {\n  'begin': 0x02B0,\n  'end': 0x02FF\n },\n {\n  'begin': 0x0300,\n  'end': 0x036F\n },\n {\n  'begin': 0x0370,\n  'end': 0x03FF\n },\n {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n },\n {\n  'begin': 0x0400,\n  'end': 0x04FF\n },\n {\n  'begin': 0x0530,\n  'end': 0x058F\n },\n {\n  'begin': 0x0590,\n  'end': 0x05FF\n },\n {\n  'begin': 0xA500,\n  'end': 0xA63F\n },\n {\n  'begin': 0x0600,\n  'end': 0x06FF\n },\n {\n  'begin': 0x07C0,\n  'end': 0x07FF\n },\n {\n  'begin': 0x0900,\n  'end': 0x097F\n },\n {\n  'begin': 0x0980,\n  'end': 0x09FF\n },\n {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n },\n {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n },\n {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n },\n {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n },\n {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n },\n {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n },\n {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n },\n {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n },\n {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n },\n {\n  'begin': 0x10A0,\n  'end': 0x10FF\n },\n {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n },\n {\n  'begin': 0x1100,\n  'end': 0x11FF\n },\n {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n },\n {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n },\n {\n  'begin': 0x2000,\n  'end': 0x206F\n },\n {\n  'begin': 0x2070,\n  'end': 0x209F\n },\n {\n  'begin': 0x20A0,\n  'end': 0x20CF\n },\n {\n  'begin': 0x20D0,\n  'end': 0x20FF\n },\n {\n  'begin': 0x2100,\n  'end': 0x214F\n },\n {\n  'begin': 0x2150,\n  'end': 0x218F\n },\n {\n  'begin': 0x2190,\n  'end': 0x21FF\n },\n {\n  'begin': 0x2200,\n  'end': 0x22FF\n },\n {\n  'begin': 0x2300,\n  'end': 0x23FF\n },\n {\n  'begin': 0x2400,\n  'end': 0x243F\n },\n {\n  'begin': 0x2440,\n  'end': 0x245F\n },\n {\n  'begin': 0x2460,\n  'end': 0x24FF\n },\n {\n  'begin': 0x2500,\n  'end': 0x257F\n },\n {\n  'begin': 0x2580,\n  'end': 0x259F\n },\n {\n  'begin': 0x25A0,\n  'end': 0x25FF\n },\n {\n  'begin': 0x2600,\n  'end': 0x26FF\n },\n {\n  'begin': 0x2700,\n  'end': 0x27BF\n },\n {\n  'begin': 0x3000,\n  'end': 0x303F\n },\n {\n  'begin': 0x3040,\n  'end': 0x309F\n },\n {\n  'begin': 0x30A0,\n  'end': 0x30FF\n },\n {\n  'begin': 0x3100,\n  'end': 0x312F\n },\n {\n  'begin': 0x3130,\n  'end': 0x318F\n },\n {\n  'begin': 0xA840,\n  'end': 0xA87F\n },\n {\n  'begin': 0x3200,\n  'end': 0x32FF\n },\n {\n  'begin': 0x3300,\n  'end': 0x33FF\n },\n {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n },\n {\n  'begin': 0xD800,\n  'end': 0xDFFF\n },\n {\n  'begin': 0x10900,\n  'end': 0x1091F\n },\n {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n },\n {\n  'begin': 0xE000,\n  'end': 0xF8FF\n },\n {\n  'begin': 0x31C0,\n  'end': 0x31EF\n },\n {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n },\n {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n },\n {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n },\n {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n },\n {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n },\n {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n },\n {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n },\n {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n },\n {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n },\n {\n  'begin': 0x0700,\n  'end': 0x074F\n },\n {\n  'begin': 0x0780,\n  'end': 0x07BF\n },\n {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n },\n {\n  'begin': 0x1000,\n  'end': 0x109F\n },\n {\n  'begin': 0x1200,\n  'end': 0x137F\n },\n {\n  'begin': 0x13A0,\n  'end': 0x13FF\n },\n {\n  'begin': 0x1400,\n  'end': 0x167F\n },\n {\n  'begin': 0x1680,\n  'end': 0x169F\n },\n {\n  'begin': 0x16A0,\n  'end': 0x16FF\n },\n {\n  'begin': 0x1780,\n  'end': 0x17FF\n },\n {\n  'begin': 0x1800,\n  'end': 0x18AF\n },\n {\n  'begin': 0x2800,\n  'end': 0x28FF\n },\n {\n  'begin': 0xA000,\n  'end': 0xA48F\n },\n {\n  'begin': 0x1700,\n  'end': 0x171F\n },\n {\n  'begin': 0x10300,\n  'end': 0x1032F\n },\n {\n  'begin': 0x10330,\n  'end': 0x1034F\n },\n {\n  'begin': 0x10400,\n  'end': 0x1044F\n },\n {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n },\n {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n },\n {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n },\n {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n },\n {\n  'begin': 0xE0000,\n  'end': 0xE007F\n },\n {\n  'begin': 0x1900,\n  'end': 0x194F\n },\n {\n  'begin': 0x1950,\n  'end': 0x197F\n },\n {\n  'begin': 0x1980,\n  'end': 0x19DF\n },\n {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n },\n {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n },\n {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n },\n {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n },\n {\n  'begin': 0xA800,\n  'end': 0xA82F\n },\n {\n  'begin': 0x10000,\n  'end': 0x1007F\n },\n {\n  'begin': 0x10140,\n  'end': 0x1018F\n },\n {\n  'begin': 0x10380,\n  'end': 0x1039F\n },\n {\n  'begin': 0x103A0,\n  'end': 0x103DF\n },\n {\n  'begin': 0x10450,\n  'end': 0x1047F\n },\n {\n  'begin': 0x10480,\n  'end': 0x104AF\n },\n {\n  'begin': 0x10800,\n  'end': 0x1083F\n },\n {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n },\n {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n },\n {\n  'begin': 0x12000,\n  'end': 0x123FF\n },\n {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n },\n {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n },\n {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n },\n {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n },\n {\n  'begin': 0xA880,\n  'end': 0xA8DF\n },\n {\n  'begin': 0xA900,\n  'end': 0xA92F\n },\n {\n  'begin': 0xA930,\n  'end': 0xA95F\n },\n {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n },\n {\n  'begin': 0x10190,\n  'end': 0x101CF\n },\n {\n  'begin': 0x101D0,\n  'end': 0x101FF\n },\n {\n  'begin': 0x102A0,\n  'end': 0x102DF\n },\n {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n }\n];\nfunction getUnicodeRangeFor(value) {\n for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n  var range = UnicodeRanges[i];\n  if (value >= range.begin && value < range.end) {\n   return i;\n  }\n }\n return -1;\n}\nfunction isRTLRangeFor(value) {\n var range = UnicodeRanges[13];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n range = UnicodeRanges[11];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n t['\\u00A8'] = '\\u0020\\u0308';\n t['\\u00AF'] = '\\u0020\\u0304';\n t['\\u00B4'] = '\\u0020\\u0301';\n t['\\u00B5'] = '\\u03BC';\n t['\\u00B8'] = '\\u0020\\u0327';\n t['\\u0132'] = '\\u0049\\u004A';\n t['\\u0133'] = '\\u0069\\u006A';\n t['\\u013F'] = '\\u004C\\u00B7';\n t['\\u0140'] = '\\u006C\\u00B7';\n t['\\u0149'] = '\\u02BC\\u006E';\n t['\\u017F'] = '\\u0073';\n t['\\u01C4'] = '\\u0044\\u017D';\n t['\\u01C5'] = '\\u0044\\u017E';\n t['\\u01C6'] = '\\u0064\\u017E';\n t['\\u01C7'] = '\\u004C\\u004A';\n t['\\u01C8'] = '\\u004C\\u006A';\n t['\\u01C9'] = '\\u006C\\u006A';\n t['\\u01CA'] = '\\u004E\\u004A';\n t['\\u01CB'] = '\\u004E\\u006A';\n t['\\u01CC'] = '\\u006E\\u006A';\n t['\\u01F1'] = '\\u0044\\u005A';\n t['\\u01F2'] = '\\u0044\\u007A';\n t['\\u01F3'] = '\\u0064\\u007A';\n t['\\u02D8'] = '\\u0020\\u0306';\n t['\\u02D9'] = '\\u0020\\u0307';\n t['\\u02DA'] = '\\u0020\\u030A';\n t['\\u02DB'] = '\\u0020\\u0328';\n t['\\u02DC'] = '\\u0020\\u0303';\n t['\\u02DD'] = '\\u0020\\u030B';\n t['\\u037A'] = '\\u0020\\u0345';\n t['\\u0384'] = '\\u0020\\u0301';\n t['\\u03D0'] = '\\u03B2';\n t['\\u03D1'] = '\\u03B8';\n t['\\u03D2'] = '\\u03A5';\n t['\\u03D5'] = '\\u03C6';\n t['\\u03D6'] = '\\u03C0';\n t['\\u03F0'] = '\\u03BA';\n t['\\u03F1'] = '\\u03C1';\n t['\\u03F2'] = '\\u03C2';\n t['\\u03F4'] = '\\u0398';\n t['\\u03F5'] = '\\u03B5';\n t['\\u03F9'] = '\\u03A3';\n t['\\u0587'] = '\\u0565\\u0582';\n t['\\u0675'] = '\\u0627\\u0674';\n t['\\u0676'] = '\\u0648\\u0674';\n t['\\u0677'] = '\\u06C7\\u0674';\n t['\\u0678'] = '\\u064A\\u0674';\n t['\\u0E33'] = '\\u0E4D\\u0E32';\n t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n t['\\u0EDC'] = '\\u0EAB\\u0E99';\n t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n t['\\u0F77'] = '\\u0FB2\\u0F81';\n t['\\u0F79'] = '\\u0FB3\\u0F81';\n t['\\u1E9A'] = '\\u0061\\u02BE';\n t['\\u1FBD'] = '\\u0020\\u0313';\n t['\\u1FBF'] = '\\u0020\\u0313';\n t['\\u1FC0'] = '\\u0020\\u0342';\n t['\\u1FFE'] = '\\u0020\\u0314';\n t['\\u2002'] = '\\u0020';\n t['\\u2003'] = '\\u0020';\n t['\\u2004'] = '\\u0020';\n t['\\u2005'] = '\\u0020';\n t['\\u2006'] = '\\u0020';\n t['\\u2008'] = '\\u0020';\n t['\\u2009'] = '\\u0020';\n t['\\u200A'] = '\\u0020';\n t['\\u2017'] = '\\u0020\\u0333';\n t['\\u2024'] = '\\u002E';\n t['\\u2025'] = '\\u002E\\u002E';\n t['\\u2026'] = '\\u002E\\u002E\\u002E';\n t['\\u2033'] = '\\u2032\\u2032';\n t['\\u2034'] = '\\u2032\\u2032\\u2032';\n t['\\u2036'] = '\\u2035\\u2035';\n t['\\u2037'] = '\\u2035\\u2035\\u2035';\n t['\\u203C'] = '\\u0021\\u0021';\n t['\\u203E'] = '\\u0020\\u0305';\n t['\\u2047'] = '\\u003F\\u003F';\n t['\\u2048'] = '\\u003F\\u0021';\n t['\\u2049'] = '\\u0021\\u003F';\n t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n t['\\u205F'] = '\\u0020';\n t['\\u20A8'] = '\\u0052\\u0073';\n t['\\u2100'] = '\\u0061\\u002F\\u0063';\n t['\\u2101'] = '\\u0061\\u002F\\u0073';\n t['\\u2103'] = '\\u00B0\\u0043';\n t['\\u2105'] = '\\u0063\\u002F\\u006F';\n t['\\u2106'] = '\\u0063\\u002F\\u0075';\n t['\\u2107'] = '\\u0190';\n t['\\u2109'] = '\\u00B0\\u0046';\n t['\\u2116'] = '\\u004E\\u006F';\n t['\\u2121'] = '\\u0054\\u0045\\u004C';\n t['\\u2135'] = '\\u05D0';\n t['\\u2136'] = '\\u05D1';\n t['\\u2137'] = '\\u05D2';\n t['\\u2138'] = '\\u05D3';\n t['\\u213B'] = '\\u0046\\u0041\\u0058';\n t['\\u2160'] = '\\u0049';\n t['\\u2161'] = '\\u0049\\u0049';\n t['\\u2162'] = '\\u0049\\u0049\\u0049';\n t['\\u2163'] = '\\u0049\\u0056';\n t['\\u2164'] = '\\u0056';\n t['\\u2165'] = '\\u0056\\u0049';\n t['\\u2166'] = '\\u0056\\u0049\\u0049';\n t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n t['\\u2168'] = '\\u0049\\u0058';\n t['\\u2169'] = '\\u0058';\n t['\\u216A'] = '\\u0058\\u0049';\n t['\\u216B'] = '\\u0058\\u0049\\u0049';\n t['\\u216C'] = '\\u004C';\n t['\\u216D'] = '\\u0043';\n t['\\u216E'] = '\\u0044';\n t['\\u216F'] = '\\u004D';\n t['\\u2170'] = '\\u0069';\n t['\\u2171'] = '\\u0069\\u0069';\n t['\\u2172'] = '\\u0069\\u0069\\u0069';\n t['\\u2173'] = '\\u0069\\u0076';\n t['\\u2174'] = '\\u0076';\n t['\\u2175'] = '\\u0076\\u0069';\n t['\\u2176'] = '\\u0076\\u0069\\u0069';\n t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n t['\\u2178'] = '\\u0069\\u0078';\n t['\\u2179'] = '\\u0078';\n t['\\u217A'] = '\\u0078\\u0069';\n t['\\u217B'] = '\\u0078\\u0069\\u0069';\n t['\\u217C'] = '\\u006C';\n t['\\u217D'] = '\\u0063';\n t['\\u217E'] = '\\u0064';\n t['\\u217F'] = '\\u006D';\n t['\\u222C'] = '\\u222B\\u222B';\n t['\\u222D'] = '\\u222B\\u222B\\u222B';\n t['\\u222F'] = '\\u222E\\u222E';\n t['\\u2230'] = '\\u222E\\u222E\\u222E';\n t['\\u2474'] = '\\u0028\\u0031\\u0029';\n t['\\u2475'] = '\\u0028\\u0032\\u0029';\n t['\\u2476'] = '\\u0028\\u0033\\u0029';\n t['\\u2477'] = '\\u0028\\u0034\\u0029';\n t['\\u2478'] = '\\u0028\\u0035\\u0029';\n t['\\u2479'] = '\\u0028\\u0036\\u0029';\n t['\\u247A'] = '\\u0028\\u0037\\u0029';\n t['\\u247B'] = '\\u0028\\u0038\\u0029';\n t['\\u247C'] = '\\u0028\\u0039\\u0029';\n t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n t['\\u2488'] = '\\u0031\\u002E';\n t['\\u2489'] = '\\u0032\\u002E';\n t['\\u248A'] = '\\u0033\\u002E';\n t['\\u248B'] = '\\u0034\\u002E';\n t['\\u248C'] = '\\u0035\\u002E';\n t['\\u248D'] = '\\u0036\\u002E';\n t['\\u248E'] = '\\u0037\\u002E';\n t['\\u248F'] = '\\u0038\\u002E';\n t['\\u2490'] = '\\u0039\\u002E';\n t['\\u2491'] = '\\u0031\\u0030\\u002E';\n t['\\u2492'] = '\\u0031\\u0031\\u002E';\n t['\\u2493'] = '\\u0031\\u0032\\u002E';\n t['\\u2494'] = '\\u0031\\u0033\\u002E';\n t['\\u2495'] = '\\u0031\\u0034\\u002E';\n t['\\u2496'] = '\\u0031\\u0035\\u002E';\n t['\\u2497'] = '\\u0031\\u0036\\u002E';\n t['\\u2498'] = '\\u0031\\u0037\\u002E';\n t['\\u2499'] = '\\u0031\\u0038\\u002E';\n t['\\u249A'] = '\\u0031\\u0039\\u002E';\n t['\\u249B'] = '\\u0032\\u0030\\u002E';\n t['\\u249C'] = '\\u0028\\u0061\\u0029';\n t['\\u249D'] = '\\u0028\\u0062\\u0029';\n t['\\u249E'] = '\\u0028\\u0063\\u0029';\n t['\\u249F'] = '\\u0028\\u0064\\u0029';\n t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n t['\\u2A75'] = '\\u003D\\u003D';\n t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n t['\\u2E9F'] = '\\u6BCD';\n t['\\u2EF3'] = '\\u9F9F';\n t['\\u2F00'] = '\\u4E00';\n t['\\u2F01'] = '\\u4E28';\n t['\\u2F02'] = '\\u4E36';\n t['\\u2F03'] = '\\u4E3F';\n t['\\u2F04'] = '\\u4E59';\n t['\\u2F05'] = '\\u4E85';\n t['\\u2F06'] = '\\u4E8C';\n t['\\u2F07'] = '\\u4EA0';\n t['\\u2F08'] = '\\u4EBA';\n t['\\u2F09'] = '\\u513F';\n t['\\u2F0A'] = '\\u5165';\n t['\\u2F0B'] = '\\u516B';\n t['\\u2F0C'] = '\\u5182';\n t['\\u2F0D'] = '\\u5196';\n t['\\u2F0E'] = '\\u51AB';\n t['\\u2F0F'] = '\\u51E0';\n t['\\u2F10'] = '\\u51F5';\n t['\\u2F11'] = '\\u5200';\n t['\\u2F12'] = '\\u529B';\n t['\\u2F13'] = '\\u52F9';\n t['\\u2F14'] = '\\u5315';\n t['\\u2F15'] = '\\u531A';\n t['\\u2F16'] = '\\u5338';\n t['\\u2F17'] = '\\u5341';\n t['\\u2F18'] = '\\u535C';\n t['\\u2F19'] = '\\u5369';\n t['\\u2F1A'] = '\\u5382';\n t['\\u2F1B'] = '\\u53B6';\n t['\\u2F1C'] = '\\u53C8';\n t['\\u2F1D'] = '\\u53E3';\n t['\\u2F1E'] = '\\u56D7';\n t['\\u2F1F'] = '\\u571F';\n t['\\u2F20'] = '\\u58EB';\n t['\\u2F21'] = '\\u5902';\n t['\\u2F22'] = '\\u590A';\n t['\\u2F23'] = '\\u5915';\n t['\\u2F24'] = '\\u5927';\n t['\\u2F25'] = '\\u5973';\n t['\\u2F26'] = '\\u5B50';\n t['\\u2F27'] = '\\u5B80';\n t['\\u2F28'] = '\\u5BF8';\n t['\\u2F29'] = '\\u5C0F';\n t['\\u2F2A'] = '\\u5C22';\n t['\\u2F2B'] = '\\u5C38';\n t['\\u2F2C'] = '\\u5C6E';\n t['\\u2F2D'] = '\\u5C71';\n t['\\u2F2E'] = '\\u5DDB';\n t['\\u2F2F'] = '\\u5DE5';\n t['\\u2F30'] = '\\u5DF1';\n t['\\u2F31'] = '\\u5DFE';\n t['\\u2F32'] = '\\u5E72';\n t['\\u2F33'] = '\\u5E7A';\n t['\\u2F34'] = '\\u5E7F';\n t['\\u2F35'] = '\\u5EF4';\n t['\\u2F36'] = '\\u5EFE';\n t['\\u2F37'] = '\\u5F0B';\n t['\\u2F38'] = '\\u5F13';\n t['\\u2F39'] = '\\u5F50';\n t['\\u2F3A'] = '\\u5F61';\n t['\\u2F3B'] = '\\u5F73';\n t['\\u2F3C'] = '\\u5FC3';\n t['\\u2F3D'] = '\\u6208';\n t['\\u2F3E'] = '\\u6236';\n t['\\u2F3F'] = '\\u624B';\n t['\\u2F40'] = '\\u652F';\n t['\\u2F41'] = '\\u6534';\n t['\\u2F42'] = '\\u6587';\n t['\\u2F43'] = '\\u6597';\n t['\\u2F44'] = '\\u65A4';\n t['\\u2F45'] = '\\u65B9';\n t['\\u2F46'] = '\\u65E0';\n t['\\u2F47'] = '\\u65E5';\n t['\\u2F48'] = '\\u66F0';\n t['\\u2F49'] = '\\u6708';\n t['\\u2F4A'] = '\\u6728';\n t['\\u2F4B'] = '\\u6B20';\n t['\\u2F4C'] = '\\u6B62';\n t['\\u2F4D'] = '\\u6B79';\n t['\\u2F4E'] = '\\u6BB3';\n t['\\u2F4F'] = '\\u6BCB';\n t['\\u2F50'] = '\\u6BD4';\n t['\\u2F51'] = '\\u6BDB';\n t['\\u2F52'] = '\\u6C0F';\n t['\\u2F53'] = '\\u6C14';\n t['\\u2F54'] = '\\u6C34';\n t['\\u2F55'] = '\\u706B';\n t['\\u2F56'] = '\\u722A';\n t['\\u2F57'] = '\\u7236';\n t['\\u2F58'] = '\\u723B';\n t['\\u2F59'] = '\\u723F';\n t['\\u2F5A'] = '\\u7247';\n t['\\u2F5B'] = '\\u7259';\n t['\\u2F5C'] = '\\u725B';\n t['\\u2F5D'] = '\\u72AC';\n t['\\u2F5E'] = '\\u7384';\n t['\\u2F5F'] = '\\u7389';\n t['\\u2F60'] = '\\u74DC';\n t['\\u2F61'] = '\\u74E6';\n t['\\u2F62'] = '\\u7518';\n t['\\u2F63'] = '\\u751F';\n t['\\u2F64'] = '\\u7528';\n t['\\u2F65'] = '\\u7530';\n t['\\u2F66'] = '\\u758B';\n t['\\u2F67'] = '\\u7592';\n t['\\u2F68'] = '\\u7676';\n t['\\u2F69'] = '\\u767D';\n t['\\u2F6A'] = '\\u76AE';\n t['\\u2F6B'] = '\\u76BF';\n t['\\u2F6C'] = '\\u76EE';\n t['\\u2F6D'] = '\\u77DB';\n t['\\u2F6E'] = '\\u77E2';\n t['\\u2F6F'] = '\\u77F3';\n t['\\u2F70'] = '\\u793A';\n t['\\u2F71'] = '\\u79B8';\n t['\\u2F72'] = '\\u79BE';\n t['\\u2F73'] = '\\u7A74';\n t['\\u2F74'] = '\\u7ACB';\n t['\\u2F75'] = '\\u7AF9';\n t['\\u2F76'] = '\\u7C73';\n t['\\u2F77'] = '\\u7CF8';\n t['\\u2F78'] = '\\u7F36';\n t['\\u2F79'] = '\\u7F51';\n t['\\u2F7A'] = '\\u7F8A';\n t['\\u2F7B'] = '\\u7FBD';\n t['\\u2F7C'] = '\\u8001';\n t['\\u2F7D'] = '\\u800C';\n t['\\u2F7E'] = '\\u8012';\n t['\\u2F7F'] = '\\u8033';\n t['\\u2F80'] = '\\u807F';\n t['\\u2F81'] = '\\u8089';\n t['\\u2F82'] = '\\u81E3';\n t['\\u2F83'] = '\\u81EA';\n t['\\u2F84'] = '\\u81F3';\n t['\\u2F85'] = '\\u81FC';\n t['\\u2F86'] = '\\u820C';\n t['\\u2F87'] = '\\u821B';\n t['\\u2F88'] = '\\u821F';\n t['\\u2F89'] = '\\u826E';\n t['\\u2F8A'] = '\\u8272';\n t['\\u2F8B'] = '\\u8278';\n t['\\u2F8C'] = '\\u864D';\n t['\\u2F8D'] = '\\u866B';\n t['\\u2F8E'] = '\\u8840';\n t['\\u2F8F'] = '\\u884C';\n t['\\u2F90'] = '\\u8863';\n t['\\u2F91'] = '\\u897E';\n t['\\u2F92'] = '\\u898B';\n t['\\u2F93'] = '\\u89D2';\n t['\\u2F94'] = '\\u8A00';\n t['\\u2F95'] = '\\u8C37';\n t['\\u2F96'] = '\\u8C46';\n t['\\u2F97'] = '\\u8C55';\n t['\\u2F98'] = '\\u8C78';\n t['\\u2F99'] = '\\u8C9D';\n t['\\u2F9A'] = '\\u8D64';\n t['\\u2F9B'] = '\\u8D70';\n t['\\u2F9C'] = '\\u8DB3';\n t['\\u2F9D'] = '\\u8EAB';\n t['\\u2F9E'] = '\\u8ECA';\n t['\\u2F9F'] = '\\u8F9B';\n t['\\u2FA0'] = '\\u8FB0';\n t['\\u2FA1'] = '\\u8FB5';\n t['\\u2FA2'] = '\\u9091';\n t['\\u2FA3'] = '\\u9149';\n t['\\u2FA4'] = '\\u91C6';\n t['\\u2FA5'] = '\\u91CC';\n t['\\u2FA6'] = '\\u91D1';\n t['\\u2FA7'] = '\\u9577';\n t['\\u2FA8'] = '\\u9580';\n t['\\u2FA9'] = '\\u961C';\n t['\\u2FAA'] = '\\u96B6';\n t['\\u2FAB'] = '\\u96B9';\n t['\\u2FAC'] = '\\u96E8';\n t['\\u2FAD'] = '\\u9751';\n t['\\u2FAE'] = '\\u975E';\n t['\\u2FAF'] = '\\u9762';\n t['\\u2FB0'] = '\\u9769';\n t['\\u2FB1'] = '\\u97CB';\n t['\\u2FB2'] = '\\u97ED';\n t['\\u2FB3'] = '\\u97F3';\n t['\\u2FB4'] = '\\u9801';\n t['\\u2FB5'] = '\\u98A8';\n t['\\u2FB6'] = '\\u98DB';\n t['\\u2FB7'] = '\\u98DF';\n t['\\u2FB8'] = '\\u9996';\n t['\\u2FB9'] = '\\u9999';\n t['\\u2FBA'] = '\\u99AC';\n t['\\u2FBB'] = '\\u9AA8';\n t['\\u2FBC'] = '\\u9AD8';\n t['\\u2FBD'] = '\\u9ADF';\n t['\\u2FBE'] = '\\u9B25';\n t['\\u2FBF'] = '\\u9B2F';\n t['\\u2FC0'] = '\\u9B32';\n t['\\u2FC1'] = '\\u9B3C';\n t['\\u2FC2'] = '\\u9B5A';\n t['\\u2FC3'] = '\\u9CE5';\n t['\\u2FC4'] = '\\u9E75';\n t['\\u2FC5'] = '\\u9E7F';\n t['\\u2FC6'] = '\\u9EA5';\n t['\\u2FC7'] = '\\u9EBB';\n t['\\u2FC8'] = '\\u9EC3';\n t['\\u2FC9'] = '\\u9ECD';\n t['\\u2FCA'] = '\\u9ED1';\n t['\\u2FCB'] = '\\u9EF9';\n t['\\u2FCC'] = '\\u9EFD';\n t['\\u2FCD'] = '\\u9F0E';\n t['\\u2FCE'] = '\\u9F13';\n t['\\u2FCF'] = '\\u9F20';\n t['\\u2FD0'] = '\\u9F3B';\n t['\\u2FD1'] = '\\u9F4A';\n t['\\u2FD2'] = '\\u9F52';\n t['\\u2FD3'] = '\\u9F8D';\n t['\\u2FD4'] = '\\u9F9C';\n t['\\u2FD5'] = '\\u9FA0';\n t['\\u3036'] = '\\u3012';\n t['\\u3038'] = '\\u5341';\n t['\\u3039'] = '\\u5344';\n t['\\u303A'] = '\\u5345';\n t['\\u309B'] = '\\u0020\\u3099';\n t['\\u309C'] = '\\u0020\\u309A';\n t['\\u3131'] = '\\u1100';\n t['\\u3132'] = '\\u1101';\n t['\\u3133'] = '\\u11AA';\n t['\\u3134'] = '\\u1102';\n t['\\u3135'] = '\\u11AC';\n t['\\u3136'] = '\\u11AD';\n t['\\u3137'] = '\\u1103';\n t['\\u3138'] = '\\u1104';\n t['\\u3139'] = '\\u1105';\n t['\\u313A'] = '\\u11B0';\n t['\\u313B'] = '\\u11B1';\n t['\\u313C'] = '\\u11B2';\n t['\\u313D'] = '\\u11B3';\n t['\\u313E'] = '\\u11B4';\n t['\\u313F'] = '\\u11B5';\n t['\\u3140'] = '\\u111A';\n t['\\u3141'] = '\\u1106';\n t['\\u3142'] = '\\u1107';\n t['\\u3143'] = '\\u1108';\n t['\\u3144'] = '\\u1121';\n t['\\u3145'] = '\\u1109';\n t['\\u3146'] = '\\u110A';\n t['\\u3147'] = '\\u110B';\n t['\\u3148'] = '\\u110C';\n t['\\u3149'] = '\\u110D';\n t['\\u314A'] = '\\u110E';\n t['\\u314B'] = '\\u110F';\n t['\\u314C'] = '\\u1110';\n t['\\u314D'] = '\\u1111';\n t['\\u314E'] = '\\u1112';\n t['\\u314F'] = '\\u1161';\n t['\\u3150'] = '\\u1162';\n t['\\u3151'] = '\\u1163';\n t['\\u3152'] = '\\u1164';\n t['\\u3153'] = '\\u1165';\n t['\\u3154'] = '\\u1166';\n t['\\u3155'] = '\\u1167';\n t['\\u3156'] = '\\u1168';\n t['\\u3157'] = '\\u1169';\n t['\\u3158'] = '\\u116A';\n t['\\u3159'] = '\\u116B';\n t['\\u315A'] = '\\u116C';\n t['\\u315B'] = '\\u116D';\n t['\\u315C'] = '\\u116E';\n t['\\u315D'] = '\\u116F';\n t['\\u315E'] = '\\u1170';\n t['\\u315F'] = '\\u1171';\n t['\\u3160'] = '\\u1172';\n t['\\u3161'] = '\\u1173';\n t['\\u3162'] = '\\u1174';\n t['\\u3163'] = '\\u1175';\n t['\\u3164'] = '\\u1160';\n t['\\u3165'] = '\\u1114';\n t['\\u3166'] = '\\u1115';\n t['\\u3167'] = '\\u11C7';\n t['\\u3168'] = '\\u11C8';\n t['\\u3169'] = '\\u11CC';\n t['\\u316A'] = '\\u11CE';\n t['\\u316B'] = '\\u11D3';\n t['\\u316C'] = '\\u11D7';\n t['\\u316D'] = '\\u11D9';\n t['\\u316E'] = '\\u111C';\n t['\\u316F'] = '\\u11DD';\n t['\\u3170'] = '\\u11DF';\n t['\\u3171'] = '\\u111D';\n t['\\u3172'] = '\\u111E';\n t['\\u3173'] = '\\u1120';\n t['\\u3174'] = '\\u1122';\n t['\\u3175'] = '\\u1123';\n t['\\u3176'] = '\\u1127';\n t['\\u3177'] = '\\u1129';\n t['\\u3178'] = '\\u112B';\n t['\\u3179'] = '\\u112C';\n t['\\u317A'] = '\\u112D';\n t['\\u317B'] = '\\u112E';\n t['\\u317C'] = '\\u112F';\n t['\\u317D'] = '\\u1132';\n t['\\u317E'] = '\\u1136';\n t['\\u317F'] = '\\u1140';\n t['\\u3180'] = '\\u1147';\n t['\\u3181'] = '\\u114C';\n t['\\u3182'] = '\\u11F1';\n t['\\u3183'] = '\\u11F2';\n t['\\u3184'] = '\\u1157';\n t['\\u3185'] = '\\u1158';\n t['\\u3186'] = '\\u1159';\n t['\\u3187'] = '\\u1184';\n t['\\u3188'] = '\\u1185';\n t['\\u3189'] = '\\u1188';\n t['\\u318A'] = '\\u1191';\n t['\\u318B'] = '\\u1192';\n t['\\u318C'] = '\\u1194';\n t['\\u318D'] = '\\u119E';\n t['\\u318E'] = '\\u11A1';\n t['\\u3200'] = '\\u0028\\u1100\\u0029';\n t['\\u3201'] = '\\u0028\\u1102\\u0029';\n t['\\u3202'] = '\\u0028\\u1103\\u0029';\n t['\\u3203'] = '\\u0028\\u1105\\u0029';\n t['\\u3204'] = '\\u0028\\u1106\\u0029';\n t['\\u3205'] = '\\u0028\\u1107\\u0029';\n t['\\u3206'] = '\\u0028\\u1109\\u0029';\n t['\\u3207'] = '\\u0028\\u110B\\u0029';\n t['\\u3208'] = '\\u0028\\u110C\\u0029';\n t['\\u3209'] = '\\u0028\\u110E\\u0029';\n t['\\u320A'] = '\\u0028\\u110F\\u0029';\n t['\\u320B'] = '\\u0028\\u1110\\u0029';\n t['\\u320C'] = '\\u0028\\u1111\\u0029';\n t['\\u320D'] = '\\u0028\\u1112\\u0029';\n t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n t['\\u3225'] = '\\u0028\\u516D\\u0029';\n t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n t['\\u3227'] = '\\u0028\\u516B\\u0029';\n t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n t['\\u3229'] = '\\u0028\\u5341\\u0029';\n t['\\u322A'] = '\\u0028\\u6708\\u0029';\n t['\\u322B'] = '\\u0028\\u706B\\u0029';\n t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n t['\\u322D'] = '\\u0028\\u6728\\u0029';\n t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n t['\\u322F'] = '\\u0028\\u571F\\u0029';\n t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n t['\\u3231'] = '\\u0028\\u682A\\u0029';\n t['\\u3232'] = '\\u0028\\u6709\\u0029';\n t['\\u3233'] = '\\u0028\\u793E\\u0029';\n t['\\u3234'] = '\\u0028\\u540D\\u0029';\n t['\\u3235'] = '\\u0028\\u7279\\u0029';\n t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n t['\\u3237'] = '\\u0028\\u795D\\u0029';\n t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n t['\\u323A'] = '\\u0028\\u547C\\u0029';\n t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n t['\\u323F'] = '\\u0028\\u5354\\u0029';\n t['\\u3240'] = '\\u0028\\u796D\\u0029';\n t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n t['\\u32C0'] = '\\u0031\\u6708';\n t['\\u32C1'] = '\\u0032\\u6708';\n t['\\u32C2'] = '\\u0033\\u6708';\n t['\\u32C3'] = '\\u0034\\u6708';\n t['\\u32C4'] = '\\u0035\\u6708';\n t['\\u32C5'] = '\\u0036\\u6708';\n t['\\u32C6'] = '\\u0037\\u6708';\n t['\\u32C7'] = '\\u0038\\u6708';\n t['\\u32C8'] = '\\u0039\\u6708';\n t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n t['\\u3358'] = '\\u0030\\u70B9';\n t['\\u3359'] = '\\u0031\\u70B9';\n t['\\u335A'] = '\\u0032\\u70B9';\n t['\\u335B'] = '\\u0033\\u70B9';\n t['\\u335C'] = '\\u0034\\u70B9';\n t['\\u335D'] = '\\u0035\\u70B9';\n t['\\u335E'] = '\\u0036\\u70B9';\n t['\\u335F'] = '\\u0037\\u70B9';\n t['\\u3360'] = '\\u0038\\u70B9';\n t['\\u3361'] = '\\u0039\\u70B9';\n t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n t['\\u33E0'] = '\\u0031\\u65E5';\n t['\\u33E1'] = '\\u0032\\u65E5';\n t['\\u33E2'] = '\\u0033\\u65E5';\n t['\\u33E3'] = '\\u0034\\u65E5';\n t['\\u33E4'] = '\\u0035\\u65E5';\n t['\\u33E5'] = '\\u0036\\u65E5';\n t['\\u33E6'] = '\\u0037\\u65E5';\n t['\\u33E7'] = '\\u0038\\u65E5';\n t['\\u33E8'] = '\\u0039\\u65E5';\n t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n t['\\uFB00'] = '\\u0066\\u0066';\n t['\\uFB01'] = '\\u0066\\u0069';\n t['\\uFB02'] = '\\u0066\\u006C';\n t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n t['\\uFB05'] = '\\u017F\\u0074';\n t['\\uFB06'] = '\\u0073\\u0074';\n t['\\uFB13'] = '\\u0574\\u0576';\n t['\\uFB14'] = '\\u0574\\u0565';\n t['\\uFB15'] = '\\u0574\\u056B';\n t['\\uFB16'] = '\\u057E\\u0576';\n t['\\uFB17'] = '\\u0574\\u056D';\n t['\\uFB4F'] = '\\u05D0\\u05DC';\n t['\\uFB50'] = '\\u0671';\n t['\\uFB51'] = '\\u0671';\n t['\\uFB52'] = '\\u067B';\n t['\\uFB53'] = '\\u067B';\n t['\\uFB54'] = '\\u067B';\n t['\\uFB55'] = '\\u067B';\n t['\\uFB56'] = '\\u067E';\n t['\\uFB57'] = '\\u067E';\n t['\\uFB58'] = '\\u067E';\n t['\\uFB59'] = '\\u067E';\n t['\\uFB5A'] = '\\u0680';\n t['\\uFB5B'] = '\\u0680';\n t['\\uFB5C'] = '\\u0680';\n t['\\uFB5D'] = '\\u0680';\n t['\\uFB5E'] = '\\u067A';\n t['\\uFB5F'] = '\\u067A';\n t['\\uFB60'] = '\\u067A';\n t['\\uFB61'] = '\\u067A';\n t['\\uFB62'] = '\\u067F';\n t['\\uFB63'] = '\\u067F';\n t['\\uFB64'] = '\\u067F';\n t['\\uFB65'] = '\\u067F';\n t['\\uFB66'] = '\\u0679';\n t['\\uFB67'] = '\\u0679';\n t['\\uFB68'] = '\\u0679';\n t['\\uFB69'] = '\\u0679';\n t['\\uFB6A'] = '\\u06A4';\n t['\\uFB6B'] = '\\u06A4';\n t['\\uFB6C'] = '\\u06A4';\n t['\\uFB6D'] = '\\u06A4';\n t['\\uFB6E'] = '\\u06A6';\n t['\\uFB6F'] = '\\u06A6';\n t['\\uFB70'] = '\\u06A6';\n t['\\uFB71'] = '\\u06A6';\n t['\\uFB72'] = '\\u0684';\n t['\\uFB73'] = '\\u0684';\n t['\\uFB74'] = '\\u0684';\n t['\\uFB75'] = '\\u0684';\n t['\\uFB76'] = '\\u0683';\n t['\\uFB77'] = '\\u0683';\n t['\\uFB78'] = '\\u0683';\n t['\\uFB79'] = '\\u0683';\n t['\\uFB7A'] = '\\u0686';\n t['\\uFB7B'] = '\\u0686';\n t['\\uFB7C'] = '\\u0686';\n t['\\uFB7D'] = '\\u0686';\n t['\\uFB7E'] = '\\u0687';\n t['\\uFB7F'] = '\\u0687';\n t['\\uFB80'] = '\\u0687';\n t['\\uFB81'] = '\\u0687';\n t['\\uFB82'] = '\\u068D';\n t['\\uFB83'] = '\\u068D';\n t['\\uFB84'] = '\\u068C';\n t['\\uFB85'] = '\\u068C';\n t['\\uFB86'] = '\\u068E';\n t['\\uFB87'] = '\\u068E';\n t['\\uFB88'] = '\\u0688';\n t['\\uFB89'] = '\\u0688';\n t['\\uFB8A'] = '\\u0698';\n t['\\uFB8B'] = '\\u0698';\n t['\\uFB8C'] = '\\u0691';\n t['\\uFB8D'] = '\\u0691';\n t['\\uFB8E'] = '\\u06A9';\n t['\\uFB8F'] = '\\u06A9';\n t['\\uFB90'] = '\\u06A9';\n t['\\uFB91'] = '\\u06A9';\n t['\\uFB92'] = '\\u06AF';\n t['\\uFB93'] = '\\u06AF';\n t['\\uFB94'] = '\\u06AF';\n t['\\uFB95'] = '\\u06AF';\n t['\\uFB96'] = '\\u06B3';\n t['\\uFB97'] = '\\u06B3';\n t['\\uFB98'] = '\\u06B3';\n t['\\uFB99'] = '\\u06B3';\n t['\\uFB9A'] = '\\u06B1';\n t['\\uFB9B'] = '\\u06B1';\n t['\\uFB9C'] = '\\u06B1';\n t['\\uFB9D'] = '\\u06B1';\n t['\\uFB9E'] = '\\u06BA';\n t['\\uFB9F'] = '\\u06BA';\n t['\\uFBA0'] = '\\u06BB';\n t['\\uFBA1'] = '\\u06BB';\n t['\\uFBA2'] = '\\u06BB';\n t['\\uFBA3'] = '\\u06BB';\n t['\\uFBA4'] = '\\u06C0';\n t['\\uFBA5'] = '\\u06C0';\n t['\\uFBA6'] = '\\u06C1';\n t['\\uFBA7'] = '\\u06C1';\n t['\\uFBA8'] = '\\u06C1';\n t['\\uFBA9'] = '\\u06C1';\n t['\\uFBAA'] = '\\u06BE';\n t['\\uFBAB'] = '\\u06BE';\n t['\\uFBAC'] = '\\u06BE';\n t['\\uFBAD'] = '\\u06BE';\n t['\\uFBAE'] = '\\u06D2';\n t['\\uFBAF'] = '\\u06D2';\n t['\\uFBB0'] = '\\u06D3';\n t['\\uFBB1'] = '\\u06D3';\n t['\\uFBD3'] = '\\u06AD';\n t['\\uFBD4'] = '\\u06AD';\n t['\\uFBD5'] = '\\u06AD';\n t['\\uFBD6'] = '\\u06AD';\n t['\\uFBD7'] = '\\u06C7';\n t['\\uFBD8'] = '\\u06C7';\n t['\\uFBD9'] = '\\u06C6';\n t['\\uFBDA'] = '\\u06C6';\n t['\\uFBDB'] = '\\u06C8';\n t['\\uFBDC'] = '\\u06C8';\n t['\\uFBDD'] = '\\u0677';\n t['\\uFBDE'] = '\\u06CB';\n t['\\uFBDF'] = '\\u06CB';\n t['\\uFBE0'] = '\\u06C5';\n t['\\uFBE1'] = '\\u06C5';\n t['\\uFBE2'] = '\\u06C9';\n t['\\uFBE3'] = '\\u06C9';\n t['\\uFBE4'] = '\\u06D0';\n t['\\uFBE5'] = '\\u06D0';\n t['\\uFBE6'] = '\\u06D0';\n t['\\uFBE7'] = '\\u06D0';\n t['\\uFBE8'] = '\\u0649';\n t['\\uFBE9'] = '\\u0649';\n t['\\uFBEA'] = '\\u0626\\u0627';\n t['\\uFBEB'] = '\\u0626\\u0627';\n t['\\uFBEC'] = '\\u0626\\u06D5';\n t['\\uFBED'] = '\\u0626\\u06D5';\n t['\\uFBEE'] = '\\u0626\\u0648';\n t['\\uFBEF'] = '\\u0626\\u0648';\n t['\\uFBF0'] = '\\u0626\\u06C7';\n t['\\uFBF1'] = '\\u0626\\u06C7';\n t['\\uFBF2'] = '\\u0626\\u06C6';\n t['\\uFBF3'] = '\\u0626\\u06C6';\n t['\\uFBF4'] = '\\u0626\\u06C8';\n t['\\uFBF5'] = '\\u0626\\u06C8';\n t['\\uFBF6'] = '\\u0626\\u06D0';\n t['\\uFBF7'] = '\\u0626\\u06D0';\n t['\\uFBF8'] = '\\u0626\\u06D0';\n t['\\uFBF9'] = '\\u0626\\u0649';\n t['\\uFBFA'] = '\\u0626\\u0649';\n t['\\uFBFB'] = '\\u0626\\u0649';\n t['\\uFBFC'] = '\\u06CC';\n t['\\uFBFD'] = '\\u06CC';\n t['\\uFBFE'] = '\\u06CC';\n t['\\uFBFF'] = '\\u06CC';\n t['\\uFC00'] = '\\u0626\\u062C';\n t['\\uFC01'] = '\\u0626\\u062D';\n t['\\uFC02'] = '\\u0626\\u0645';\n t['\\uFC03'] = '\\u0626\\u0649';\n t['\\uFC04'] = '\\u0626\\u064A';\n t['\\uFC05'] = '\\u0628\\u062C';\n t['\\uFC06'] = '\\u0628\\u062D';\n t['\\uFC07'] = '\\u0628\\u062E';\n t['\\uFC08'] = '\\u0628\\u0645';\n t['\\uFC09'] = '\\u0628\\u0649';\n t['\\uFC0A'] = '\\u0628\\u064A';\n t['\\uFC0B'] = '\\u062A\\u062C';\n t['\\uFC0C'] = '\\u062A\\u062D';\n t['\\uFC0D'] = '\\u062A\\u062E';\n t['\\uFC0E'] = '\\u062A\\u0645';\n t['\\uFC0F'] = '\\u062A\\u0649';\n t['\\uFC10'] = '\\u062A\\u064A';\n t['\\uFC11'] = '\\u062B\\u062C';\n t['\\uFC12'] = '\\u062B\\u0645';\n t['\\uFC13'] = '\\u062B\\u0649';\n t['\\uFC14'] = '\\u062B\\u064A';\n t['\\uFC15'] = '\\u062C\\u062D';\n t['\\uFC16'] = '\\u062C\\u0645';\n t['\\uFC17'] = '\\u062D\\u062C';\n t['\\uFC18'] = '\\u062D\\u0645';\n t['\\uFC19'] = '\\u062E\\u062C';\n t['\\uFC1A'] = '\\u062E\\u062D';\n t['\\uFC1B'] = '\\u062E\\u0645';\n t['\\uFC1C'] = '\\u0633\\u062C';\n t['\\uFC1D'] = '\\u0633\\u062D';\n t['\\uFC1E'] = '\\u0633\\u062E';\n t['\\uFC1F'] = '\\u0633\\u0645';\n t['\\uFC20'] = '\\u0635\\u062D';\n t['\\uFC21'] = '\\u0635\\u0645';\n t['\\uFC22'] = '\\u0636\\u062C';\n t['\\uFC23'] = '\\u0636\\u062D';\n t['\\uFC24'] = '\\u0636\\u062E';\n t['\\uFC25'] = '\\u0636\\u0645';\n t['\\uFC26'] = '\\u0637\\u062D';\n t['\\uFC27'] = '\\u0637\\u0645';\n t['\\uFC28'] = '\\u0638\\u0645';\n t['\\uFC29'] = '\\u0639\\u062C';\n t['\\uFC2A'] = '\\u0639\\u0645';\n t['\\uFC2B'] = '\\u063A\\u062C';\n t['\\uFC2C'] = '\\u063A\\u0645';\n t['\\uFC2D'] = '\\u0641\\u062C';\n t['\\uFC2E'] = '\\u0641\\u062D';\n t['\\uFC2F'] = '\\u0641\\u062E';\n t['\\uFC30'] = '\\u0641\\u0645';\n t['\\uFC31'] = '\\u0641\\u0649';\n t['\\uFC32'] = '\\u0641\\u064A';\n t['\\uFC33'] = '\\u0642\\u062D';\n t['\\uFC34'] = '\\u0642\\u0645';\n t['\\uFC35'] = '\\u0642\\u0649';\n t['\\uFC36'] = '\\u0642\\u064A';\n t['\\uFC37'] = '\\u0643\\u0627';\n t['\\uFC38'] = '\\u0643\\u062C';\n t['\\uFC39'] = '\\u0643\\u062D';\n t['\\uFC3A'] = '\\u0643\\u062E';\n t['\\uFC3B'] = '\\u0643\\u0644';\n t['\\uFC3C'] = '\\u0643\\u0645';\n t['\\uFC3D'] = '\\u0643\\u0649';\n t['\\uFC3E'] = '\\u0643\\u064A';\n t['\\uFC3F'] = '\\u0644\\u062C';\n t['\\uFC40'] = '\\u0644\\u062D';\n t['\\uFC41'] = '\\u0644\\u062E';\n t['\\uFC42'] = '\\u0644\\u0645';\n t['\\uFC43'] = '\\u0644\\u0649';\n t['\\uFC44'] = '\\u0644\\u064A';\n t['\\uFC45'] = '\\u0645\\u062C';\n t['\\uFC46'] = '\\u0645\\u062D';\n t['\\uFC47'] = '\\u0645\\u062E';\n t['\\uFC48'] = '\\u0645\\u0645';\n t['\\uFC49'] = '\\u0645\\u0649';\n t['\\uFC4A'] = '\\u0645\\u064A';\n t['\\uFC4B'] = '\\u0646\\u062C';\n t['\\uFC4C'] = '\\u0646\\u062D';\n t['\\uFC4D'] = '\\u0646\\u062E';\n t['\\uFC4E'] = '\\u0646\\u0645';\n t['\\uFC4F'] = '\\u0646\\u0649';\n t['\\uFC50'] = '\\u0646\\u064A';\n t['\\uFC51'] = '\\u0647\\u062C';\n t['\\uFC52'] = '\\u0647\\u0645';\n t['\\uFC53'] = '\\u0647\\u0649';\n t['\\uFC54'] = '\\u0647\\u064A';\n t['\\uFC55'] = '\\u064A\\u062C';\n t['\\uFC56'] = '\\u064A\\u062D';\n t['\\uFC57'] = '\\u064A\\u062E';\n t['\\uFC58'] = '\\u064A\\u0645';\n t['\\uFC59'] = '\\u064A\\u0649';\n t['\\uFC5A'] = '\\u064A\\u064A';\n t['\\uFC5B'] = '\\u0630\\u0670';\n t['\\uFC5C'] = '\\u0631\\u0670';\n t['\\uFC5D'] = '\\u0649\\u0670';\n t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n t['\\uFC64'] = '\\u0626\\u0631';\n t['\\uFC65'] = '\\u0626\\u0632';\n t['\\uFC66'] = '\\u0626\\u0645';\n t['\\uFC67'] = '\\u0626\\u0646';\n t['\\uFC68'] = '\\u0626\\u0649';\n t['\\uFC69'] = '\\u0626\\u064A';\n t['\\uFC6A'] = '\\u0628\\u0631';\n t['\\uFC6B'] = '\\u0628\\u0632';\n t['\\uFC6C'] = '\\u0628\\u0645';\n t['\\uFC6D'] = '\\u0628\\u0646';\n t['\\uFC6E'] = '\\u0628\\u0649';\n t['\\uFC6F'] = '\\u0628\\u064A';\n t['\\uFC70'] = '\\u062A\\u0631';\n t['\\uFC71'] = '\\u062A\\u0632';\n t['\\uFC72'] = '\\u062A\\u0645';\n t['\\uFC73'] = '\\u062A\\u0646';\n t['\\uFC74'] = '\\u062A\\u0649';\n t['\\uFC75'] = '\\u062A\\u064A';\n t['\\uFC76'] = '\\u062B\\u0631';\n t['\\uFC77'] = '\\u062B\\u0632';\n t['\\uFC78'] = '\\u062B\\u0645';\n t['\\uFC79'] = '\\u062B\\u0646';\n t['\\uFC7A'] = '\\u062B\\u0649';\n t['\\uFC7B'] = '\\u062B\\u064A';\n t['\\uFC7C'] = '\\u0641\\u0649';\n t['\\uFC7D'] = '\\u0641\\u064A';\n t['\\uFC7E'] = '\\u0642\\u0649';\n t['\\uFC7F'] = '\\u0642\\u064A';\n t['\\uFC80'] = '\\u0643\\u0627';\n t['\\uFC81'] = '\\u0643\\u0644';\n t['\\uFC82'] = '\\u0643\\u0645';\n t['\\uFC83'] = '\\u0643\\u0649';\n t['\\uFC84'] = '\\u0643\\u064A';\n t['\\uFC85'] = '\\u0644\\u0645';\n t['\\uFC86'] = '\\u0644\\u0649';\n t['\\uFC87'] = '\\u0644\\u064A';\n t['\\uFC88'] = '\\u0645\\u0627';\n t['\\uFC89'] = '\\u0645\\u0645';\n t['\\uFC8A'] = '\\u0646\\u0631';\n t['\\uFC8B'] = '\\u0646\\u0632';\n t['\\uFC8C'] = '\\u0646\\u0645';\n t['\\uFC8D'] = '\\u0646\\u0646';\n t['\\uFC8E'] = '\\u0646\\u0649';\n t['\\uFC8F'] = '\\u0646\\u064A';\n t['\\uFC90'] = '\\u0649\\u0670';\n t['\\uFC91'] = '\\u064A\\u0631';\n t['\\uFC92'] = '\\u064A\\u0632';\n t['\\uFC93'] = '\\u064A\\u0645';\n t['\\uFC94'] = '\\u064A\\u0646';\n t['\\uFC95'] = '\\u064A\\u0649';\n t['\\uFC96'] = '\\u064A\\u064A';\n t['\\uFC97'] = '\\u0626\\u062C';\n t['\\uFC98'] = '\\u0626\\u062D';\n t['\\uFC99'] = '\\u0626\\u062E';\n t['\\uFC9A'] = '\\u0626\\u0645';\n t['\\uFC9B'] = '\\u0626\\u0647';\n t['\\uFC9C'] = '\\u0628\\u062C';\n t['\\uFC9D'] = '\\u0628\\u062D';\n t['\\uFC9E'] = '\\u0628\\u062E';\n t['\\uFC9F'] = '\\u0628\\u0645';\n t['\\uFCA0'] = '\\u0628\\u0647';\n t['\\uFCA1'] = '\\u062A\\u062C';\n t['\\uFCA2'] = '\\u062A\\u062D';\n t['\\uFCA3'] = '\\u062A\\u062E';\n t['\\uFCA4'] = '\\u062A\\u0645';\n t['\\uFCA5'] = '\\u062A\\u0647';\n t['\\uFCA6'] = '\\u062B\\u0645';\n t['\\uFCA7'] = '\\u062C\\u062D';\n t['\\uFCA8'] = '\\u062C\\u0645';\n t['\\uFCA9'] = '\\u062D\\u062C';\n t['\\uFCAA'] = '\\u062D\\u0645';\n t['\\uFCAB'] = '\\u062E\\u062C';\n t['\\uFCAC'] = '\\u062E\\u0645';\n t['\\uFCAD'] = '\\u0633\\u062C';\n t['\\uFCAE'] = '\\u0633\\u062D';\n t['\\uFCAF'] = '\\u0633\\u062E';\n t['\\uFCB0'] = '\\u0633\\u0645';\n t['\\uFCB1'] = '\\u0635\\u062D';\n t['\\uFCB2'] = '\\u0635\\u062E';\n t['\\uFCB3'] = '\\u0635\\u0645';\n t['\\uFCB4'] = '\\u0636\\u062C';\n t['\\uFCB5'] = '\\u0636\\u062D';\n t['\\uFCB6'] = '\\u0636\\u062E';\n t['\\uFCB7'] = '\\u0636\\u0645';\n t['\\uFCB8'] = '\\u0637\\u062D';\n t['\\uFCB9'] = '\\u0638\\u0645';\n t['\\uFCBA'] = '\\u0639\\u062C';\n t['\\uFCBB'] = '\\u0639\\u0645';\n t['\\uFCBC'] = '\\u063A\\u062C';\n t['\\uFCBD'] = '\\u063A\\u0645';\n t['\\uFCBE'] = '\\u0641\\u062C';\n t['\\uFCBF'] = '\\u0641\\u062D';\n t['\\uFCC0'] = '\\u0641\\u062E';\n t['\\uFCC1'] = '\\u0641\\u0645';\n t['\\uFCC2'] = '\\u0642\\u062D';\n t['\\uFCC3'] = '\\u0642\\u0645';\n t['\\uFCC4'] = '\\u0643\\u062C';\n t['\\uFCC5'] = '\\u0643\\u062D';\n t['\\uFCC6'] = '\\u0643\\u062E';\n t['\\uFCC7'] = '\\u0643\\u0644';\n t['\\uFCC8'] = '\\u0643\\u0645';\n t['\\uFCC9'] = '\\u0644\\u062C';\n t['\\uFCCA'] = '\\u0644\\u062D';\n t['\\uFCCB'] = '\\u0644\\u062E';\n t['\\uFCCC'] = '\\u0644\\u0645';\n t['\\uFCCD'] = '\\u0644\\u0647';\n t['\\uFCCE'] = '\\u0645\\u062C';\n t['\\uFCCF'] = '\\u0645\\u062D';\n t['\\uFCD0'] = '\\u0645\\u062E';\n t['\\uFCD1'] = '\\u0645\\u0645';\n t['\\uFCD2'] = '\\u0646\\u062C';\n t['\\uFCD3'] = '\\u0646\\u062D';\n t['\\uFCD4'] = '\\u0646\\u062E';\n t['\\uFCD5'] = '\\u0646\\u0645';\n t['\\uFCD6'] = '\\u0646\\u0647';\n t['\\uFCD7'] = '\\u0647\\u062C';\n t['\\uFCD8'] = '\\u0647\\u0645';\n t['\\uFCD9'] = '\\u0647\\u0670';\n t['\\uFCDA'] = '\\u064A\\u062C';\n t['\\uFCDB'] = '\\u064A\\u062D';\n t['\\uFCDC'] = '\\u064A\\u062E';\n t['\\uFCDD'] = '\\u064A\\u0645';\n t['\\uFCDE'] = '\\u064A\\u0647';\n t['\\uFCDF'] = '\\u0626\\u0645';\n t['\\uFCE0'] = '\\u0626\\u0647';\n t['\\uFCE1'] = '\\u0628\\u0645';\n t['\\uFCE2'] = '\\u0628\\u0647';\n t['\\uFCE3'] = '\\u062A\\u0645';\n t['\\uFCE4'] = '\\u062A\\u0647';\n t['\\uFCE5'] = '\\u062B\\u0645';\n t['\\uFCE6'] = '\\u062B\\u0647';\n t['\\uFCE7'] = '\\u0633\\u0645';\n t['\\uFCE8'] = '\\u0633\\u0647';\n t['\\uFCE9'] = '\\u0634\\u0645';\n t['\\uFCEA'] = '\\u0634\\u0647';\n t['\\uFCEB'] = '\\u0643\\u0644';\n t['\\uFCEC'] = '\\u0643\\u0645';\n t['\\uFCED'] = '\\u0644\\u0645';\n t['\\uFCEE'] = '\\u0646\\u0645';\n t['\\uFCEF'] = '\\u0646\\u0647';\n t['\\uFCF0'] = '\\u064A\\u0645';\n t['\\uFCF1'] = '\\u064A\\u0647';\n t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n t['\\uFCF5'] = '\\u0637\\u0649';\n t['\\uFCF6'] = '\\u0637\\u064A';\n t['\\uFCF7'] = '\\u0639\\u0649';\n t['\\uFCF8'] = '\\u0639\\u064A';\n t['\\uFCF9'] = '\\u063A\\u0649';\n t['\\uFCFA'] = '\\u063A\\u064A';\n t['\\uFCFB'] = '\\u0633\\u0649';\n t['\\uFCFC'] = '\\u0633\\u064A';\n t['\\uFCFD'] = '\\u0634\\u0649';\n t['\\uFCFE'] = '\\u0634\\u064A';\n t['\\uFCFF'] = '\\u062D\\u0649';\n t['\\uFD00'] = '\\u062D\\u064A';\n t['\\uFD01'] = '\\u062C\\u0649';\n t['\\uFD02'] = '\\u062C\\u064A';\n t['\\uFD03'] = '\\u062E\\u0649';\n t['\\uFD04'] = '\\u062E\\u064A';\n t['\\uFD05'] = '\\u0635\\u0649';\n t['\\uFD06'] = '\\u0635\\u064A';\n t['\\uFD07'] = '\\u0636\\u0649';\n t['\\uFD08'] = '\\u0636\\u064A';\n t['\\uFD09'] = '\\u0634\\u062C';\n t['\\uFD0A'] = '\\u0634\\u062D';\n t['\\uFD0B'] = '\\u0634\\u062E';\n t['\\uFD0C'] = '\\u0634\\u0645';\n t['\\uFD0D'] = '\\u0634\\u0631';\n t['\\uFD0E'] = '\\u0633\\u0631';\n t['\\uFD0F'] = '\\u0635\\u0631';\n t['\\uFD10'] = '\\u0636\\u0631';\n t['\\uFD11'] = '\\u0637\\u0649';\n t['\\uFD12'] = '\\u0637\\u064A';\n t['\\uFD13'] = '\\u0639\\u0649';\n t['\\uFD14'] = '\\u0639\\u064A';\n t['\\uFD15'] = '\\u063A\\u0649';\n t['\\uFD16'] = '\\u063A\\u064A';\n t['\\uFD17'] = '\\u0633\\u0649';\n t['\\uFD18'] = '\\u0633\\u064A';\n t['\\uFD19'] = '\\u0634\\u0649';\n t['\\uFD1A'] = '\\u0634\\u064A';\n t['\\uFD1B'] = '\\u062D\\u0649';\n t['\\uFD1C'] = '\\u062D\\u064A';\n t['\\uFD1D'] = '\\u062C\\u0649';\n t['\\uFD1E'] = '\\u062C\\u064A';\n t['\\uFD1F'] = '\\u062E\\u0649';\n t['\\uFD20'] = '\\u062E\\u064A';\n t['\\uFD21'] = '\\u0635\\u0649';\n t['\\uFD22'] = '\\u0635\\u064A';\n t['\\uFD23'] = '\\u0636\\u0649';\n t['\\uFD24'] = '\\u0636\\u064A';\n t['\\uFD25'] = '\\u0634\\u062C';\n t['\\uFD26'] = '\\u0634\\u062D';\n t['\\uFD27'] = '\\u0634\\u062E';\n t['\\uFD28'] = '\\u0634\\u0645';\n t['\\uFD29'] = '\\u0634\\u0631';\n t['\\uFD2A'] = '\\u0633\\u0631';\n t['\\uFD2B'] = '\\u0635\\u0631';\n t['\\uFD2C'] = '\\u0636\\u0631';\n t['\\uFD2D'] = '\\u0634\\u062C';\n t['\\uFD2E'] = '\\u0634\\u062D';\n t['\\uFD2F'] = '\\u0634\\u062E';\n t['\\uFD30'] = '\\u0634\\u0645';\n t['\\uFD31'] = '\\u0633\\u0647';\n t['\\uFD32'] = '\\u0634\\u0647';\n t['\\uFD33'] = '\\u0637\\u0645';\n t['\\uFD34'] = '\\u0633\\u062C';\n t['\\uFD35'] = '\\u0633\\u062D';\n t['\\uFD36'] = '\\u0633\\u062E';\n t['\\uFD37'] = '\\u0634\\u062C';\n t['\\uFD38'] = '\\u0634\\u062D';\n t['\\uFD39'] = '\\u0634\\u062E';\n t['\\uFD3A'] = '\\u0637\\u0645';\n t['\\uFD3B'] = '\\u0638\\u0645';\n t['\\uFD3C'] = '\\u0627\\u064B';\n t['\\uFD3D'] = '\\u0627\\u064B';\n t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n t['\\uFE49'] = '\\u203E';\n t['\\uFE4A'] = '\\u203E';\n t['\\uFE4B'] = '\\u203E';\n t['\\uFE4C'] = '\\u203E';\n t['\\uFE4D'] = '\\u005F';\n t['\\uFE4E'] = '\\u005F';\n t['\\uFE4F'] = '\\u005F';\n t['\\uFE80'] = '\\u0621';\n t['\\uFE81'] = '\\u0622';\n t['\\uFE82'] = '\\u0622';\n t['\\uFE83'] = '\\u0623';\n t['\\uFE84'] = '\\u0623';\n t['\\uFE85'] = '\\u0624';\n t['\\uFE86'] = '\\u0624';\n t['\\uFE87'] = '\\u0625';\n t['\\uFE88'] = '\\u0625';\n t['\\uFE89'] = '\\u0626';\n t['\\uFE8A'] = '\\u0626';\n t['\\uFE8B'] = '\\u0626';\n t['\\uFE8C'] = '\\u0626';\n t['\\uFE8D'] = '\\u0627';\n t['\\uFE8E'] = '\\u0627';\n t['\\uFE8F'] = '\\u0628';\n t['\\uFE90'] = '\\u0628';\n t['\\uFE91'] = '\\u0628';\n t['\\uFE92'] = '\\u0628';\n t['\\uFE93'] = '\\u0629';\n t['\\uFE94'] = '\\u0629';\n t['\\uFE95'] = '\\u062A';\n t['\\uFE96'] = '\\u062A';\n t['\\uFE97'] = '\\u062A';\n t['\\uFE98'] = '\\u062A';\n t['\\uFE99'] = '\\u062B';\n t['\\uFE9A'] = '\\u062B';\n t['\\uFE9B'] = '\\u062B';\n t['\\uFE9C'] = '\\u062B';\n t['\\uFE9D'] = '\\u062C';\n t['\\uFE9E'] = '\\u062C';\n t['\\uFE9F'] = '\\u062C';\n t['\\uFEA0'] = '\\u062C';\n t['\\uFEA1'] = '\\u062D';\n t['\\uFEA2'] = '\\u062D';\n t['\\uFEA3'] = '\\u062D';\n t['\\uFEA4'] = '\\u062D';\n t['\\uFEA5'] = '\\u062E';\n t['\\uFEA6'] = '\\u062E';\n t['\\uFEA7'] = '\\u062E';\n t['\\uFEA8'] = '\\u062E';\n t['\\uFEA9'] = '\\u062F';\n t['\\uFEAA'] = '\\u062F';\n t['\\uFEAB'] = '\\u0630';\n t['\\uFEAC'] = '\\u0630';\n t['\\uFEAD'] = '\\u0631';\n t['\\uFEAE'] = '\\u0631';\n t['\\uFEAF'] = '\\u0632';\n t['\\uFEB0'] = '\\u0632';\n t['\\uFEB1'] = '\\u0633';\n t['\\uFEB2'] = '\\u0633';\n t['\\uFEB3'] = '\\u0633';\n t['\\uFEB4'] = '\\u0633';\n t['\\uFEB5'] = '\\u0634';\n t['\\uFEB6'] = '\\u0634';\n t['\\uFEB7'] = '\\u0634';\n t['\\uFEB8'] = '\\u0634';\n t['\\uFEB9'] = '\\u0635';\n t['\\uFEBA'] = '\\u0635';\n t['\\uFEBB'] = '\\u0635';\n t['\\uFEBC'] = '\\u0635';\n t['\\uFEBD'] = '\\u0636';\n t['\\uFEBE'] = '\\u0636';\n t['\\uFEBF'] = '\\u0636';\n t['\\uFEC0'] = '\\u0636';\n t['\\uFEC1'] = '\\u0637';\n t['\\uFEC2'] = '\\u0637';\n t['\\uFEC3'] = '\\u0637';\n t['\\uFEC4'] = '\\u0637';\n t['\\uFEC5'] = '\\u0638';\n t['\\uFEC6'] = '\\u0638';\n t['\\uFEC7'] = '\\u0638';\n t['\\uFEC8'] = '\\u0638';\n t['\\uFEC9'] = '\\u0639';\n t['\\uFECA'] = '\\u0639';\n t['\\uFECB'] = '\\u0639';\n t['\\uFECC'] = '\\u0639';\n t['\\uFECD'] = '\\u063A';\n t['\\uFECE'] = '\\u063A';\n t['\\uFECF'] = '\\u063A';\n t['\\uFED0'] = '\\u063A';\n t['\\uFED1'] = '\\u0641';\n t['\\uFED2'] = '\\u0641';\n t['\\uFED3'] = '\\u0641';\n t['\\uFED4'] = '\\u0641';\n t['\\uFED5'] = '\\u0642';\n t['\\uFED6'] = '\\u0642';\n t['\\uFED7'] = '\\u0642';\n t['\\uFED8'] = '\\u0642';\n t['\\uFED9'] = '\\u0643';\n t['\\uFEDA'] = '\\u0643';\n t['\\uFEDB'] = '\\u0643';\n t['\\uFEDC'] = '\\u0643';\n t['\\uFEDD'] = '\\u0644';\n t['\\uFEDE'] = '\\u0644';\n t['\\uFEDF'] = '\\u0644';\n t['\\uFEE0'] = '\\u0644';\n t['\\uFEE1'] = '\\u0645';\n t['\\uFEE2'] = '\\u0645';\n t['\\uFEE3'] = '\\u0645';\n t['\\uFEE4'] = '\\u0645';\n t['\\uFEE5'] = '\\u0646';\n t['\\uFEE6'] = '\\u0646';\n t['\\uFEE7'] = '\\u0646';\n t['\\uFEE8'] = '\\u0646';\n t['\\uFEE9'] = '\\u0647';\n t['\\uFEEA'] = '\\u0647';\n t['\\uFEEB'] = '\\u0647';\n t['\\uFEEC'] = '\\u0647';\n t['\\uFEED'] = '\\u0648';\n t['\\uFEEE'] = '\\u0648';\n t['\\uFEEF'] = '\\u0649';\n t['\\uFEF0'] = '\\u0649';\n t['\\uFEF1'] = '\\u064A';\n t['\\uFEF2'] = '\\u064A';\n t['\\uFEF3'] = '\\u064A';\n t['\\uFEF4'] = '\\u064A';\n t['\\uFEF5'] = '\\u0644\\u0622';\n t['\\uFEF6'] = '\\u0644\\u0622';\n t['\\uFEF7'] = '\\u0644\\u0623';\n t['\\uFEF8'] = '\\u0644\\u0623';\n t['\\uFEF9'] = '\\u0644\\u0625';\n t['\\uFEFA'] = '\\u0644\\u0625';\n t['\\uFEFB'] = '\\u0644\\u0627';\n t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n var charsLength = chars.length;\n if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n  return chars;\n }\n var s = '';\n for (var ii = charsLength - 1; ii >= 0; ii--) {\n  s += chars[ii];\n }\n return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _cff_parser = __w_pdfjs_require__(138);\n\nvar _glyphlist = __w_pdfjs_require__(141);\n\nvar _encodings = __w_pdfjs_require__(140);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects,\n      isCFFCIDFont: cff.isCIDFont,\n      fdSelect: cff.fdSelect,\n      fdArray: cff.fdArray\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font, glyphId) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop();\n            subrCode = null;\n            if (font.isCFFCIDFont) {\n              var fdIndex = font.fdSelect.getFDIndex(glyphId);\n              if (fdIndex >= 0 && fdIndex < font.fdArray.length) {\n                var fontDict = font.fdArray[fdIndex],\n                    subrs = void 0;\n                if (fontDict.privateDict && fontDict.privateDict.subrsIndex) {\n                  subrs = fontDict.privateDict.subrsIndex.objects;\n                }\n                if (subrs) {\n                  var numSubrs = subrs.length;\n                  n += numSubrs < 1240 ? 107 : numSubrs < 33900 ? 1131 : 32768;\n                  subrCode = subrs[n];\n                }\n              } else {\n                (0, _util.warn)('Invalid fd index for glyph index.');\n              }\n            } else {\n              subrCode = font.subrs[n + font.subrsBias];\n            }\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font, cmap.glyphId);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId], cmap.glyphId);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code, glyphId) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var fontMatrix = this.fontMatrix;\n      if (this.isCFFCIDFont) {\n        var fdIndex = this.fdSelect.getFDIndex(glyphId);\n        if (fdIndex >= 0 && fdIndex < this.fdArray.length) {\n          var fontDict = this.fdArray[fdIndex];\n          fontMatrix = fontDict.getByName('FontMatrix') || _util.FONT_IDENTITY_MATRIX;\n        } else {\n          (0, _util.warn)('Invalid fd index for glyph index.');\n        }\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds, glyphId);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n    this.isCFFCIDFont = cffInfo.isCFFCIDFont;\n    this.fdSelect = cffInfo.fdSelect;\n    this.fdArray = cffInfo.fdArray;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds, glyphId) {\n      compileCharString(code, cmds, this, glyphId);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _encodings = __w_pdfjs_require__(140);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = length > 0 ? stream.getBytes(length) : new Uint8Array(0);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data, lenIV);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _colorspace = __w_pdfjs_require__(132);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _ps_parser = __w_pdfjs_require__(150);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nfunction toNumberArray(arr) {\n  if (!Array.isArray(arr)) {\n    return null;\n  }\n  var length = arr.length;\n  for (var i = 0; i < length; i++) {\n    if (typeof arr[i] !== 'number') {\n      var result = new Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        result[_i] = +arr[_i];\n      }\n      return result;\n    }\n  }\n  return arr;\n}\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = toNumberArray(dict.getArray('Size'));\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = toNumberArray(dict.getArray('Encode'));\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push([0, size[i] - 1]);\n        }\n      } else {\n        encode = toMultiArray(encode);\n      }\n      var decode = toNumberArray(dict.getArray('Decode'));\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = toNumberArray(dict.getArray('C0')) || [0];\n      var c1 = toNumberArray(dict.getArray('C1')) || [1];\n      var n = dict.get('N');\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = toNumberArray(dict.getArray('Bounds'));\n      var encode = toNumberArray(dict.getArray('Encode'));\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fns = IR[4];\n      var tmpBuf = new Float32Array(1);\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(2);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(119);\n\nvar _colorspace = __w_pdfjs_require__(132);\n\nvar _stream = __w_pdfjs_require__(121);\n\nvar _jpeg_stream = __w_pdfjs_require__(127);\n\nvar _jpx = __w_pdfjs_require__(130);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image).catch(function (reason) {\n        (0, _util.warn)('Native image decoding failed -- trying to recover: ' + (reason && reason.message));\n        return image;\n      });\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MessageHandler = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(2);\n\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new _util.AbortException(reason.message);\n    case 'MissingPDFException':\n      return new _util.MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new _util.UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new _util.UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof _util.AbortException || reason instanceof _util.MissingPDFException || reason instanceof _util.UnexpectedResponseException || reason instanceof _util.UnknownErrorException) {\n    return reason;\n  }\n  return new _util.UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = (0, _util.createPromiseCapability)();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _util.ReadableStream({\n      start: function start(controller) {\n        var startCapability = (0, _util.createPromiseCapability)();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = (0, _util.createPromiseCapability)();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = (0, _util.createPromiseCapability)();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = (0, _util.createPromiseCapability)();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = (0, _util.createPromiseCapability)();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        (0, _util.assert)(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        (0, _util.assert)(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        (0, _util.assert)(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nexports.MessageHandler = MessageHandler;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/pdfjs-dist/build/pdf.worker.js\n// module id = 1146\n// module chunks = 1"],"sourceRoot":""}